"use strict";var bfmtUtilities=function(e){function t(e,t){const a=e&&Array.isArray(e.levels)?e.levels:[];let n;return a[n=null===t||isNaN(t)?a.length-1:+t-1]}function a(e){let t="";return e&&(t=e["proc id"]||e["unknown proc id"]||e["passive id"]||e["unknown passive id"]||""),t}var n,i;!function(e){e.BurstHeal="2",e.Unknown="UNKNOWN_PROC_EFFECT_ID"}(n||(n={})),function(e){e.TriggeredEffect="66",e.Unknown="UNKNOWN_PASSIVE_EFFECT_ID"}(i||(i={}));var s,r=Object.freeze({__proto__:null,get KNOWN_PROC_ID(){return n},get KNOWN_PASSIVE_ID(){return i}});!function(e){e.Attack="Attack"}(s||(s={}));const o=Object.freeze({1:{ID:"1",Name:"Parameter Boost"},2:{ID:"2",Name:"Elemental Parameter Boost"},3:{ID:"3",Name:"Type-Based Parameter Boost"},4:{ID:"4",Name:"Status Negation"},5:{ID:"5",Name:"Elemental Damage Reduction"},6:{ID:"6",Name:""},7:{ID:"7",Name:""},8:{ID:"8",Name:"Damage Reduction"},9:{ID:"9",Name:"Gradual BB Gauge Boost"},10:{ID:"10",Name:"HC Efficacy"},11:{ID:"11",Name:"HP-Conditional Parameter Boost"},12:{ID:"12",Name:"HP-Conditional Drop Rate Boost"},13:{ID:"13",Name:"BC Fill on Enemy Defeat"},14:{ID:"14",Name:"Damage Reduction (Chance)"},15:{ID:"15",Name:"Heal on Enemy Defeat"},16:{ID:"16",Name:"Heal on Battle Victory"},17:{ID:"17",Name:"HP Absorption"},19:{ID:"19",Name:"Drop Rate Boost"},20:{ID:"20",Name:"Status Infliction"},21:{ID:"21",Name:"Parameter Boost for First X Turns"},23:{ID:"23",Name:"BC Fill on Battle Victory"},24:{ID:"24",Name:"Heal when Attacked (Chance)"},25:{ID:"25",Name:"BC Fill when Hit (Chance)"},26:{ID:"26",Name:"Damage Counter (Chance)"},27:{ID:"27",Name:"Increased Target Chance"},28:{ID:"28",Name:"Decreased Target Chance"},29:{ID:"29",Name:"Defense Ignore (Chance)"},30:{ID:"30",Name:"BB Conditional Parameter Boost"},31:{ID:"31",Name:"Spark Damage Boost, Boost Drop Rate on Spark"},32:{ID:"32",Name:"BC Efficacy"},33:{ID:"33",Name:"Heal over Time"},34:{ID:"34",Name:"Critical Damage Boost"},35:{ID:"35",Name:"BC Fill when Normal Attacking"},36:{ID:"36",Name:"Extra Action"},37:{ID:"37",Name:"Hit Count Boost"},38:{ID:"38",Name:""},39:{ID:"39",Name:""},40:{ID:"40",Name:"Parameter Conversion"},41:{ID:"41",Name:"Unique Element Count Conditional Parameter Boost"},42:{ID:"42",Name:"Gender Parameter Boost"},43:{ID:"43",Name:"Damage Reduction to 1"},44:{ID:"44",Name:"Flat Parameter Boost"},45:{ID:"45",Name:"Critical Damage Negation"},46:{ID:"46",Name:"Parameter Boost Relative to HP Remainaing"},47:{ID:"47",Name:"BC Fill on Spark"},48:{ID:"48",Name:"BC Cost Reduction"},49:{ID:"49",Name:"BB Gauge Consumption Reduction"},50:{ID:"50",Name:"Elemental Damage Boost"},52:{ID:"52",Name:""},53:{ID:"53",Name:"Critical/Elemental Weakness Damage Negation"},55:{ID:"55",Name:"Conditional Effect based on HP Threshold"},58:{ID:"58",Name:"Damage Reduction when Guarding"},59:{ID:"59",Name:"BC Fill when Attacked when Guarding"},61:{ID:"61",Name:"BC Fill on Guard"},62:{ID:"62",Name:"Elemental Damage Reduction"},63:{ID:"63",Name:"Elemental Damage Reduction for first X Turns"},64:{ID:"64",Name:"BB Atk Boost"},65:{ID:"65",Name:"BC Fill on Critical"},66:{ID:"66",Name:"Add buff to Brave Burst"},69:{ID:"69",Name:"Chance KO Resistance (Angel Idol)"},70:{ID:"70",Name:"OD Gauge Fill Rate Boost"},71:{ID:"71",Name:"Status Counter"},72:{ID:"72",Name:"Turn End Effects Activate at Turn Start"},73:{ID:"73",Name:"Parameter Reduction Negation"},74:{ID:"74",Name:"Attack Boost on Status Afflicted Foes"},75:{ID:"75",Name:"Spark Vulnerability"},77:{ID:"77",Name:"Spark Damage Reduction"},78:{ID:"78",Name:"Conditional Effect after Damage Received Threshold"},79:{ID:"79",Name:"BC Fill after Damage Received Threshold"},80:{ID:"80",Name:"Conditional Effect after Damage Dealt Threshold"},81:{ID:"81",Name:"BC Fill after Damage Dealt Threshold"},82:{ID:"82",Name:"Conditional Effect after BC Received Threshold"},84:{ID:"84",Name:"Conditional Effect after HC Received Threshold"},85:{ID:"85",Name:"BC Fill after HC Received Threshold"},86:{ID:"86",Name:"Conditional Effect after Spark Threshold"},88:{ID:"88",Name:"Conditional Effect on Guard"},89:{ID:"89",Name:"Conditional Effect on Critical"},90:{ID:"90",Name:"Status Infliction on Critical"},91:{ID:"91",Name:""},92:{ID:"92",Name:"Negate Defense Ignore"},93:{ID:"93",Name:"Added Elements"},96:{ID:"96",Name:"Normal Attacks Hit All Foes"},97:{ID:"97",Name:"Player EXP Boost"},99:{ID:"99",Name:""},100:{ID:"100",Name:"Spark Critical"},101:{ID:"101",Name:"Heal on Spark"},102:{ID:"102",Name:"Added Elements"},103:{ID:"103",Name:"BB Atk Boost when HP Passes Threshold"},104:{ID:"104",Name:"Spark Boost when HP Passes Threshold"},105:{ID:"105",Name:"Turn-Based Parameter Boost"},106:{ID:"106",Name:"Conditional Effect after Activating Overdrive"},107:{ID:"107",Name:"Add Effect to Leader Skill"},109:{ID:"109",Name:"BB Gauge Reduction (Chance)"},110:{ID:"110",Name:"BC Efficacy Reduction (Chance)"},111:{ID:"111",Name:"Increase Brave Burst Activation Rate"},112:{ID:"112",Name:"ABP/CBP Boost"},113:{ID:"113",Name:"Conditional Effect after HP Threshold"},114:{ID:"114",Name:"Inflict Buff when Attacked"},127:{ID:"127",Name:"Additional Damage (Damage over Time) Reduction"},128:{ID:"128",Name:"Damage Reduction from Normal Attacks"},143:{ID:"143",Name:"Break Atk Parameter Limit"},10008:{ID:"10008",Name:"Damage Reduction from Specific Sources"},11004:{ID:"11004",Name:"Elemental Spark Damage Boost"},11005:{ID:"11005",Name:"Elemental Critical Damage Boost"},11006:{ID:"11006",Name:"Summoner EXP Boost"},11009:{ID:"11009",Name:"Effect Duration Boost"},"66,1":{ID:"66,1",Name:""}}),c=Object.freeze({0:{ID:"0",Name:"",Type:""},1:{ID:"1",Name:"Regular Damage",Type:"Attack"},2:{ID:"2",Name:"Burst Heal",Type:""},3:{ID:"3",Name:"Heal over Time",Type:""},4:{ID:"4",Name:"BB Gauge Refill",Type:""},5:{ID:"5",Name:"Parameter Boost",Type:""},6:{ID:"6",Name:"Drop Rate",Type:""},7:{ID:"7",Name:"Guaranteed KO Resistance (Angel Idol)",Type:""},8:{ID:"8",Name:"Max HP Boost",Type:""},9:{ID:"9",Name:"Parameter Reduction",Type:""},10:{ID:"10",Name:"Status Cleanse",Type:""},11:{ID:"11",Name:"Status Infliction",Type:""},12:{ID:"12",Name:"Revive (Guaranteed)",Type:""},13:{ID:"13",Name:"Random Target Damage",Type:"Attack"},14:{ID:"14",Name:"Lifesteal Damage",Type:"Attack"},16:{ID:"16",Name:"Elemental Damage Reduction",Type:""},17:{ID:"17",Name:"Status Negation",Type:""},18:{ID:"18",Name:"Damage Reduction",Type:""},19:{ID:"19",Name:"Gradual BB Gauge Boost",Type:""},20:{ID:"20",Name:"BC Fill on Hit",Type:""},22:{ID:"22",Name:"Defense Ignore",Type:""},23:{ID:"23",Name:"Spark Boost",Type:""},24:{ID:"24",Name:"Parameter Conversion",Type:""},26:{ID:"26",Name:"Hit Count Boost",Type:""},27:{ID:"27",Name:"Proportional Damage",Type:"Attack"},28:{ID:"28",Name:"Fixed Damage",Type:"Attack"},29:{ID:"29",Name:"Multi-Element Damage",Type:"Attack"},30:{ID:"30",Name:"Add Elements",Type:""},31:{ID:"31",Name:"Instant BB Gauge Fill",Type:""},32:{ID:"32",Name:"Element Shift",Type:""},33:{ID:"33",Name:"Buff Removal (Chance)",Type:""},34:{ID:"34",Name:"BB Gauge Reduction (Chance)",Type:""},36:{ID:"36",Name:"Leader Skill Lock (Chance)",Type:""},37:{ID:"37",Name:"Summon Unit",Type:""},38:{ID:"38",Name:"Status Cure",Type:""},39:{ID:"39",Name:"Elemental Damage Reduction",Type:""},40:{ID:"40",Name:"Status Infliction Added to Attack",Type:""},42:{ID:"42",Name:"",Type:""},43:{ID:"43",Name:"Instant OD Fill",Type:""},44:{ID:"44",Name:"Damage over Time (Additional Damage)",Type:""},45:{ID:"45",Name:"BB Atk Boost",Type:""},46:{ID:"46",Name:"Non-Lethal Proportional Damage",Type:"Attack"},47:{ID:"47",Name:"HP Scaled Damage",Type:"Attack"},48:{ID:"48",Name:"Piercing Proportional Damage",Type:"Attack"},49:{ID:"49",Name:"Retire",Type:""},50:{ID:"50",Name:"Damage Counter",Type:""},51:{ID:"51",Name:"Parameter Reduction Added to Attack",Type:""},52:{ID:"52",Name:"BC Efficacy",Type:""},53:{ID:"53",Name:"Status Counter",Type:""},54:{ID:"54",Name:"Critical Damage Boost",Type:""},55:{ID:"55",Name:"Elemental Damage Boost",Type:""},56:{ID:"56",Name:"Chance KO Resistance (Angel Idol)",Type:""},57:{ID:"57",Name:"BC Efficacy Reduction",Type:""},58:{ID:"58",Name:"Spark Vulnerability",Type:""},59:{ID:"59",Name:"BB Atk Reduction",Type:""},60:{ID:"60",Name:"",Type:""},61:{ID:"61",Name:"BB-Scaled Damage",Type:"Attack"},62:{ID:"62",Name:"Barrier",Type:""},63:{ID:"63",Name:"Selective Buff Wipe",Type:""},64:{ID:"64",Name:"Consecutive Damage",Type:"Attack"},65:{ID:"65",Name:"Attack Boost on Status Afflicted Foes",Type:""},66:{ID:"66",Name:"Revive (Chance)",Type:""},67:{ID:"67",Name:"BC Fill on Spark",Type:""},68:{ID:"68",Name:"Damage Reduction when Guarding",Type:""},69:{ID:"69",Name:"BC Fill on Guard",Type:""},70:{ID:"70",Name:"",Type:""},71:{ID:"71",Name:"BB Gauge Fill Rate Debuff",Type:""},73:{ID:"73",Name:"Parameter Reduction Negation",Type:""},75:{ID:"75",Name:"Element Squad-Scaled Damage",Type:"Attack"},76:{ID:"76",Name:"Extra Action",Type:""},78:{ID:"78",Name:"Self Parameter Boost",Type:""},79:{ID:"79",Name:"Player EXP Boost",Type:""},82:{ID:"82",Name:"",Type:""},83:{ID:"83",Name:"Spark Critical",Type:""},84:{ID:"84",Name:"OD Gauge Fill Rate",Type:""},85:{ID:"85",Name:"Heal when Attacked",Type:""},86:{ID:"86",Name:"HP Absorption",Type:""},87:{ID:"87",Name:"Heal on Spark",Type:""},88:{ID:"88",Name:"Self Spark Boost",Type:""},89:{ID:"89",Name:"Self Parameter Conversion",Type:""},92:{ID:"92",Name:"Self Max HP Boost",Type:""},93:{ID:"93",Name:"Spark/Critical/Elemental Weakness Damage Reduction",Type:""},94:{ID:"94",Name:"Normal Attacks Hit All Foes",Type:""},95:{ID:"95",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},96:{ID:"96",Name:"Nullify Extra Skill Effects (ES Lock)",Type:""},97:{ID:"97",Name:"Element Target Damage",Type:"Attack"},113:{ID:"113",Name:"Gradual OD Fill",Type:""},119:{ID:"119",Name:"Gradual BC Drain",Type:""},123:{ID:"123",Name:"OD Gauge Reduction",Type:""},126:{ID:"126",Name:"Damage over Time (Additional Damage) Mitigation",Type:""},127:{ID:"127",Name:"Lock On",Type:""},130:{ID:"130",Name:"Parameter Reduction Counter",Type:""},131:{ID:"131",Name:"",Type:""},132:{ID:"132",Name:"Critical/Elemental Weakness Vulnerability",Type:""},901:{ID:"901",Name:"Raid Heal (on Map)",Type:""},902:{ID:"902",Name:"Raid Parameter Boost",Type:""},903:{ID:"903",Name:"Raid Boss Reveal",Type:""},905:{ID:"905",Name:"Raid Teleport",Type:""},906:{ID:"906",Name:"Raid Flee",Type:""},907:{ID:"907",Name:"Raid Damage Reduction",Type:""},908:{ID:"908",Name:"Raid Item Drop Rate Boost",Type:""},1e4:{ID:"10000",Name:"Taunt",Type:""},10001:{ID:"10001",Name:"Stealth",Type:""},10002:{ID:"10002",Name:"Shield (old)",Type:""},10003:{ID:"10003",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},10004:{ID:"10004",Name:"Damage Immunity",Type:""},10005:{ID:"10005",Name:"Turn Skip (short duration)",Type:""},10006:{ID:"10006",Name:"Turn Skip (long duration)",Type:""},10007:{ID:"10007",Name:"Evasion",Type:""},10009:{ID:"10009",Name:"",Type:""},10012:{ID:"10012",Name:"OD Drain",Type:""},10015:{ID:"10015",Name:"Elemental Spark Boost",Type:""},10016:{ID:"10016",Name:"Element Critical Damage Boost",Type:""},10017:{ID:"10017",Name:"Elemental Shield",Type:""},10018:{ID:"10018",Name:"Max HP Reduction",Type:""},10019:{ID:"10019",Name:"Effect Purge",Type:""},10020:{ID:"10020",Name:"Piercing Damage",Type:"Attack"},10021:{ID:"10021",Name:"Active Healing Reduction",Type:""},10022:{ID:"10022",Name:"Passive Healing Reduction",Type:""},10023:{ID:"10023",Name:"HC Efficacy Reduction",Type:""},10025:{ID:"10025",Name:"KO Resistance Negation",Type:""},10026:{ID:"10026",Name:"Doom",Type:""},11e3:{ID:"11000",Name:"Negative HP-Scaled Damage",Type:"Attack"},11001:{ID:"11001",Name:"Max HP% DoT of Weaker Element Enemies",Type:""},11002:{ID:"11002",Name:"HP Limit Break, Convert to HP",Type:""},11003:{ID:"11003",Name:"Effect Negation",Type:""},70001:{ID:"70001",Name:"Mana Bubble Shield",Type:""},70002:{ID:"70002",Name:"Recast",Type:""},"2-5":{ID:"2-5",Name:"Burst Heal and DEF/REC Boost",Type:""}});function F(e,t=c){return t&&"object"==typeof t&&Object.hasOwnProperty.call(t,e)?t[e]:void 0}function D(e,t){const a=F(e,t);return!!a&&a.Type===s.Attack}var p,l,u,U,E,B,m,f,R,N,T,d,_,A,I,g,P,y,O,k=Object.freeze({__proto__:null,getLevelEntryForBurst:t,getEffectsForBurst:function(e,a){const n=t(e,a);return n&&Array.isArray(n.effects)?n.effects:[]},getExtraAttackDamageFramesEntry:function(e,t="0.0/0",i){const s=(Array.isArray(e)?e:[]).filter(e=>{const t=a(e);return t===n.BurstHeal||D(t,i)}).reduce((e,t,a)=>{const n=0===a,i=t["frame times"].length,s=t["hit dmg% distribution"],r=t["frame times"];for(let t=n?0:1;t<i;++t)e.push({damage:s[t],time:r[t]});return e},[]),r={"effect delay time(ms)/frame":t,"frame times":[],"hit dmg% distribution":[],"hit dmg% distribution (total)":0,hits:0};return s.sort((e,t)=>e.time-t.time).forEach(({time:e,damage:t})=>{r["frame times"].push(e),r["hit dmg% distribution"].push(t),r["hit dmg% distribution (total)"]+=t}),r.hits=r["frame times"].length,r}});function v(e,t=o){return t&&"object"==typeof t&&Object.hasOwnProperty.call(t,e)?t[e]:void 0}function h(e,t){const a=F(e,t);return!!a&&a.Name||""}function C(e,t){const a=v(e,t);return!!a&&a.Name||""}function W(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"proc id")||Object.hasOwnProperty.call(e,"unknown proc id"))}function b(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"passive id")||Object.hasOwnProperty.call(e,"unknown passive id"))}!function(e){e.Poison="poison",e.Weak="weak",e.Sick="sick",e.Injury="injury",e.Curse="curse",e.Paralysis="paralysis",e.AttackReduction="atk down",e.DefenseReduction="def down",e.RecoveryReduction="rec down",e.Unknown="unknown"}(p||(p={})),function(e){e.hp_50pr_under="hp_50pr_under",e.hp_50pr_over="hp_50pr_over",e.hp_75pr_under="hp_75pr_under",e.hp_25pr_under="hp_25pr_under",e.hp_min="hp_min",e.hp_max="hp_max",e.atk_max="atk_max",e.random="random"}(l||(l={})),function(e){e.Moving="1",e.Teleporting="2",e.NonMoving="3"}(u||(u={})),function(e){e.Aoe="aoe",e.Single="single",e.Random="random"}(U||(U={})),function(e){e.Aoe="AOE",e.Single="ST",e.Random="RT"}(E||(E={})),function(e){e.Self="self",e.Party="party",e.Enemy="enemy"}(B||(B={})),function(e){e.AddPassive="passive",e.EnhanceBb="add to bb",e.EnhanceSbb="add to sbb",e.EnhanceUbb="add to ubb",e.EnhancePassive="add to passive"}(m||(m={})),function(e){e.None="None",e["Status Enhancing"]="Status Enhancing",e.Critical="Critical",e.Drop="Drop",e["Ailment Inducing"]="Ailment Inducing",e["Element Fusion"]="Element Fusion",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e["Target Setting"]="Target Setting",e["Damage Deflecting"]="Damage Deflecting",e["Damage Reducing"]="Damage Reducing",e.Spark="Spark",e["Defense Piercing"]="Defense Piercing",e["Attack Boosting"]="Attack Boosting",e.Special="Special"}(f||(f={})),function(e){e[e.None=0]="None",e[e["Status Enhancing"]=1]="Status Enhancing",e[e.Critical=2]="Critical",e[e.Drop=3]="Drop",e[e["Ailment Inducing"]=4]="Ailment Inducing",e[e["Element Fusion"]=5]="Element Fusion",e[e["BB Gauge"]=6]="BB Gauge",e[e["HP Recovery"]=7]="HP Recovery",e[e["Target Setting"]=8]="Target Setting",e[e["Damage Deflecting"]=9]="Damage Deflecting",e[e["Damage Reducing"]=10]="Damage Reducing",e[e.Spark=11]="Spark",e[e["Defense Piercing"]=12]="Defense Piercing",e[e["Attack Boosting"]=13]="Attack Boosting",e[e.Special=14]="Special"}(R||(R={})),function(e){e["Parameter Boost"]="Parameter Boost",e.Spark="Spark",e["Critical Hits"]="Critical Hits",e["Attack Boost"]="Attack Boost",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e.Drops="Drops",e["Ailment Resistance"]="Ailment Resistance",e["Ailment Infliction"]="Ailment Infliction",e["Damage Reduction"]="Damage Reduction",e.Special="Special",e.Unknown="Unknown"}(N||(N={})),function(e){e["Parameter Boost"]="1",e.Spark="2",e["Critical Hits"]="3",e["Attack Boost"]="4",e["BB Gauge"]="5",e["HP Recovery"]="6",e.Drops="7",e["Ailment Resistance"]="8",e["Ailment Infliction"]="9",e["Damage Reduction"]="10",e.Special="11"}(T||(T={})),function(e){e.Attack="attack",e.Idle="idle",e.Move="move"}(d||(d={})),function(e){e.Fire="fire",e.Water="water",e.Earth="earth",e.Thunder="thunder",e.Light="light",e.Dark="dark"}(_||(_={})),function(e){e.Male="male",e.Female="female",e.Other="other"}(A||(A={})),function(e){e.Ineligible="not eligible for achievement",e.Farmable="farmable",e.RareSummon="rare summon",e.ExtraSkillElgif="extra skill elgif"}(I||(I={})),function(e){e.Normal="normal",e.Evolution="evo",e.Enhancing="enhancing",e.Sale="sale"}(g||(g={})),function(e){e.Lord="lord",e.Anima="anima",e.Breaker="breaker",e.Guardian="guardian",e.Oracle="oracle",e.Rex="rex"}(P||(P={})),function(e){e.Consumable="consumable",e.Material="material",e.Sphere="sphere",e.EvolutionMaterial="evomat",e.SummonerConsumable="summoner_consumable",e.LeaderSkillSphere="ls_sphere"}(y||(y={})),function(e){e.Mimic="60142",e.BatMimic="60143",e.DragonMimic="60144",e.MetalMimic="60224"}(O||(O={}));const H={1e3:O.Mimic,1100:O.BatMimic,1101:O.BatMimic,1200:O.DragonMimic,1300:O.MetalMimic};var S,K,w,L,M,j,G=Object.freeze({__proto__:null,get Ailment(){return p},get ArenaCondition(){return l},get MoveType(){return u},get TargetArea(){return U},get TargetAreaShorthand(){return E},get TargetType(){return B},get SpPassiveType(){return m},get SphereTypeName(){return f},get SphereTypeId(){return R},get SpCategoryName(){return N},get SpCategoryId(){return T},get UnitAnimationKey(){return d},get UnitElement(){return _},get UnitGender(){return A},get UnitGettingType(){return I},get UnitKind(){return g},get UnitType(){return P},get ItemType(){return y},get MimicUnitIds(){return O},MimicMonsterGroupMapping:H});function $(e){const t=Array.isArray(e.previousSources)?e.previousSources.slice():[];return t.unshift(function(e){return`${e.source}-${e.sourceId}`}(e)),t}function x(e){const t=e&&Array.isArray(e.conditions)&&e.conditions||[],a={units:new Set,items:new Set,sphereTypes:new Set,unknowns:new Set};return t.forEach((e,t)=>{"sphere category required (raw)"in e?a.sphereTypes.add(e["sphere category required (raw)"]):"item required"in e?e["item required"].forEach(e=>{a.items.add(e)}):"unit required"in e?e["unit required"].forEach(e=>{a.units.add(`${e.id}`)}):a.unknowns.add(`type:${e.type_id||t},condition:${e.condition_id||t}`)}),Object.entries(a).filter(e=>e[1].size>0).reduce((e,t)=>(e[t[0]]=Array.from(t[1]),e),{})}function Y(e,t){const a=t.source===K.LeaderSkill||e.sp_type===m.EnhancePassive||e["passive target"]===B.Party;return{targetType:a?B.Party:B.Self,targetArea:a?U.Aoe:U.Single}}function X(e){return{targetArea:e["target area"],targetType:e["target type"]}}function V(e,t=0){return null===e||isNaN(e)?t:+e}function z(e=[],t=0){return e.reduce((e,a,n)=>(a&&"0"!==a&&(e[`param_${t+n}`]=a),e),{})}let q,J;function Q(e){return q&&!e||function(e){const t={0:w.All,1:_.Fire,2:_.Water,3:_.Earth,4:_.Thunder,5:_.Light,6:_.Dark},a={1:p.Poison,2:p.Weak,3:p.Sick,4:p.Injury,5:p.Curse,6:p.Paralysis,7:p.AttackReduction,8:p.DefenseReduction,9:p.RecoveryReduction},n=(e,t,a)=>{return{targetData:(a&&a.getProcTargetData||X)(e),sources:(a&&a.createSourcesFromContext||$)(t),effectDelay:e["effect delay time(ms)/frame"]}},i=e=>e.params.split(","),s=(e,{originalId:t,sources:a,targetData:n,effectDelay:i})=>Object.assign({id:j.UNKNOWN_PROC_BUFF_PARAMS,originalId:t,effectDelay:i,sources:a,value:e},n),r=({originalId:e,sources:t,buffs:a,duration:n,targetData:i})=>Object.assign({id:j.TURN_DURATION_MODIFICATION,originalId:e,sources:t,value:{buffs:a,duration:n}},i),o=(e,t,a)=>{let n;return e&&e.length>0&&(n=(a&&a.createUnknownParamsValue||z)(e,t)),n};e.set("1",(e,t,a)=>{const{targetData:r,sources:c,effectDelay:F}=n(e,t,a),D=+(t.damageFrames&&t.damageFrames.hits||0),p=+(t.damageFrames&&t.damageFrames["hit dmg% distribution (total)"]||0),l={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let u;if(e.params){let t;[l["atk%"],l.flatAtk,l["crit%"],l["bc%"],l["hc%"],l["dmg%"],...t]=i(e),u=o(t,6,a)}else l["atk%"]=e["bb atk%"],l.flatAtk=e["bb flat atk"],l["crit%"]=e["bb crit%"],l["bc%"]=e["bb bc%"],l["hc%"]=e["bb hc%"],l["dmg%"]=e["bb dmg%"];const U=Object.entries(l).filter(([,e])=>e&&+e).reduce((e,[t,a])=>(e[t]=+a,e),{}),E=[Object.assign({id:"proc:1",originalId:"1",sources:c,effectDelay:F,value:Object.assign(Object.assign({},U),{hits:D,distribution:p})},r)];return u&&E.push(s(u,{originalId:"1",sources:c,targetData:r,effectDelay:F})),E}),e.set("2",(e,t,a)=>{const{targetData:r,sources:c,effectDelay:F}=n(e,t,a),D={healLow:"0",healHigh:"0","healerRec%":0};let p;if(e.params){let t,n,s;[D.healLow,D.healHigh,t,n,...s]=i(e),D["healerRec%"]=(100+V(t))*(1+V(n)/100)/10,p=o(s,4,a)}else D.healLow=e["heal low"],D.healHigh=e["heal high"],D["healerRec%"]=e["rec added% (from healer)"];Object.keys(D).forEach(e=>{D[e]=V(D[e])});const l=[Object.assign({id:"proc:2",originalId:"2",sources:c,effectDelay:F,value:D},r)];return p&&l.push(s(p,{originalId:"2",sources:c,targetData:r,effectDelay:F})),l}),e.set("3",(e,t,a)=>{const{targetData:c,sources:F,effectDelay:D}=n(e,t,a),p={healLow:"0",healHigh:"0","targetRec%":0,turnDuration:"0"};let l;if(e.params){let t,n;[p.healLow,p.healHigh,t,p.turnDuration,...n]=i(e),p["targetRec%"]=10*(1+V(t)/100),l=o(n,4,a)}else p.healLow=e["gradual heal low"],p.healHigh=e["gradual heal high"],p["targetRec%"]=e["rec added% (from target)"],p.turnDuration=e["gradual heal turns (8)"];Object.keys(p).forEach(e=>{p[e]=V(p[e])});const u=[];return 0!==p.healLow||0!==p.healHigh?u.push(Object.assign({id:"proc:3",originalId:"3",sources:F,effectDelay:D,duration:p.turnDuration,value:{healLow:p.healLow,healHigh:p.healHigh,"targetRec%":p["targetRec%"]}},c)):0!==p.turnDuration&&u.push(r({originalId:"3",sources:F,buffs:["proc:3"],duration:p.turnDuration,targetData:c})),l&&u.push(s(l,{originalId:"3",sources:F,targetData:c,effectDelay:D})),u}),e.set("4",(e,t,a)=>{const{targetData:r,sources:c,effectDelay:F}=n(e,t,a);let D,p=0,l=0;if(e.params){const[t,n,...s]=i(e);p=V(t),l=V(n),D=o(s,2,a)}else"bb bc fill"in e&&(p=V(e["bb bc fill"])),"bb bc fill%"in e&&(l=V(e["bb bc fill%"]));const u=[];return 0!==p&&u.push(Object.assign({id:"proc:4:flat",originalId:"4",sources:c,effectDelay:F,value:p},r)),0!==l&&u.push(Object.assign({id:"proc:4:percent",originalId:"4",sources:c,effectDelay:F,value:l},r)),D&&u.push(s(D,{originalId:"4",sources:c,targetData:r,effectDelay:F})),u}),e.set("5",(e,a,c)=>{const{targetData:F,sources:D,effectDelay:p}=n(e,a,c),l={element:w.All,atk:"0",def:"0",rec:"0",crit:"0",turnDuration:"0"},u=["atk","def","rec","crit"];let U;if(e.params){let a,n;[n,l.atk,l.def,l.rec,l.crit,l.turnDuration,...a]=i(e),l.element=t[n]||w.Unknown,U=o(a,6,c)}else{const t=e["element buffed"];l.element="all"===t?w.All:t||w.Unknown;const a=Object.keys(e);u.forEach(t=>{const n=a.find(e=>e.startsWith(`${t}% buff`));n&&(l[t]=V(e[n]))}),l.turnDuration=V(e["buff turns"])}u.concat(["turnDuration"]).forEach(e=>{l[e]=V(l[e])});const E=u.some(e=>0!==l[e]),B=[];return E?u.forEach(e=>{const t=l[e];if(0!==t){const a=Object.assign({id:`proc:5:${e}`,originalId:"5",sources:D,effectDelay:p,duration:l.turnDuration,value:t},F);l.element!==w.All&&(a.conditions={targetElements:[l.element]}),B.push(a)}}):0!==l.turnDuration&&B.push(r({originalId:"5",sources:D,buffs:u.map(e=>`proc:5:${e}`),duration:l.turnDuration,targetData:F})),U&&B.push(s(U,{originalId:"5",sources:D,targetData:F,effectDelay:p})),B}),e.set("6",(e,t,a)=>{const{targetData:c,sources:F,effectDelay:D}=n(e,t,a),p={bc:"0",hc:"0",item:"0",turnDuration:"0"},l=["bc","hc","item"];let u;if(e.params){let t;[p.bc,p.hc,p.item,p.turnDuration,...t]=i(e),u=o(t,4,a)}else p.bc=e["bc drop rate% buff (10)"],p.hc=e["hc drop rate% buff (9)"],p.item=e["item drop rate% buff (11)"],p.turnDuration=e["drop buff rate turns"];l.concat(["turnDuration"]).forEach(e=>{p[e]=V(p[e])});const U=l.some(e=>0!==p[e]),E=[];return U?l.forEach(e=>{const t=p[e];0!==t&&E.push(Object.assign({id:`proc:6:${e}`,originalId:"6",sources:F,effectDelay:D,duration:p.turnDuration,value:t},c))}):0!==p.turnDuration&&E.push(r({originalId:"6",sources:F,buffs:l.map(e=>`proc:6:${e}`),duration:p.turnDuration,targetData:c})),u&&E.push(s(u,{originalId:"6",sources:F,targetData:c,effectDelay:D})),E}),e.set("7",(e,t,a)=>{const{targetData:r,sources:c,effectDelay:F}=n(e,t,a);let D,p=0;if(e.params){const[t,...n]=i(e);p=V(t),D=o(n,1,a)}else p=V(e["angel idol recover hp%"]);const l=[Object.assign({id:"proc:7",originalId:"7",sources:c,effectDelay:F,value:p},r)];return D&&l.push(s(D,{originalId:"7",sources:c,targetData:r,effectDelay:F})),l}),e.set("8",(e,t,a)=>{const{targetData:r,sources:c,effectDelay:F}=n(e,t,a);let D,p=0,l=0;if(e.params){const[t,n,...s]=i(e);p=V(t),l=V(n),D=o(s,2,a)}else"max hp increase"in e&&(p=V(e["max hp increase"])),"max hp% increase"in e&&(l=V(e["max hp% increase"]));const u=[];return 0!==p&&u.push(Object.assign({id:"proc:8:flat",originalId:"8",sources:c,effectDelay:F,value:p},r)),0!==l&&u.push(Object.assign({id:"proc:8:percent",originalId:"8",sources:c,effectDelay:F,value:l},r)),D&&u.push(s(D,{originalId:"8",sources:c,targetData:r,effectDelay:F})),u}),e.set("9",(e,a,c)=>{const{targetData:F,sources:D,effectDelay:p}=n(e,a,c),l={0:"atk",1:"def",2:"rec"},u=["atk","def","rec"],U={element:w.All,statReductionEntries:[],turnDuration:0};let E;if(e.params){const[a,n,s,r,F,D,p,B,...m]=i(e);U.element=t[a]||w.Unknown,U.turnDuration=V(B),[[n,s,r],[F,D,p]].forEach(([e,t,a])=>{const n=V(e)-1,i=V(t),s=V(a);3===n?U.statReductionEntries.push(...u.map(e=>({stat:e,value:i,chance:s}))):U.statReductionEntries.push({stat:l[n]||"unknown",value:i,chance:s})}),E=o(m,8,c)}else{const t=e["element buffed"];U.element="all"===t?w.All:t||w.Unknown,["buff #1","buff #2"].forEach(t=>{const a=e[t];if(a){const e=V(a["proc chance%"]),t=Object.keys(a);u.forEach(n=>{const i=t.find(e=>e.startsWith(`${n}% buff`));i&&U.statReductionEntries.push({stat:n,value:V(a[i]),chance:e})})}}),U.turnDuration=V(e["buff turns"])}const B=[];let m=!1;return U.statReductionEntries.forEach(({stat:e,value:t,chance:a})=>{if(0!==t||0!==a){m=!0;const n=Object.assign({id:`proc:9:${e}`,originalId:"9",sources:D,effectDelay:p,duration:U.turnDuration,value:{value:t,chance:a}},F);U.element!==w.All&&(n.conditions={targetElements:[U.element]}),B.push(n)}}),m||0===U.turnDuration||B.push(r({originalId:"9",sources:D,buffs:u.map(e=>`proc:9:${e}`),duration:U.turnDuration,targetData:F})),E&&B.push(s(E,{originalId:"9",sources:D,targetData:F,effectDelay:p})),B}),e.set("10",(e,t,r)=>{const{targetData:c,sources:F,effectDelay:D}=n(e,t,r),l=[];let u;if(e.params){const t=i(e),n=t.slice(0,8),s=t.slice(8);n.filter(e=>"0"!==e).forEach(e=>{l.push(a[e]||p.Unknown)}),u=o(s,8,r)}else Object.values(a).forEach(t=>{`remove ${t}`in e&&l.push(t)}),"remove all status ailments"in e&&l.push(p.Unknown);const U=l.map(e=>Object.assign({id:`proc:10:${e}`,originalId:"10",sources:F,effectDelay:D,value:!0},c));return u&&U.push(s(u,{originalId:"10",sources:F,targetData:c,effectDelay:D})),U}),e.set("11",(e,t,r)=>{const{targetData:c,sources:F,effectDelay:D}=n(e,t,r),l=[];let u;if(e.params){let t=i(e);t.length%2!=0&&"0"!==t[t.length-1]&&(u=o(t.slice(-1),t.length-1,r),t=t.slice(0,t.length-1));const n=t.length;for(let e=0;e<n;e+=2){const n=t[e],i=V(t[e+1]);if("0"!==n||0!==i){const e=a[n]||p.Unknown;l.push({ailment:e,chance:i})}}}else Object.values(a).forEach(t=>{let a;(a=t===p.Weak?"weaken%":t===p.AttackReduction||t===p.DefenseReduction||t===p.RecoveryReduction?t:`${t}%`)in e&&l.push({ailment:t,chance:V(e[a])})});const U=l.map(({ailment:e,chance:t})=>Object.assign({id:`proc:11:${e}`,originalId:"11",sources:F,effectDelay:D,value:t},c));return u&&U.push(s(u,{originalId:"11",sources:F,targetData:c,effectDelay:D})),U})}(q=new Map),q}function Z(e){return J&&!e||function(e){const t={1:_.Fire,2:_.Water,3:_.Earth,4:_.Thunder,5:_.Light,6:_.Dark,X:w.OmniParadigm},a={1:P.Lord,2:P.Anima,3:P.Breaker,4:P.Guardian,5:P.Oracle,6:P.Rex},n=["atk","def","rec","crit","hp"],i=["poison","weak","sick","injury","curse","paralysis"],s=(e,t,a)=>{return{conditionInfo:(a&&a.processExtraSkillConditions||x)(e),targetData:(a&&a.getPassiveTargetData||Y)(e,t),sources:(a&&a.createSourcesFromContext||$)(t)}},r=e=>e.params.split(","),o=(e,{originalId:t,sources:a,targetData:n,conditionInfo:i})=>Object.assign({id:j.UNKNOWN_PASSIVE_BUFF_PARAMS,originalId:t,sources:a,value:e,conditions:Object.assign({},i)},n),c=(e,t,a)=>{let n;return e&&e.length>0&&(n=(a&&a.createUnknownParamsValue||z)(e,t)),n},F=({effect:e,context:t,injectionContext:a,effectKey:n,buffId:i,originalId:F})=>{const{conditionInfo:D,targetData:p,sources:l}=s(e,t,a),u=e,U=[];let E,B=0;if(u.params){const[e,...t]=r(u);B=V(e),E=c(t,1,a)}else B=V(u[n]);return 0!==B&&U.push(Object.assign({id:i,originalId:F,sources:l,value:B,conditions:Object.assign({},D)},p)),E&&U.push(o(E,{originalId:F,sources:l,targetData:p,conditionInfo:D})),U};e.set("1",(e,t,a)=>{const{conditionInfo:i,targetData:F,sources:D}=s(e,t,a),p=e,l=[],u={atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let U;if(p.params){let e;[u.atk,u.def,u.rec,u.crit,u.hp,...e]=r(p),U=c(e,5,a)}else u.hp=p["hp% buff"],u.atk=p["atk% buff"],u.def=p["def% buff"],u.rec=p["rec% buff"],u.crit=p["crit% buff"];return n.forEach(e=>{const t=V(u[e]);0!==t&&l.push(Object.assign({id:`passive:1:${e}`,originalId:"1",sources:D,value:t,conditions:Object.assign({},i)},F))}),U&&l.push(o(U,{originalId:"1",sources:D,targetData:F,conditionInfo:i})),l}),e.set("2",(e,a,i)=>{const{conditionInfo:F,targetData:D,sources:p}=s(e,a,i),l=e,u=[],U={elements:[],atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let E;if(l.params){let e,a,n;[a,n,U.atk,U.def,U.rec,U.crit,U.hp,...e]=r(l),[a,n].forEach(e=>{e&&"0"!==e&&U.elements.push(t[e]||w.Unknown)}),E=c(e,7,i)}else U.elements=l["elements buffed"],U.hp=l["hp% buff"],U.atk=l["atk% buff"],U.def=l["def% buff"],U.rec=l["rec% buff"],U.crit=l["crit% buff"];const B=e=>Object.assign({id:`passive:2:${e}`,originalId:"2",sources:p,value:V(U[e])},D);return U.elements.length>0?U.elements.forEach(e=>{n.forEach(t=>{0!==V(U[t])&&u.push(Object.assign(Object.assign({},B(t)),{conditions:Object.assign(Object.assign({},F),{targetElements:[e]})}))})}):n.forEach(e=>{0!==V(U[e])&&u.push(Object.assign(Object.assign({},B(e)),{conditions:Object.assign(Object.assign({},F),{targetElements:[w.Unknown]})}))}),E&&u.push(o(E,{originalId:"2",sources:p,targetData:D,conditionInfo:F})),u}),e.set("3",(e,t,i)=>{const{conditionInfo:F,targetData:D,sources:p}=s(e,t,i),l=e,u=[],U={unitType:"",atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let E;if(l.params){let e,t;[t,U.atk,U.def,U.rec,U.crit,U.hp,...e]=r(l),t&&"0"!==t&&(U.unitType=a[t]||"unknown"),E=c(e,6,i)}else U.unitType=l["unit type buffed"],U.hp=l["hp% buff"],U.atk=l["atk% buff"],U.def=l["def% buff"],U.rec=l["rec% buff"],U.crit=l["crit% buff"];const B=U.unitType||"unknown";return n.forEach(e=>{const t=V(U[e]);0!==t&&u.push(Object.assign({id:`passive:3:${e}`,originalId:"3",sources:p,value:+t,conditions:Object.assign(Object.assign({},F),{targetUnitType:B})},D))}),E&&u.push(o(E,{originalId:"3",sources:p,targetData:D,conditionInfo:F})),u}),e.set("4",(e,t,a)=>{const{conditionInfo:n,targetData:F,sources:D}=s(e,t,a),p=e,l=[],u={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let U;if(p.params){let e;[u.poison,u.weak,u.sick,u.injury,u.curse,u.paralysis,...e]=r(p),U=c(e,6,a)}else i.forEach(e=>{const t="weak"!==e?e:"weaken";u[e]=p[`${t} resist%`]});return i.forEach(e=>{const t=V(u[e]);0!==t&&l.push(Object.assign({id:`passive:4:${e}`,originalId:"4",sources:D,value:t,conditions:Object.assign({},n)},F))}),U&&l.push(o(U,{originalId:"4",sources:D,targetData:F,conditionInfo:n})),l}),e.set("5",(e,a,n)=>{const{conditionInfo:i,targetData:F,sources:D}=s(e,a,n),p=e,l=[];let u,U,E="0";if(p.params){let e,a;[a,E,...e]=r(p),u=t[a]||w.Unknown,U=c(e,2,n)}else(u=Object.values(t).find(t=>`${t} resist%`in e)||w.Unknown)!==w.Unknown&&(E=p[`${u} resist%`]);const B=V(E);return 0!==B&&l.push(Object.assign({id:`passive:5:${u}`,originalId:"5",sources:D,value:B,conditions:Object.assign({},i)},F)),U&&l.push(o(U,{originalId:"5",sources:D,targetData:F,conditionInfo:i})),l}),e.set("8",(e,t,a)=>F({effect:e,context:t,injectionContext:a,effectKey:"dmg% mitigation",buffId:"passive:8",originalId:"8"})),e.set("9",(e,t,a)=>F({effect:e,context:t,injectionContext:a,effectKey:"bc fill per turn",buffId:"passive:9",originalId:"9"})),e.set("10",(e,t,a)=>F({effect:e,context:t,injectionContext:a,effectKey:"hc effectiveness%",buffId:"passive:10",originalId:"10"}))}(J=new Map),J}!function(e){e.Active="active",e.Passive="passive",e.ConditionalTimed="conditionalTimed",e.Singleton="singleton",e.Burst="burst",e.Attack="attack",e.Unknown="unknown"}(S||(S={})),function(e){e.BraveBurst="bb",e.SuperBraveBurst="sbb",e.UltimateBraveBurst="ubb",e.DualBraveBurst="dbb",e.BondedBraveBurst="bbb",e.BondedSuperBraveBurst="dsbb",e.SpEnhancement="sp",e.Item="item",e.LeaderSkill="ls",e.ExtraSkill="es",e.OmniParadigm="omniParadigm",e.UnitTypeBonus="unitTypeBonus",e.Quest="quest"}(K||(K={})),function(e){e.Unknown="unknown",e.OmniParadigm="omniParadigm",e.All="all"}(w||(w={})),function(e){e.hp="hp",e.atk="atk",e.def="def",e.rec="rec",e.crit="crit",e.bbGauge="bbGauge",e.bcDropRate="bcDropRate",e.hcDropRate="hcDropRate",e.itemDropRate="itemDropRate",e.hcEfficacy="hcEfficacy",e.poisonResist="poisonResist",e.weakResist="weakResist",e.sickResist="sickResist",e.injuryResist="injuryResist",e.curseResist="curseResist",e.paralysisResist="paralysisResist",e.poisonInflict="poisonInflict",e.weakInflict="weakInflict",e.sickInflict="sickInflict",e.injuryInflict="injuryInflict",e.curseInflict="curseInflict",e.paralysisInflict="paralysisInflict",e.atkDownResist="atkDownResist",e.defDownResist="defDownResist",e.recDownResist="recDownResist",e.atkDownInflict="atkDownInflict",e.defDownInflict="defDownInflict",e.recDownInflict="recDownInflict",e.mitigation="mitigation",e.fireMitigation="fireMitigation",e.waterMitigation="waterMitigation",e.earthMitigation="earthMitigation",e.thunderMitigation="thunderMitigation",e.lightMitigation="lightMitigation",e.darkMitigation="darkMitigation",e.turnDurationModification="turnDurationModification",e.koResistance="koResistance"}(L||(L={})),function(e){e.UNKNOWN="UNKNOWN",e.TURN_DURATION_UP="TURN_DURATION_UP",e.TURN_DURATION_DOWN="TURN_DURATION_DOWN",e.BUFF_HPUP="BUFF_HPUP",e.BUFF_HPDOWN="BUFF_HPDOWN",e.BUFF_ATKUP="BUFF_ATKUP",e.BUFF_ATKDOWN="BUFF_ATKDOWN",e.BUFF_DEFUP="BUFF_DEFUP",e.BUFF_DEFDOWN="BUFF_DEFDOWN",e.BUFF_RECUP="BUFF_RECUP",e.BUFF_RECDOWN="BUFF_RECDOWN",e.BUFF_CRTRATEUP="BUFF_CRTRATEUP",e.BUFF_CRTRATEDOWN="BUFF_CRTRATEDOWN",e.BUFF_HPREC="BUFF_HPREC",e.BUFF_BBREC="BUFF_BBREC",e.BUFF_FIREHPUP="BUFF_FIREHPUP",e.BUFF_FIREHPDOWN="BUFF_FIREHPDOWN",e.BUFF_FIREATKUP="BUFF_FIREATKUP",e.BUFF_FIREATKDOWN="BUFF_FIREATKDOWN",e.BUFF_FIREDEFUP="BUFF_FIREDEFUP",e.BUFF_FIREDEFDOWN="BUFF_FIREDEFDOWN",e.BUFF_FIRERECUP="BUFF_FIRERECUP",e.BUFF_FIRERECDOWN="BUFF_FIRERECDOWN",e.BUFF_FIRECRTRATEUP="BUFF_FIRECRTRATEUP",e.BUFF_FIRECRTRATEDOWN="BUFF_FIRECRTRATEDOWN",e.BUFF_WATERHPUP="BUFF_WATERHPUP",e.BUFF_WATERHPDOWN="BUFF_WATERHPDOWN",e.BUFF_WATERATKUP="BUFF_WATERATKUP",e.BUFF_WATERATKDOWN="BUFF_WATERATKDOWN",e.BUFF_WATERDEFUP="BUFF_WATERDEFUP",e.BUFF_WATERDEFDOWN="BUFF_WATERDEFDOWN",e.BUFF_WATERRECUP="BUFF_WATERRECUP",e.BUFF_WATERRECDOWN="BUFF_WATERRECDOWN",e.BUFF_WATERCRTRATEUP="BUFF_WATERCRTRATEUP",e.BUFF_WATERCRTRATEDOWN="BUFF_WATERCRTRATEDOWN",e.BUFF_EARTHHPUP="BUFF_EARTHHPUP",e.BUFF_EARTHHPDOWN="BUFF_EARTHHPDOWN",e.BUFF_EARTHATKUP="BUFF_EARTHATKUP",e.BUFF_EARTHATKDOWN="BUFF_EARTHATKDOWN",e.BUFF_EARTHDEFUP="BUFF_EARTHDEFUP",e.BUFF_EARTHDEFDOWN="BUFF_EARTHDEFDOWN",e.BUFF_EARTHRECUP="BUFF_EARTHRECUP",e.BUFF_EARTHRECDOWN="BUFF_EARTHRECDOWN",e.BUFF_EARTHCRTRATEUP="BUFF_EARTHCRTRATEUP",e.BUFF_EARTHCRTRATEDOWN="BUFF_EARTHCRTRATEDOWN",e.BUFF_THUNDERHPUP="BUFF_THUNDERHPUP",e.BUFF_THUNDERHPDOWN="BUFF_THUNDERHPDOWN",e.BUFF_THUNDERATKUP="BUFF_THUNDERATKUP",e.BUFF_THUNDERATKDOWN="BUFF_THUNDERATKDOWN",e.BUFF_THUNDERDEFUP="BUFF_THUNDERDEFUP",e.BUFF_THUNDERDEFDOWN="BUFF_THUNDERDEFDOWN",e.BUFF_THUNDERRECUP="BUFF_THUNDERRECUP",e.BUFF_THUNDERRECDOWN="BUFF_THUNDERRECDOWN",e.BUFF_THUNDERCRTRATEUP="BUFF_THUNDERCRTRATEUP",e.BUFF_THUNDERCRTRATEDOWN="BUFF_THUNDERCRTRATEDOWN",e.BUFF_LIGHTHPUP="BUFF_LIGHTHPUP",e.BUFF_LIGHTHPDOWN="BUFF_LIGHTHPDOWN",e.BUFF_LIGHTATKUP="BUFF_LIGHTATKUP",e.BUFF_LIGHTATKDOWN="BUFF_LIGHTATKDOWN",e.BUFF_LIGHTDEFUP="BUFF_LIGHTDEFUP",e.BUFF_LIGHTDEFDOWN="BUFF_LIGHTDEFDOWN",e.BUFF_LIGHTRECUP="BUFF_LIGHTRECUP",e.BUFF_LIGHTRECDOWN="BUFF_LIGHTRECDOWN",e.BUFF_LIGHTCRTRATEUP="BUFF_LIGHTCRTRATEUP",e.BUFF_LIGHTCRTRATEDOWN="BUFF_LIGHTCRTRATEDOWN",e.BUFF_DARKHPUP="BUFF_DARKHPUP",e.BUFF_DARKHPDOWN="BUFF_DARKHPDOWN",e.BUFF_DARKATKUP="BUFF_DARKATKUP",e.BUFF_DARKATKDOWN="BUFF_DARKATKDOWN",e.BUFF_DARKDEFUP="BUFF_DARKDEFUP",e.BUFF_DARKDEFDOWN="BUFF_DARKDEFDOWN",e.BUFF_DARKRECUP="BUFF_DARKRECUP",e.BUFF_DARKRECDOWN="BUFF_DARKRECDOWN",e.BUFF_DARKCRTRATEUP="BUFF_DARKCRTRATEUP",e.BUFF_DARKCRTRATEDOWN="BUFF_DARKCRTRATEDOWN",e.BUFF_ELEMENTHPUP="BUFF_ELEMENTHPUP",e.BUFF_ELEMENTHPDOWN="BUFF_ELEMENTHPDOWN",e.BUFF_ELEMENTATKUP="BUFF_ELEMENTATKUP",e.BUFF_ELEMENTATKDOWN="BUFF_ELEMENTATKDOWN",e.BUFF_ELEMENTDEFUP="BUFF_ELEMENTDEFUP",e.BUFF_ELEMENTDEFDOWN="BUFF_ELEMENTDEFDOWN",e.BUFF_ELEMENTRECUP="BUFF_ELEMENTRECUP",e.BUFF_ELEMENTRECDOWN="BUFF_ELEMENTRECDOWN",e.BUFF_ELEMENTCRTRATEUP="BUFF_ELEMENTCRTRATEUP",e.BUFF_ELEMENTCRTRATEDOWN="BUFF_ELEMENTCRTRATEDOWN",e.BUFF_LORDHPUP="BUFF_LORDHPUP",e.BUFF_LORDHPDOWN="BUFF_LORDHPDOWN",e.BUFF_LORDATKUP="BUFF_LORDATKUP",e.BUFF_LORDATKDOWN="BUFF_LORDATKDOWN",e.BUFF_LORDDEFUP="BUFF_LORDDEFUP",e.BUFF_LORDDEFDOWN="BUFF_LORDDEFDOWN",e.BUFF_LORDRECUP="BUFF_LORDRECUP",e.BUFF_LORDRECDOWN="BUFF_LORDRECDOWN",e.BUFF_LORDCRTRATEUP="BUFF_LORDCRTRATEUP",e.BUFF_LORDCRTRATEDOWN="BUFF_LORDCRTRATEDOWN",e.BUFF_ANIMAHPUP="BUFF_ANIMAHPUP",e.BUFF_ANIMAHPDOWN="BUFF_ANIMAHPDOWN",e.BUFF_ANIMAATKUP="BUFF_ANIMAATKUP",e.BUFF_ANIMAATKDOWN="BUFF_ANIMAATKDOWN",e.BUFF_ANIMADEFUP="BUFF_ANIMADEFUP",e.BUFF_ANIMADEFDOWN="BUFF_ANIMADEFDOWN",e.BUFF_ANIMARECUP="BUFF_ANIMARECUP",e.BUFF_ANIMARECDOWN="BUFF_ANIMARECDOWN",e.BUFF_ANIMACRTRATEUP="BUFF_ANIMACRTRATEUP",e.BUFF_ANIMACRTRATEDOWN="BUFF_ANIMACRTRATEDOWN",e.BUFF_BREAKERHPUP="BUFF_BREAKERHPUP",e.BUFF_BREAKERHPDOWN="BUFF_BREAKERHPDOWN",e.BUFF_BREAKERATKUP="BUFF_BREAKERATKUP",e.BUFF_BREAKERATKDOWN="BUFF_BREAKERATKDOWN",e.BUFF_BREAKERDEFUP="BUFF_BREAKERDEFUP",e.BUFF_BREAKERDEFDOWN="BUFF_BREAKERDEFDOWN",e.BUFF_BREAKERRECUP="BUFF_BREAKERRECUP",e.BUFF_BREAKERRECDOWN="BUFF_BREAKERRECDOWN",e.BUFF_BREAKERCRTRATEUP="BUFF_BREAKERCRTRATEUP",e.BUFF_BREAKERCRTRATEDOWN="BUFF_BREAKERCRTRATEDOWN",e.BUFF_GUARDIANHPUP="BUFF_GUARDIANHPUP",e.BUFF_GUARDIANHPDOWN="BUFF_GUARDIANHPDOWN",e.BUFF_GUARDIANATKUP="BUFF_GUARDIANATKUP",e.BUFF_GUARDIANATKDOWN="BUFF_GUARDIANATKDOWN",e.BUFF_GUARDIANDEFUP="BUFF_GUARDIANDEFUP",e.BUFF_GUARDIANDEFDOWN="BUFF_GUARDIANDEFDOWN",e.BUFF_GUARDIANRECUP="BUFF_GUARDIANRECUP",e.BUFF_GUARDIANRECDOWN="BUFF_GUARDIANRECDOWN",e.BUFF_GUARDIANCRTRATEUP="BUFF_GUARDIANCRTRATEUP",e.BUFF_GUARDIANCRTRATEDOWN="BUFF_GUARDIANCRTRATEDOWN",e.BUFF_ORACLEHPUP="BUFF_ORACLEHPUP",e.BUFF_ORACLEHPDOWN="BUFF_ORACLEHPDOWN",e.BUFF_ORACLEATKUP="BUFF_ORACLEATKUP",e.BUFF_ORACLEATKDOWN="BUFF_ORACLEATKDOWN",e.BUFF_ORACLEDEFUP="BUFF_ORACLEDEFUP",e.BUFF_ORACLEDEFDOWN="BUFF_ORACLEDEFDOWN",e.BUFF_ORACLERECUP="BUFF_ORACLERECUP",e.BUFF_ORACLERECDOWN="BUFF_ORACLERECDOWN",e.BUFF_ORACLECRTRATEUP="BUFF_ORACLECRTRATEUP",e.BUFF_ORACLECRTRATEDOWN="BUFF_ORACLECRTRATEDOWN",e.BUFF_REXHPUP="BUFF_REXHPUP",e.BUFF_REXHPDOWN="BUFF_REXHPDOWN",e.BUFF_REXATKUP="BUFF_REXATKUP",e.BUFF_REXATKDOWN="BUFF_REXATKDOWN",e.BUFF_REXDEFUP="BUFF_REXDEFUP",e.BUFF_REXDEFDOWN="BUFF_REXDEFDOWN",e.BUFF_REXRECUP="BUFF_REXRECUP",e.BUFF_REXRECDOWN="BUFF_REXRECDOWN",e.BUFF_REXCRTRATEUP="BUFF_REXCRTRATEUP",e.BUFF_REXCRTRATEDOWN="BUFF_REXCRTRATEDOWN",e.BUFF_UNITTYPEHPUP="BUFF_UNITTYPEHPUP",e.BUFF_UNITTYPEHPDOWN="BUFF_UNITTYPEHPDOWN",e.BUFF_UNITTYPEATKUP="BUFF_UNITTYPEATKUP",e.BUFF_UNITTYPEATKDOWN="BUFF_UNITTYPEATKDOWN",e.BUFF_UNITTYPEDEFUP="BUFF_UNITTYPEDEFUP",e.BUFF_UNITTYPEDEFDOWN="BUFF_UNITTYPEDEFDOWN",e.BUFF_UNITTYPERECUP="BUFF_UNITTYPERECUP",e.BUFF_UNITTYPERECDOWN="BUFF_UNITTYPERECDOWN",e.BUFF_UNITTYPECRTRATEUP="BUFF_UNITTYPECRTRATEUP",e.BUFF_UNITTYPECRTRATEDOWN="BUFF_UNITTYPECRTRATEDOWN",e.BUFF_POISONBLK="BUFF_POISONBLK",e.BUFF_WEAKBLK="BUFF_WEAKBLK",e.BUFF_SICKBLK="BUFF_SICKBLK",e.BUFF_INJURYBLK="BUFF_INJURYBLK",e.BUFF_CURSEBLK="BUFF_CURSEBLK",e.BUFF_PARALYSISBLK="BUFF_PARALYSISBLK",e.BUFF_ATKDOWNBLK="BUFF_ATKDOWNBLK",e.BUFF_DEFDOWNBLK="BUFF_DEFDOWNBLK",e.BUFF_RECDOWNBLK="BUFF_RECDOWNBLK",e.BUFF_AILMENTBLK="BUFF_AILMENTBLK",e.DEBUFF_POISON="DEBUFF_POISON",e.DEBUFF_WEAK="DEBUFF_WEAK",e.DEBUFF_SICK="DEBUFF_SICK",e.DEBUFF_INJURY="DEBUFF_INJURY",e.DEBUFF_CURSE="DEBUFF_CURSE",e.DEBUFF_PARALYSIS="DEBUFF_PARALYSIS",e.DEBUFF_AILMENT="DEBUFF_AILMENT",e.BUFF_DAMAGECUT="BUFF_DAMAGECUT",e.BUFF_FIREDMGDOWN="BUFF_FIREDMGDOWN",e.BUFF_WATERDMGDOWN="BUFF_WATERDMGDOWN",e.BUFF_EARTHDMGDOWN="BUFF_EARTHDMGDOWN",e.BUFF_THUNDERDMGDOWN="BUFF_THUNDERDMGDOWN",e.BUFF_LIGHTDMGDOWN="BUFF_LIGHTDMGDOWN",e.BUFF_DARKDMGDOWN="BUFF_DARKDMGDOWN",e.BUFF_ELEMENTDMGDOWN="BUFF_ELEMENTDMGDOWN",e.BUFF_HCDROP="BUFF_HCDROP",e.BUFF_HCDOWN="BUFF_HCDOWN",e.BUFF_BCDROP="BUFF_BCDROP",e.BUFF_BCDOWN="BUFF_BCDOWN",e.BUFF_ITEMDROP="BUFF_ITEMDROP",e.BUFF_ITEMDOWN="BUFF_ITEMDOWN",e.BUFF_HCREC="BUFF_HCREC",e.BUFF_KOBLK="BUFF_KOBLK",e.ATK_ST="ATK_ST",e.ATK_AOE="ATK_AOE"}(M||(M={})),function(e){e.UNKNOWN_PASSIVE_EFFECT_ID="UNKNOWN_PASSIVE_EFFECT_ID",e.UNKNOWN_PASSIVE_BUFF_PARAMS="UNKNOWN_PASSIVE_BUFF_PARAMS",e.TURN_DURATION_MODIFICATION="TURN_DURATION_MODIFICATION",e["passive:1:hp"]="passive:1:hp",e["passive:1:atk"]="passive:1:atk",e["passive:1:def"]="passive:1:def",e["passive:1:rec"]="passive:1:rec",e["passive:1:crit"]="passive:1:crit",e["passive:2:hp"]="passive:2:hp",e["passive:2:atk"]="passive:2:atk",e["passive:2:def"]="passive:2:def",e["passive:2:rec"]="passive:2:rec",e["passive:2:crit"]="passive:2:crit",e["passive:3:hp"]="passive:3:hp",e["passive:3:atk"]="passive:3:atk",e["passive:3:def"]="passive:3:def",e["passive:3:rec"]="passive:3:rec",e["passive:3:crit"]="passive:3:crit",e["passive:4:poison"]="passive:4:poison",e["passive:4:weak"]="passive:4:weak",e["passive:4:sick"]="passive:4:sick",e["passive:4:injury"]="passive:4:injury",e["passive:4:curse"]="passive:4:curse",e["passive:4:paralysis"]="passive:4:paralysis",e["passive:5:fire"]="passive:5:fire",e["passive:5:water"]="passive:5:water",e["passive:5:earth"]="passive:5:earth",e["passive:5:thunder"]="passive:5:thunder",e["passive:5:light"]="passive:5:light",e["passive:5:dark"]="passive:5:dark",e["passive:5:unknown"]="passive:5:unknown",e["passive:8"]="passive:8",e["passive:9"]="passive:9",e["passive:10"]="passive:10",e.UNKNOWN_PROC_EFFECT_ID="UNKNOWN_PROC_EFFECT_ID",e.UNKNOWN_PROC_BUFF_PARAMS="UNKNOWN_PROC_BUFF_PARAMS",e["proc:1"]="proc:1",e["proc:2"]="proc:2",e["proc:3"]="proc:3",e["proc:4:flat"]="proc:4:flat",e["proc:4:percent"]="proc:4:percent",e["proc:5:atk"]="proc:5:atk",e["proc:5:def"]="proc:5:def",e["proc:5:rec"]="proc:5:rec",e["proc:5:crit"]="proc:5:crit",e["proc:6:bc"]="proc:6:bc",e["proc:6:hc"]="proc:6:hc",e["proc:6:item"]="proc:6:item",e["proc:7"]="proc:7",e["proc:8:flat"]="proc:8:flat",e["proc:8:percent"]="proc:8:percent",e["proc:9:atk"]="proc:9:atk",e["proc:9:def"]="proc:9:def",e["proc:9:rec"]="proc:9:rec",e["proc:9:unknown"]="proc:9:unknown",e["proc:10:poison"]="proc:10:poison",e["proc:10:weak"]="proc:10:weak",e["proc:10:sick"]="proc:10:sick",e["proc:10:injury"]="proc:10:injury",e["proc:10:curse"]="proc:10:curse",e["proc:10:paralysis"]="proc:10:paralysis",e["proc:10:atk down"]="proc:10:atk down",e["proc:10:def down"]="proc:10:def down",e["proc:10:rec down"]="proc:10:rec down",e["proc:10:unknown"]="proc:10:unknown",e["proc:11:poison"]="proc:11:poison",e["proc:11:weak"]="proc:11:weak",e["proc:11:sick"]="proc:11:sick",e["proc:11:injury"]="proc:11:injury",e["proc:11:curse"]="proc:11:curse",e["proc:11:paralysis"]="proc:11:paralysis",e["proc:11:atk down"]="proc:11:atk down",e["proc:11:def down"]="proc:11:def down",e["proc:11:rec down"]="proc:11:rec down",e["proc:11:unknown"]="proc:11:unknown"}(j||(j={}));const ee=Object.freeze(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({UNKNOWN_PASSIVE_EFFECT_ID:{id:j.UNKNOWN_PASSIVE_EFFECT_ID,name:"Unknown Passive Effect",stackType:S.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PASSIVE_BUFF_PARAMS:{id:j.UNKNOWN_PASSIVE_BUFF_PARAMS,name:"Unknown Passive Buff Parameters",stackType:S.Unknown,icons:()=>[M.UNKNOWN]},TURN_DURATION_MODIFICATION:{id:j.TURN_DURATION_MODIFICATION,name:"Passive Turn Duration Modification",stat:L.turnDurationModification,stackType:S.Passive,icons:e=>[e&&e.value&&e.value.duration&&e.value.duration<0?M.TURN_DURATION_DOWN:M.TURN_DURATION_UP]},"passive:1:hp":{id:j["passive:1:hp"],name:"Passive HP Boost",stat:L.hp,stackType:S.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPDOWN:M.BUFF_HPUP]},"passive:1:atk":{id:j["passive:1:atk"],name:"Passive Attack Boost",stat:L.atk,stackType:S.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:1:def":{id:j["passive:1:def"],name:"Passive Defense Boost",stat:L.def,stackType:S.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:1:rec":{id:j["passive:1:rec"],name:"Passive Recovery Boost",stat:L.rec,stackType:S.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:1:crit":{id:j["passive:1:crit"],name:"Passive Critical Hit Rate Boost",stat:L.crit,stackType:S.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]}},(()=>{const e=e=>t=>{let a="",n="UP";t&&(t.value&&t.value<0&&(n="DOWN"),t.conditions&&t.conditions.targetElements&&(a=t.conditions.targetElements[0])),"string"!=typeof a&&(a="");let i=`BUFF_${a.toUpperCase()}${e}${n}`;return a&&i in M||(i=`BUFF_ELEMENT${e}${n}`),[M[i]]};return{"passive:2:hp":{id:j["passive:2:hp"],name:"Passive Elemental HP Boost",stat:L.hp,stackType:S.Passive,icons:e("HP")},"passive:2:atk":{id:j["passive:2:atk"],name:"Passive Elemental Attack Boost",stat:L.atk,stackType:S.Passive,icons:e("ATK")},"passive:2:def":{id:j["passive:2:def"],name:"Passive Elemental Defense Boost",stat:L.def,stackType:S.Passive,icons:e("DEF")},"passive:2:rec":{id:j["passive:2:rec"],name:"Passive Elemental Recovery Boost",stat:L.rec,stackType:S.Passive,icons:e("REC")},"passive:2:crit":{id:j["passive:2:crit"],name:"Passive Elemental Critical Hit Rate Boost",stat:L.crit,stackType:S.Passive,icons:e("CRTRATE")}}})()),(()=>{const e=e=>t=>{let a="",n="UP";t&&(t.value&&t.value<0&&(n="DOWN"),t.conditions&&(a=t.conditions.targetUnitType||"")),"string"==typeof a&&a||(a="unknown");let i=`BUFF_${a.toUpperCase()}${e}${n}`;return a&&i in M||(i=`BUFF_UNITTYPE${e}${n}`),[M[i]]};return{"passive:3:hp":{id:j["passive:3:hp"],name:"Passive Type-Based HP Boost",stat:L.hp,stackType:S.Passive,icons:e("HP")},"passive:3:atk":{id:j["passive:3:atk"],name:"Passive Type-Based Attack Boost",stat:L.atk,stackType:S.Passive,icons:e("ATK")},"passive:3:def":{id:j["passive:3:def"],name:"Passive Type-Based Defense Boost",stat:L.def,stackType:S.Passive,icons:e("DEF")},"passive:3:rec":{id:j["passive:3:rec"],name:"Passive Type-Based Recovery Boost",stat:L.rec,stackType:S.Passive,icons:e("REC")},"passive:3:crit":{id:j["passive:3:crit"],name:"Passive Type-Based Critical Hit Rate Boost",stat:L.crit,stackType:S.Passive,icons:e("CRTRATE")}}})()),{"passive:4:poison":{id:j["passive:4:poison"],name:"Passive Poison Resist",stat:L.poisonResist,stackType:S.Passive,icons:()=>[M.BUFF_POISONBLK]},"passive:4:weak":{id:j["passive:4:weak"],name:"Passive Weak Resist",stat:L.weakResist,stackType:S.Passive,icons:()=>[M.BUFF_WEAKBLK]},"passive:4:sick":{id:j["passive:4:sick"],name:"Passive Sick Resist",stat:L.sickResist,stackType:S.Passive,icons:()=>[M.BUFF_SICKBLK]},"passive:4:injury":{id:j["passive:4:injury"],name:"Passive Injury Resist",stat:L.injuryResist,stackType:S.Passive,icons:()=>[M.BUFF_INJURYBLK]},"passive:4:curse":{id:j["passive:4:curse"],name:"Passive Curse Resist",stat:L.curseResist,stackType:S.Passive,icons:()=>[M.BUFF_CURSEBLK]},"passive:4:paralysis":{id:j["passive:4:paralysis"],name:"Passive Paralysis Resist",stat:L.poisonResist,stackType:S.Passive,icons:()=>[M.BUFF_PARALYSISBLK]},"passive:5:fire":{id:j["passive:5:fire"],name:"Passive Fire Damage Reduction",stat:L.fireMitigation,stackType:S.Passive,icons:()=>[M.BUFF_FIREDMGDOWN]},"passive:5:water":{id:j["passive:5:water"],name:"Passive Water Damage Reduction",stat:L.waterMitigation,stackType:S.Passive,icons:()=>[M.BUFF_WATERDMGDOWN]},"passive:5:earth":{id:j["passive:5:earth"],name:"Passive Earth Damage Reduction",stat:L.earthMitigation,stackType:S.Passive,icons:()=>[M.BUFF_EARTHDMGDOWN]},"passive:5:thunder":{id:j["passive:5:thunder"],name:"Passive Thunder Damage Reduction",stat:L.thunderMitigation,stackType:S.Passive,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"passive:5:light":{id:j["passive:5:light"],name:"Passive Light Damage Reduction",stat:L.lightMitigation,stackType:S.Passive,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"passive:5:dark":{id:j["passive:5:dark"],name:"Passive Dark Damage Reduction",stat:L.darkMitigation,stackType:S.Passive,icons:()=>[M.BUFF_DARKDMGDOWN]},"passive:5:unknown":{id:j["passive:5:unknown"],name:"Passive Elemental Damage Reduction (Unspecified Element)",stat:L.mitigation,stackType:S.Passive,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"passive:8":{id:j["passive:8"],name:"Passive Damage Reduction",stat:L.mitigation,stackType:S.Passive,icons:()=>[M.BUFF_DAMAGECUT]},"passive:9":{id:j["passive:9"],name:"Passive Gradual BB Gauge Fill",stat:L.bbGauge,stackType:S.Passive,icons:()=>[M.BUFF_BBREC]},"passive:10":{id:j["passive:10"],name:"Passive HC Efficacy",stat:L.hcEfficacy,stackType:S.Passive,icons:()=>[M.BUFF_HCREC]},UNKNOWN_PROC_EFFECT_ID:{id:j.UNKNOWN_PROC_EFFECT_ID,name:"Unknown Proc Effect",stackType:S.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PROC_BUFF_PARAMS:{id:j.UNKNOWN_PROC_BUFF_PARAMS,name:"Unknown Proc Buff Parameters",stackType:S.Unknown,icons:()=>[M.UNKNOWN]},"proc:1":{id:j["proc:1"],name:"Regular Damage",stackType:S.Attack,icons:e=>[e&&e.targetArea===U.Single?M.ATK_ST:M.ATK_AOE]},"proc:2":{id:j["proc:2"],name:"Burst Heal",stat:L.hp,stackType:S.Burst,icons:()=>[M.BUFF_HPREC]},"proc:3":{id:j["proc:3"],name:"Active Gradual Heal",stat:L.hp,stackType:S.Active,icons:()=>[M.BUFF_HPREC]},"proc:4:flat":{id:j["proc:4:flat"],name:"Burst BB Gauge Fill (Flat Amount)",stat:L.bbGauge,stackType:S.Burst,icons:()=>[M.BUFF_BBREC]},"proc:4:percent":{id:j["proc:4:percent"],name:"Burst BB Gauge Fill (Percentage)",stat:L.bbGauge,stackType:S.Burst,icons:()=>[M.BUFF_BBREC]}}),(()=>{const e=e=>t=>{let a="",n=!1,i="UP";t&&(t.value&&t.value<0&&(i="DOWN"),t.conditions&&t.conditions.targetElements&&(a=t.conditions.targetElements[0],n=!0)),"string"!=typeof a&&(a="");let s=`BUFF_${a.toUpperCase()}${e}${i}`;return a&&s in M||(s=`BUFF_${n?"ELEMENT":""}${e}${i}`),[M[s]]};return{"proc:5:atk":{id:j["proc:5:atk"],name:"Active Regular/Elemental Attack Boost",stat:L.atk,stackType:S.Active,icons:e("ATK")},"proc:5:def":{id:j["proc:5:def"],name:"Active Regular/Elemental Defense Boost",stat:L.def,stackType:S.Active,icons:e("DEF")},"proc:5:rec":{id:j["proc:5:rec"],name:"Active Regular/Elemental Recovery Boost",stat:L.rec,stackType:S.Active,icons:e("REC")},"proc:5:crit":{id:j["proc:5:crit"],name:"Active Regular/Elemental Critical Hit Rate Boost",stat:L.crit,stackType:S.Active,icons:e("CRTRATE")}}})()),{"proc:6:bc":{id:j["proc:6:bc"],name:"Active Battle Crystal Drop Rate Boost",stat:L.bcDropRate,stackType:S.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_BCDROP]},"proc:6:hc":{id:j["proc:6:hc"],name:"Active Heart Crystal Drop Rate Boost",stat:L.hcDropRate,stackType:S.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_HCDROP]},"proc:6:item":{id:j["proc:6:item"],name:"Active Item Drop Rate Boost",stat:L.itemDropRate,stackType:S.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_ITEMDROP]},"proc:7":{id:j["proc:7"],name:"Guaranteed KO Resistance",stat:L.koResistance,stackType:S.Singleton,icons:()=>[M.BUFF_KOBLK]},"proc:8:flat":{id:j["proc:8:flat"],name:"Max HP Boost (Flat Amount)",stat:L.hp,stackType:S.Singleton,icons:()=>[M.BUFF_HPUP]},"proc:8:percent":{id:j["proc:8:percent"],name:"Max HP Boost (Percentage)",stat:L.hp,stackType:S.Singleton,icons:()=>[M.BUFF_HPUP]}}),(()=>{const e=e=>t=>{let a="",n=!1,i="DOWN";t&&(t.value&&t.value>0&&(i="UP"),t.conditions&&t.conditions.targetElements&&(a=t.conditions.targetElements[0],n=!0)),"string"!=typeof a&&(a="");let s=`BUFF_${a.toUpperCase()}${e}${i}`;return a&&s in M||(s=`BUFF_${n?"ELEMENT":""}${e}${i}`),[M[s]]};return{"proc:9:atk":{id:j["proc:9:atk"],name:"Active Regular/Elemental Attack Reduction",stat:L.atk,stackType:S.Active,icons:e("ATK")},"proc:9:def":{id:j["proc:9:def"],name:"Active Regular/Elemental Defense Reduction",stat:L.def,stackType:S.Active,icons:e("DEF")},"proc:9:rec":{id:j["proc:9:rec"],name:"Active Regular/Elemental Recovery Reduction",stat:L.rec,stackType:S.Active,icons:e("REC")},"proc:9:unknown":{id:j["proc:9:unknown"],name:"Active Regular/Elemental Unknown Stat Reduction",stackType:S.Active,icons:()=>[M.UNKNOWN]}}})()),{"proc:10:poison":{id:j["proc:10:poison"],name:"Poison Cleanse",stat:L.poisonResist,stackType:S.Burst,icons:()=>[M.BUFF_POISONBLK]},"proc:10:weak":{id:j["proc:10:weak"],name:"Weak Cleanse",stat:L.weakResist,stackType:S.Burst,icons:()=>[M.BUFF_WEAKBLK]},"proc:10:sick":{id:j["proc:10:sick"],name:"Sick Cleanse",stat:L.sickResist,stackType:S.Burst,icons:()=>[M.BUFF_SICKBLK]},"proc:10:injury":{id:j["proc:10:injury"],name:"Injury Cleanse",stat:L.injuryResist,stackType:S.Burst,icons:()=>[M.BUFF_INJURYBLK]},"proc:10:curse":{id:j["proc:10:curse"],name:"Curse Cleanse",stat:L.curseResist,stackType:S.Burst,icons:()=>[M.BUFF_CURSEBLK]},"proc:10:paralysis":{id:j["proc:10:paralysis"],name:"Paralysis Cleanse",stat:L.poisonResist,stackType:S.Burst,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:10:atk down":{id:j["proc:10:atk down"],name:"Attack Reduction Cleanse",stat:L.atkDownResist,stackType:S.Burst,icons:()=>[M.BUFF_ATKDOWNBLK]},"proc:10:def down":{id:j["proc:10:def down"],name:"Defense Reduction Cleanse",stat:L.defDownResist,stackType:S.Burst,icons:()=>[M.BUFF_DEFDOWNBLK]},"proc:10:rec down":{id:j["proc:10:rec down"],name:"Recovery Reduction Cleanse",stat:L.recDownResist,stackType:S.Burst,icons:()=>[M.BUFF_RECDOWNBLK]},"proc:10:unknown":{id:j["proc:10:unknown"],name:"Unknown Ailment Cleanse",stackType:S.Unknown,icons:()=>[M.BUFF_AILMENTBLK]},"proc:11:poison":{id:j["proc:11:poison"],name:"Poison Infliction",stat:L.poisonInflict,stackType:S.Burst,icons:()=>[M.DEBUFF_POISON]},"proc:11:weak":{id:j["proc:11:weak"],name:"Weak Infliction",stat:L.weakInflict,stackType:S.Burst,icons:()=>[M.DEBUFF_WEAK]},"proc:11:sick":{id:j["proc:11:sick"],name:"Sick Infliction",stat:L.sickInflict,stackType:S.Burst,icons:()=>[M.DEBUFF_SICK]},"proc:11:injury":{id:j["proc:11:injury"],name:"Injury Infliction",stat:L.injuryInflict,stackType:S.Burst,icons:()=>[M.DEBUFF_INJURY]},"proc:11:curse":{id:j["proc:11:curse"],name:"Curse Infliction",stat:L.curseInflict,stackType:S.Burst,icons:()=>[M.DEBUFF_CURSE]},"proc:11:paralysis":{id:j["proc:11:paralysis"],name:"Paralysis Infliction",stat:L.poisonInflict,stackType:S.Burst,icons:()=>[M.DEBUFF_PARALYSIS]},"proc:11:atk down":{id:j["proc:11:atk down"],name:"Attack Reduction Infliction",stat:L.atkDownInflict,stackType:S.Burst,icons:()=>[M.BUFF_ATKDOWN]},"proc:11:def down":{id:j["proc:11:def down"],name:"Defense Reduction Infliction",stat:L.defDownInflict,stackType:S.Burst,icons:()=>[M.BUFF_DEFDOWN]},"proc:11:rec down":{id:j["proc:11:rec down"],name:"Recovery Reduction Infliction",stat:L.recDownInflict,stackType:S.Burst,icons:()=>[M.BUFF_RECDOWN]},"proc:11:unknown":{id:j["proc:11:unknown"],name:"Unknown Ailment Infliction",stackType:S.Unknown,icons:()=>[M.DEBUFF_AILMENT]}}));var te=Object.freeze({__proto__:null,convertProcEffectToBuffs:function(e,t){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!t||"object"!=typeof t)throw new TypeError("context parameter should be an object");const i=W(e)&&a(e),s=i&&Q(t.reloadMapping).get(i);return"function"==typeof s?s(e,t):function(e,t){const i=W(e)&&a(e)||n.Unknown;return[{id:j.UNKNOWN_PROC_EFFECT_ID,originalId:i,effectDelay:e["effect delay time(ms)/frame"],targetType:e["target type"],targetArea:e["target area"],sources:$(t)}]}(e,t)},convertPassiveEffectToBuffs:function(e,t){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!t||"object"!=typeof t)throw new TypeError("context parameter should be an object");const n=b(e)&&a(e),s=n&&Z(t.reloadMapping).get(n);return"function"==typeof s?s(e,t):function(e,t){const n=b(e)&&a(e)||i.Unknown;return[{id:j.UNKNOWN_PASSIVE_EFFECT_ID,originalId:n,sources:$(t)}]}(e,t)},get BuffSource(){return K},get BuffStackType(){return S},BUFF_METADATA:ee,getMetadataForBuff:function(e,t=ee){return t&&"object"==typeof t&&Object.hasOwnProperty.call(t,e)?t[e]:void 0}}),ae=Object.freeze({__proto__:null,constants:r,parsers:te,getMetadataForProc:F,getMetadataForPassive:v,isAttackingProcId:D,getNameForProc:h,getNameForPassive:C,isProcEffect:W,isPassiveEffect:b,combineEffectsAndDamageFrames:function(e,t){let a=[];return Array.isArray(e)&&e.length>0&&Array.isArray(t)&&e.length===t.length&&(a=e.map((e,a)=>{const n=t[a];return{delay:e["effect delay time(ms)/frame"],effect:e,frames:n,id:`${e["proc id"]||e["unknown proc id"]}`,targetArea:e["random attack"]?U.Random:e["target area"],targetType:e["target type"]}})),a},getEffectId:a,getEffectName:function(e,t={}){let n="";const i=a(e);return b(e)?n=C(i,t&&t.passive):W(e)&&(n=h(i,t&&t.proc)),n},get ProcBuffType(){return s},PASSIVE_METADATA:o,PROC_METADATA:c});var ne=Object.freeze({__proto__:null,getEffectsForExtraSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var ie=Object.freeze({__proto__:null,getEffectsForItem:function(e){let t=[];if(e&&e.effect)if(Array.isArray(e.effect))t=e.effect;else if(Array.isArray(e.effect.effect)){const{effect:a,target_area:n,target_type:i}=e.effect;t=a.map(e=>{const t=Object.assign({},e);return t["target area"]=n,t["target type"]=i,t})}return t},getItemImageUrl:function(e,t){return`${e||""}/item/${t||""}`}});var se=Object.freeze({__proto__:null,getEffectsForLeaderSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var re=Object.freeze({__proto__:null,getUnitImageFileNames:function(e,t=""){const a=`${e||""}${t||""}.png`;return{spritesheet:`unit_anime_${a}`,battleAvatar:`unit_ills_battle_${a}`,guideAvatar:`unit_ills_thum_${a}`,fullIllustration:`unit_ills_full_${a}`}},getUnitImageUrl:function(e,t){return`${e||""}/unit/img/${t||""}`}});const oe="A".charCodeAt(0),ce="a".charCodeAt(0),Fe="0".charCodeAt(0);function De(e){return"string"==typeof e&&e.split("@")[1]||e}var pe=Object.freeze({__proto__:null,getEffectsForSpEnhancement:function(e){const t=[];if(e&&e.skill&&Array.isArray(e.skill.effects)){e.skill.effects.forEach(e=>{Object.keys(e).forEach(a=>{const n=e[a],i=Object.assign(Object.assign({},n),{sp_type:a});t.push(i)})})}return t},getSpCategoryName:function(e){let t;switch(+e){case 1:t=N["Parameter Boost"];break;case 2:t=N.Spark;break;case 3:t=N["Critical Hits"];break;case 4:t=N["Attack Boost"];break;case 5:t=N["BB Gauge"];break;case 6:t=N["HP Recovery"];break;case 7:t=N.Drops;break;case 8:t=N["Ailment Resistance"];break;case 9:t=N["Ailment Infliction"];break;case 10:t=N["Damage Reduction"];break;case 11:t=N.Special;break;default:t=N.Unknown}return t},spIndexToCode:function(e){let t="",a=-1;return Number.isInteger(e)&&(e>=0&&e<=25?a=e+oe:e>=26&&e<=51?a=e-26+ce:e>=52&&e<=61&&(a=e-52+Fe)),-1!==a&&(t=String.fromCharCode(a)),t},spCodeToIndex:function(e){let t=-1,a=-1;return e&&"string"==typeof e&&1===e.length&&(e>="A"&&e<="Z"?a=oe:e>="a"&&e<="z"?a=ce-26:e>="0"&&e<="9"&&(a=Fe-52)),-1!==a&&(t=e.charCodeAt(0)-a),t},getSpEntryId:De,getSpEntryWithId:function(e,t){const a=De(e);return e&&Array.isArray(t)&&t.find(e=>De(e&&e.id)===a)||void 0},getAllDependenciesForSpEntry:function e(t,a,n=new Set){let i=[];if(t&&t.dependency&&Array.isArray(a)&&a.length>0){const s=De(t.dependency),r=a.find(e=>De(e&&e.id)===s);if(r&&!n.has(r)){n.add(r);const t=e(r,a,n);i=[r].concat(t)}}return i},getAllEntriesThatDependOnSpEntry:function e(t,a,n=new Set){let i=[];if(t&&t.id&&Array.isArray(a)&&a.length>0){const s=t.id;(i=a.filter(e=>e.dependency&&e.dependency.includes(s)&&!n.has(e))).forEach(t=>{n.add(t);const s=e(t,a,n);i=i.concat(s)})}return i}});return e.buffs=ae,e.bursts=k,e.datamineTypes=G,e.extraSkills=ne,e.items=ie,e.leaderSkills=se,e.spEnhancements=pe,e.units=re,e.version="0.7.0",e}({});
//# sourceMappingURL=index.browser.min.js.map
