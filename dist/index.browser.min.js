"use strict";var bfmtUtilities=function(e){function t(e,t){const a=e&&Array.isArray(e.levels)?e.levels:[];let s;return s=null===t||isNaN(t)?a.length-1:+t-1,a[s]}function a(e){let t="";return e&&(t=e["proc id"]||e["unknown proc id"]||e["passive id"]||e["unknown passive id"]||""),t}var s,i;!function(e){e.BurstHeal="2",e.Unknown="UNKNOWN_PROC_EFFECT_ID"}(s||(s={})),function(e){e.TriggeredEffect="66",e.Unknown="UNKNOWN_PASSIVE_EFFECT_ID"}(i||(i={}));var n,o=Object.freeze({__proto__:null,get KNOWN_PROC_ID(){return s},get KNOWN_PASSIVE_ID(){return i}});!function(e){e.Attack="Attack"}(n||(n={}));const c=Object.freeze({1:{ID:"1",Name:"Parameter Boost"},2:{ID:"2",Name:"Elemental Parameter Boost"},3:{ID:"3",Name:"Type-Based Parameter Boost"},4:{ID:"4",Name:"Status Negation"},5:{ID:"5",Name:"Elemental Damage Reduction"},6:{ID:"6",Name:""},8:{ID:"8",Name:"Damage Reduction"},9:{ID:"9",Name:"Gradual BB Gauge Boost"},10:{ID:"10",Name:"HC Efficacy"},11:{ID:"11",Name:"HP-Conditional Parameter Boost"},12:{ID:"12",Name:"HP-Conditional Drop Rate Boost"},13:{ID:"13",Name:"BC Fill on Enemy Defeat"},14:{ID:"14",Name:"Damage Reduction (Chance)"},15:{ID:"15",Name:"Heal on Enemy Defeat"},16:{ID:"16",Name:"Heal on Battle Victory"},17:{ID:"17",Name:"HP Absorption"},19:{ID:"19",Name:"Drop Rate Boost"},20:{ID:"20",Name:"Status Infliction"},21:{ID:"21",Name:"Parameter Boost for First X Turns"},23:{ID:"23",Name:"BC Fill on Battle Victory"},24:{ID:"24",Name:"Heal when Attacked (Chance)"},25:{ID:"25",Name:"BC Fill when Hit (Chance)"},26:{ID:"26",Name:"Damage Counter (Chance)"},27:{ID:"27",Name:"Increased Target Chance"},28:{ID:"28",Name:"Decreased Target Chance"},29:{ID:"29",Name:"Defense Ignore (Chance)"},30:{ID:"30",Name:"BB Conditional Parameter Boost"},31:{ID:"31",Name:"Spark Damage Boost, Boost Drop Rate on Spark"},32:{ID:"32",Name:"BC Efficacy"},33:{ID:"33",Name:"Heal over Time"},34:{ID:"34",Name:"Critical Damage Boost"},35:{ID:"35",Name:"BC Fill when Normal Attacking"},36:{ID:"36",Name:"Extra Action"},37:{ID:"37",Name:"Hit Count Boost"},38:{ID:"38",Name:""},39:{ID:"39",Name:""},40:{ID:"40",Name:"Parameter Conversion"},41:{ID:"41",Name:"Unique Element Count Conditional Parameter Boost"},42:{ID:"42",Name:"Gender Parameter Boost"},43:{ID:"43",Name:"Damage Reduction to 1"},44:{ID:"44",Name:"Flat Parameter Boost"},45:{ID:"45",Name:"Critical Damage Negation"},46:{ID:"46",Name:"Parameter Boost Relative to HP Remainaing"},47:{ID:"47",Name:"BC Fill on Spark"},48:{ID:"48",Name:"BC Cost Reduction"},49:{ID:"49",Name:"BB Gauge Consumption Reduction"},50:{ID:"50",Name:"Elemental Damage Boost"},52:{ID:"52",Name:""},53:{ID:"53",Name:"Critical/Elemental Weakness Damage Negation"},55:{ID:"55",Name:"Conditional Effect based on HP Threshold"},58:{ID:"58",Name:"Damage Reduction when Guarding"},59:{ID:"59",Name:"BC Fill when Attacked when Guarding"},61:{ID:"61",Name:"BC Fill on Guard"},62:{ID:"62",Name:"Elemental Damage Reduction"},63:{ID:"63",Name:"Elemental Damage Reduction for first X Turns"},64:{ID:"64",Name:"BB Atk Boost"},65:{ID:"65",Name:"BC Fill on Critical"},66:{ID:"66",Name:"Add buff to Brave Burst"},69:{ID:"69",Name:"Chance KO Resistance (Angel Idol)"},70:{ID:"70",Name:"OD Gauge Fill Rate Boost"},71:{ID:"71",Name:"Status Counter"},72:{ID:"72",Name:"Turn End Effects Activate at Turn Start"},73:{ID:"73",Name:"Parameter Reduction Negation"},74:{ID:"74",Name:"Attack Boost on Status Afflicted Foes"},75:{ID:"75",Name:"Spark Vulnerability"},77:{ID:"77",Name:"Spark Damage Reduction"},78:{ID:"78",Name:"Conditional Effect after Damage Received Threshold"},79:{ID:"79",Name:"BC Fill after Damage Received Threshold"},80:{ID:"80",Name:"Conditional Effect after Damage Dealt Threshold"},81:{ID:"81",Name:"BC Fill after Damage Dealt Threshold"},82:{ID:"82",Name:"Conditional Effect after BC Received Threshold"},84:{ID:"84",Name:"Conditional Effect after HC Received Threshold"},85:{ID:"85",Name:"BC Fill after HC Received Threshold"},86:{ID:"86",Name:"Conditional Effect after Spark Threshold"},88:{ID:"88",Name:"Conditional Effect on Guard"},89:{ID:"89",Name:"Conditional Effect on Critical"},90:{ID:"90",Name:"Status Infliction on Critical"},91:{ID:"91",Name:""},92:{ID:"92",Name:"Negate Defense Ignore"},93:{ID:"93",Name:"Added Elements"},96:{ID:"96",Name:"Normal Attacks Hit All Foes"},97:{ID:"97",Name:"Player EXP Boost"},99:{ID:"99",Name:""},100:{ID:"100",Name:"Spark Critical"},101:{ID:"101",Name:"Heal on Spark"},102:{ID:"102",Name:"Added Elements"},103:{ID:"103",Name:"BB Atk Boost when HP Passes Threshold"},104:{ID:"104",Name:"Spark Boost when HP Passes Threshold"},105:{ID:"105",Name:"Turn-Based Parameter Boost"},106:{ID:"106",Name:"Conditional Effect after Activating Overdrive"},107:{ID:"107",Name:"Add Effect to Leader Skill"},109:{ID:"109",Name:"BB Gauge Reduction (Chance)"},110:{ID:"110",Name:"BC Efficacy Reduction (Chance)"},111:{ID:"111",Name:"Increase Brave Burst Activation Rate"},112:{ID:"112",Name:"ABP/CBP Boost"},113:{ID:"113",Name:"Conditional Effect after HP Threshold"},114:{ID:"114",Name:"Inflict Buff when Attacked"},127:{ID:"127",Name:"Additional Damage (Damage over Time) Reduction"},128:{ID:"128",Name:"Damage Reduction from Normal Attacks"},143:{ID:"143",Name:"Break Atk Parameter Limit"},10008:{ID:"10008",Name:"Damage Reduction from Specific Sources"},11004:{ID:"11004",Name:"Elemental Spark Damage Boost"},11005:{ID:"11005",Name:"Elemental Critical Damage Boost"},11006:{ID:"11006",Name:"Summoner EXP Boost"},11009:{ID:"11009",Name:"Effect Duration Boost"},"66,1":{ID:"66,1",Name:""}}),r=Object.freeze({0:{ID:"0",Name:"",Type:""},1:{ID:"1",Name:"Regular Damage",Type:"Attack"},2:{ID:"2",Name:"Burst Heal",Type:""},3:{ID:"3",Name:"Heal over Time",Type:""},4:{ID:"4",Name:"BB Gauge Refill",Type:""},5:{ID:"5",Name:"Parameter Boost",Type:""},6:{ID:"6",Name:"Drop Rate",Type:""},7:{ID:"7",Name:"Guaranteed KO Resistance (Angel Idol)",Type:""},8:{ID:"8",Name:"Max HP Boost",Type:""},9:{ID:"9",Name:"Parameter Reduction",Type:""},10:{ID:"10",Name:"Status Cleanse",Type:""},11:{ID:"11",Name:"Status Infliction",Type:""},12:{ID:"12",Name:"Revive (Guaranteed)",Type:""},13:{ID:"13",Name:"Random Target Damage",Type:"Attack"},14:{ID:"14",Name:"Lifesteal Damage",Type:"Attack"},16:{ID:"16",Name:"Elemental Damage Reduction",Type:""},17:{ID:"17",Name:"Status Negation",Type:""},18:{ID:"18",Name:"Damage Reduction",Type:""},19:{ID:"19",Name:"Gradual BB Gauge Boost",Type:""},20:{ID:"20",Name:"BC Fill on Hit",Type:""},22:{ID:"22",Name:"Defense Ignore",Type:""},23:{ID:"23",Name:"Spark Boost",Type:""},24:{ID:"24",Name:"Parameter Conversion",Type:""},26:{ID:"26",Name:"Hit Count Boost",Type:""},27:{ID:"27",Name:"Proportional Damage",Type:"Attack"},28:{ID:"28",Name:"Fixed Damage",Type:"Attack"},29:{ID:"29",Name:"Multi-Element Damage",Type:"Attack"},30:{ID:"30",Name:"Add Elements",Type:""},31:{ID:"31",Name:"Instant BB Gauge Fill",Type:""},32:{ID:"32",Name:"Element Shift",Type:""},33:{ID:"33",Name:"Buff Removal (Chance)",Type:""},34:{ID:"34",Name:"BB Gauge Reduction (Chance)",Type:""},36:{ID:"36",Name:"Leader Skill Lock (Chance)",Type:""},37:{ID:"37",Name:"Summon Unit",Type:""},38:{ID:"38",Name:"Status Cure",Type:""},39:{ID:"39",Name:"Elemental Damage Reduction",Type:""},40:{ID:"40",Name:"Status Infliction Added to Attack",Type:""},42:{ID:"42",Name:"",Type:""},43:{ID:"43",Name:"Instant OD Fill",Type:""},44:{ID:"44",Name:"Damage over Time (Additional Damage)",Type:""},45:{ID:"45",Name:"BB Atk Boost",Type:""},46:{ID:"46",Name:"Non-Lethal Proportional Damage",Type:"Attack"},47:{ID:"47",Name:"HP Scaled Damage",Type:"Attack"},48:{ID:"48",Name:"Piercing Proportional Damage",Type:"Attack"},49:{ID:"49",Name:"Retire",Type:""},50:{ID:"50",Name:"Damage Counter",Type:""},51:{ID:"51",Name:"Parameter Reduction Added to Attack",Type:""},52:{ID:"52",Name:"BC Efficacy",Type:""},53:{ID:"53",Name:"Status Counter",Type:""},54:{ID:"54",Name:"Critical Damage Boost",Type:""},55:{ID:"55",Name:"Elemental Damage Boost",Type:""},56:{ID:"56",Name:"Chance KO Resistance (Angel Idol)",Type:""},57:{ID:"57",Name:"BC Efficacy Reduction",Type:""},58:{ID:"58",Name:"Spark Vulnerability",Type:""},59:{ID:"59",Name:"BB Atk Reduction",Type:""},60:{ID:"60",Name:"",Type:""},61:{ID:"61",Name:"BB-Scaled Damage",Type:"Attack"},62:{ID:"62",Name:"Barrier",Type:""},63:{ID:"63",Name:"Selective Buff Wipe",Type:""},64:{ID:"64",Name:"Consecutive Damage",Type:"Attack"},65:{ID:"65",Name:"Attack Boost on Status Afflicted Foes",Type:""},66:{ID:"66",Name:"Revive (Chance)",Type:""},67:{ID:"67",Name:"BC Fill on Spark",Type:""},68:{ID:"68",Name:"Damage Reduction when Guarding",Type:""},69:{ID:"69",Name:"BC Fill on Guard",Type:""},70:{ID:"70",Name:"",Type:""},71:{ID:"71",Name:"BB Gauge Fill Rate Debuff",Type:""},73:{ID:"73",Name:"Parameter Reduction Negation",Type:""},75:{ID:"75",Name:"Element Squad-Scaled Damage",Type:"Attack"},76:{ID:"76",Name:"Extra Action",Type:""},78:{ID:"78",Name:"Self Parameter Boost",Type:""},79:{ID:"79",Name:"Player EXP Boost",Type:""},82:{ID:"82",Name:"",Type:""},83:{ID:"83",Name:"Spark Critical",Type:""},84:{ID:"84",Name:"OD Gauge Fill Rate",Type:""},85:{ID:"85",Name:"Heal when Attacked",Type:""},86:{ID:"86",Name:"HP Absorption",Type:""},87:{ID:"87",Name:"Heal on Spark",Type:""},88:{ID:"88",Name:"Self Spark Boost",Type:""},89:{ID:"89",Name:"Self Parameter Conversion",Type:""},92:{ID:"92",Name:"Self Max HP Boost",Type:""},93:{ID:"93",Name:"Spark/Critical/Elemental Weakness Damage Reduction",Type:""},94:{ID:"94",Name:"Normal Attacks Hit All Foes",Type:""},95:{ID:"95",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},96:{ID:"96",Name:"Nullify Extra Skill Effects (ES Lock)",Type:""},97:{ID:"97",Name:"Element Target Damage",Type:"Attack"},113:{ID:"113",Name:"Gradual OD Fill",Type:""},119:{ID:"119",Name:"Gradual BC Drain",Type:""},123:{ID:"123",Name:"OD Gauge Reduction",Type:""},126:{ID:"126",Name:"Damage over Time (Additional Damage) Mitigation",Type:""},127:{ID:"127",Name:"Lock On",Type:""},130:{ID:"130",Name:"Parameter Reduction Counter",Type:""},131:{ID:"131",Name:"",Type:""},132:{ID:"132",Name:"Critical/Elemental Weakness Vulnerability",Type:""},901:{ID:"901",Name:"Raid Heal (on Map)",Type:""},902:{ID:"902",Name:"Raid Parameter Boost",Type:""},903:{ID:"903",Name:"Raid Boss Reveal",Type:""},905:{ID:"905",Name:"Raid Teleport",Type:""},906:{ID:"906",Name:"Raid Flee",Type:""},907:{ID:"907",Name:"Raid Damage Reduction",Type:""},908:{ID:"908",Name:"Raid Item Drop Rate Boost",Type:""},1e4:{ID:"10000",Name:"Taunt",Type:""},10001:{ID:"10001",Name:"Stealth",Type:""},10002:{ID:"10002",Name:"Shield (old)",Type:""},10003:{ID:"10003",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},10004:{ID:"10004",Name:"Damage Immunity",Type:""},10005:{ID:"10005",Name:"Turn Skip (short duration)",Type:""},10006:{ID:"10006",Name:"Turn Skip (long duration)",Type:""},10007:{ID:"10007",Name:"Evasion",Type:""},10009:{ID:"10009",Name:"",Type:""},10012:{ID:"10012",Name:"OD Drain",Type:""},10015:{ID:"10015",Name:"Elemental Spark Boost",Type:""},10016:{ID:"10016",Name:"Element Critical Damage Boost",Type:""},10017:{ID:"10017",Name:"Elemental Shield",Type:""},10018:{ID:"10018",Name:"Max HP Reduction",Type:""},10019:{ID:"10019",Name:"Effect Purge",Type:""},10020:{ID:"10020",Name:"Piercing Damage",Type:"Attack"},10021:{ID:"10021",Name:"Active Healing Reduction",Type:""},10022:{ID:"10022",Name:"Passive Healing Reduction",Type:""},10023:{ID:"10023",Name:"HC Efficacy Reduction",Type:""},10025:{ID:"10025",Name:"KO Resistance Negation",Type:""},10026:{ID:"10026",Name:"Doom",Type:""},11e3:{ID:"11000",Name:"Negative HP-Scaled Damage",Type:"Attack"},11001:{ID:"11001",Name:"Max HP% DoT of Weaker Element Enemies",Type:""},11002:{ID:"11002",Name:"HP Limit Break, Convert to HP",Type:""},11003:{ID:"11003",Name:"Effect Negation",Type:""},70001:{ID:"70001",Name:"Mana Bubble Shield",Type:""},70002:{ID:"70002",Name:"Recast",Type:""},"2-5":{ID:"2-5",Name:"Burst Heal and DEF/REC Boost",Type:""}});function p(e,t=r){return t&&"object"==typeof t&&Object.hasOwnProperty.call(t,e)?t[e]:void 0}function F(e,t){const a=p(e,t);return!!a&&a.Type===n.Attack}var l,u,D,f,d,E,B,U,T,R,m,A,g,_,v,N,I,P,y,k=Object.freeze({__proto__:null,getLevelEntryForBurst:t,getEffectsForBurst:function(e,a){const s=t(e,a);return s&&Array.isArray(s.effects)?s.effects:[]},getExtraAttackDamageFramesEntry:function(e,t="0.0/0",i){const n=(Array.isArray(e)?e:[]).filter(e=>{const t=a(e);return t===s.BurstHeal||F(t,i)}).reduce((e,t,a)=>{const s=0===a,i=t["frame times"].length,n=t["hit dmg% distribution"],o=t["frame times"];for(let t=s?0:1;t<i;++t)e.push({damage:n[t],time:o[t]});return e},[]),o={"effect delay time(ms)/frame":t,"frame times":[],"hit dmg% distribution":[],"hit dmg% distribution (total)":0,hits:0};return n.sort((e,t)=>e.time-t.time).forEach(({time:e,damage:t})=>{o["frame times"].push(e),o["hit dmg% distribution"].push(t),o["hit dmg% distribution (total)"]+=t}),o.hits=o["frame times"].length,o}});function h(e,t=c){return t&&"object"==typeof t&&Object.hasOwnProperty.call(t,e)?t[e]:void 0}function O(e,t){const a=p(e,t);return!!a&&a.Name||""}function H(e,t){const a=h(e,t);return!!a&&a.Name||""}function C(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"proc id")||Object.hasOwnProperty.call(e,"unknown proc id"))}function b(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"passive id")||Object.hasOwnProperty.call(e,"unknown passive id"))}!function(e){e.Poison="poison",e.Weak="weak",e.Sick="sick",e.Injury="injury",e.Curse="curse",e.Paralysis="paralysis",e.AttackReduction="atk down",e.DefenseReduction="def down",e.RecoveryReduction="rec down",e.Unknown="unknown"}(l||(l={})),function(e){e.hp_50pr_under="hp_50pr_under",e.hp_50pr_over="hp_50pr_over",e.hp_75pr_under="hp_75pr_under",e.hp_25pr_under="hp_25pr_under",e.hp_min="hp_min",e.hp_max="hp_max",e.atk_max="atk_max",e.random="random"}(u||(u={})),function(e){e.Moving="1",e.Teleporting="2",e.NonMoving="3"}(D||(D={})),function(e){e.Aoe="aoe",e.Single="single",e.Random="random"}(f||(f={})),function(e){e.Aoe="AOE",e.Single="ST",e.Random="RT"}(d||(d={})),function(e){e.Self="self",e.Party="party",e.Enemy="enemy"}(E||(E={})),function(e){e.AddPassive="passive",e.EnhanceBb="add to bb",e.EnhanceSbb="add to sbb",e.EnhanceUbb="add to ubb",e.EnhancePassive="add to passive"}(B||(B={})),function(e){e.None="None",e["Status Enhancing"]="Status Enhancing",e.Critical="Critical",e.Drop="Drop",e["Ailment Inducing"]="Ailment Inducing",e["Element Fusion"]="Element Fusion",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e["Target Setting"]="Target Setting",e["Damage Deflecting"]="Damage Deflecting",e["Damage Reducing"]="Damage Reducing",e.Spark="Spark",e["Defense Piercing"]="Defense Piercing",e["Attack Boosting"]="Attack Boosting",e.Special="Special"}(U||(U={})),function(e){e[e.None=0]="None",e[e["Status Enhancing"]=1]="Status Enhancing",e[e.Critical=2]="Critical",e[e.Drop=3]="Drop",e[e["Ailment Inducing"]=4]="Ailment Inducing",e[e["Element Fusion"]=5]="Element Fusion",e[e["BB Gauge"]=6]="BB Gauge",e[e["HP Recovery"]=7]="HP Recovery",e[e["Target Setting"]=8]="Target Setting",e[e["Damage Deflecting"]=9]="Damage Deflecting",e[e["Damage Reducing"]=10]="Damage Reducing",e[e.Spark=11]="Spark",e[e["Defense Piercing"]=12]="Defense Piercing",e[e["Attack Boosting"]=13]="Attack Boosting",e[e.Special=14]="Special"}(T||(T={})),function(e){e["Parameter Boost"]="Parameter Boost",e.Spark="Spark",e["Critical Hits"]="Critical Hits",e["Attack Boost"]="Attack Boost",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e.Drops="Drops",e["Ailment Resistance"]="Ailment Resistance",e["Ailment Infliction"]="Ailment Infliction",e["Damage Reduction"]="Damage Reduction",e.Special="Special",e.Unknown="Unknown"}(R||(R={})),function(e){e["Parameter Boost"]="1",e.Spark="2",e["Critical Hits"]="3",e["Attack Boost"]="4",e["BB Gauge"]="5",e["HP Recovery"]="6",e.Drops="7",e["Ailment Resistance"]="8",e["Ailment Infliction"]="9",e["Damage Reduction"]="10",e.Special="11"}(m||(m={})),function(e){e.Attack="attack",e.Idle="idle",e.Move="move"}(A||(A={})),function(e){e.Fire="fire",e.Water="water",e.Earth="earth",e.Thunder="thunder",e.Light="light",e.Dark="dark"}(g||(g={})),function(e){e.Male="male",e.Female="female",e.Other="other"}(_||(_={})),function(e){e.Ineligible="not eligible for achievement",e.Farmable="farmable",e.RareSummon="rare summon",e.ExtraSkillElgif="extra skill elgif"}(v||(v={})),function(e){e.Normal="normal",e.Evolution="evo",e.Enhancing="enhancing",e.Sale="sale"}(N||(N={})),function(e){e.Lord="lord",e.Anima="anima",e.Breaker="breaker",e.Guardian="guardian",e.Oracle="oracle",e.Rex="rex"}(I||(I={})),function(e){e.Consumable="consumable",e.Material="material",e.Sphere="sphere",e.EvolutionMaterial="evomat",e.SummonerConsumable="summoner_consumable",e.LeaderSkillSphere="ls_sphere"}(P||(P={})),function(e){e.Mimic="60142",e.BatMimic="60143",e.DragonMimic="60144",e.MetalMimic="60224"}(y||(y={}));const W={1e3:y.Mimic,1100:y.BatMimic,1101:y.BatMimic,1200:y.DragonMimic,1300:y.MetalMimic};var K,S,w,L,M,j,G=Object.freeze({__proto__:null,get Ailment(){return l},get ArenaCondition(){return u},get MoveType(){return D},get TargetArea(){return f},get TargetAreaShorthand(){return d},get TargetType(){return E},get SpPassiveType(){return B},get SphereTypeName(){return U},get SphereTypeId(){return T},get SpCategoryName(){return R},get SpCategoryId(){return m},get UnitAnimationKey(){return A},get UnitElement(){return g},get UnitGender(){return _},get UnitGettingType(){return v},get UnitKind(){return N},get UnitType(){return I},get ItemType(){return P},get MimicUnitIds(){return y},MimicMonsterGroupMapping:W});function x(e){const t=Array.isArray(e.previousSources)?e.previousSources.slice():[];return t.unshift(function(e){return`${e.source}-${e.sourceId}`}(e)),t}function V(e){const t=e&&Array.isArray(e.conditions)&&e.conditions||[],a={units:new Set,items:new Set,sphereTypes:new Set,unknowns:new Set};t.forEach((e,t)=>{"sphere category required (raw)"in e?a.sphereTypes.add(e["sphere category required (raw)"]):"item required"in e?e["item required"].forEach(e=>{a.items.add(e)}):"unit required"in e?e["unit required"].forEach(e=>{a.units.add(""+e.id)}):a.unknowns.add(`type:${e.type_id||t},condition:${e.condition_id||t}`)});return Object.entries(a).filter(e=>e[1].size>0).reduce((e,t)=>(e[t[0]]=Array.from(t[1]),e),{})}function Y(e,t){const a=t.source===S.LeaderSkill||e.sp_type===B.EnhancePassive||e["passive target"]===E.Party;return{targetType:a?E.Party:E.Self,targetArea:a?f.Aoe:f.Single}}function $(e){return{targetArea:e["target area"],targetType:e["target type"]}}function X(e,t=0){return null===e||isNaN(e)?t:+e}function z(e=[],t=0){let a=!1;const s=e.reduce((e,s,i)=>(s&&"0"!==s&&(e["param_"+(t+i)]=s,a=!0),e),{});return a?s:void 0}function q(e){return!!e&&[S.BraveBurst,S.SuperBraveBurst,S.UltimateBraveBurst,S.BondedBraveBurst,S.BondedSuperBraveBurst,S.DualBraveBurst].includes(e)}let Z,J;function Q(e){return Z&&!e||(Z=new Map,function(e){const t={0:w.All,1:g.Fire,2:g.Water,3:g.Earth,4:g.Thunder,5:g.Light,6:g.Dark},a={1:l.Poison,2:l.Weak,3:l.Sick,4:l.Injury,5:l.Curse,6:l.Paralysis,7:l.AttackReduction,8:l.DefenseReduction,9:l.RecoveryReduction},s=(e,t,a)=>({targetData:(a&&a.getProcTargetData||$)(e),sources:(a&&a.createSourcesFromContext||x)(t),effectDelay:e["effect delay time(ms)/frame"]}),i=e=>e.params.split(","),n=(e,{originalId:t,sources:a,targetData:s,effectDelay:i})=>Object.assign({id:j.UNKNOWN_PROC_BUFF_PARAMS,originalId:t,effectDelay:i,sources:a,value:e},s),o=({originalId:e,sources:t,buffs:a,duration:s,targetData:i})=>Object.assign({id:j.TURN_DURATION_MODIFICATION,originalId:e,sources:t,value:{buffs:a,duration:s}},i),c=(e,t,a)=>{let s;return e&&e.length>0&&(s=(a&&a.createUnknownParamsValue||z)(e,t)),s},r=(e,t,a)=>{let s=0!==t;return s&&(s=!(a&&a.buffSourceIsBurstType||q)(e.source)),s},p=e=>({hits:X(e.damageFrames&&e.damageFrames.hits||0),distribution:X(e.damageFrames&&e.damageFrames["hit dmg% distribution (total)"])}),F=({effect:e,context:t,injectionContext:a,effectValueKey:p,effectTurnDurationKey:F,parseParamValue:l=(e=>X(e)),buffId:u,originalId:D})=>{const{targetData:f,sources:d,effectDelay:E}=s(e,t,a);let B,U=0,T=0;if(e.params){const[t,s,...n]=i(e);U=l(t),T=X(s),B=c(n,2,a)}else U=X(e[p]),T=X(e[F]);const R=[];return 0!==U?R.push(Object.assign({id:u,originalId:D,sources:d,effectDelay:E,duration:T,value:U},f)):r(t,T,a)&&R.push(o({originalId:D,sources:d,buffs:[u],duration:T,targetData:f})),B&&R.push(n(B,{originalId:D,sources:d,targetData:f,effectDelay:E})),R};e.set("1",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:F}=s(e,t,a),{hits:l,distribution:u}=p(t),D={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let f;if(e.params){let t;[D["atk%"],D.flatAtk,D["crit%"],D["bc%"],D["hc%"],D["dmg%"],...t]=i(e),f=c(t,6,a)}else D["atk%"]=e["bb atk%"],D.flatAtk=e["bb flat atk"],D["crit%"]=e["bb crit%"],D["bc%"]=e["bb bc%"],D["hc%"]=e["bb hc%"],D["dmg%"]=e["bb dmg%"];const d=Object.entries(D).filter(([,e])=>e&&+e).reduce((e,[t,a])=>(e[t]=X(a),e),{}),E=[Object.assign({id:"proc:1",originalId:"1",sources:r,effectDelay:F,value:Object.assign(Object.assign({},d),{hits:l,distribution:u})},o)];return f&&E.push(n(f,{originalId:"1",sources:r,targetData:o,effectDelay:F})),E}),e.set("2",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:p}=s(e,t,a),F={healLow:"0",healHigh:"0","healerRec%":0};let l;if(e.params){let t,s,n;[F.healLow,F.healHigh,t,s,...n]=i(e),F["healerRec%"]=(100+X(t))*(1+X(s)/100)/10,l=c(n,4,a)}else F.healLow=e["heal low"],F.healHigh=e["heal high"],F["healerRec%"]=e["rec added% (from healer)"];Object.keys(F).forEach(e=>{F[e]=X(F[e])});const u=[Object.assign({id:"proc:2",originalId:"2",sources:r,effectDelay:p,value:F},o)];return l&&u.push(n(l,{originalId:"2",sources:r,targetData:o,effectDelay:p})),u}),e.set("3",(e,t,a)=>{const{targetData:p,sources:F,effectDelay:l}=s(e,t,a),u={healLow:"0",healHigh:"0","targetRec%":0,turnDuration:"0"};let D;if(e.params){let t,s;[u.healLow,u.healHigh,t,u.turnDuration,...s]=i(e),u["targetRec%"]=10*(1+X(t)/100),D=c(s,4,a)}else u.healLow=e["gradual heal low"],u.healHigh=e["gradual heal high"],u["targetRec%"]=e["rec added% (from target)"],u.turnDuration=e["gradual heal turns (8)"];Object.keys(u).forEach(e=>{u[e]=X(u[e])});const f=[];return 0!==u.healLow||0!==u.healHigh?f.push(Object.assign({id:"proc:3",originalId:"3",sources:F,effectDelay:l,duration:u.turnDuration,value:{healLow:u.healLow,healHigh:u.healHigh,"targetRec%":u["targetRec%"]}},p)):r(t,u.turnDuration,a)&&f.push(o({originalId:"3",sources:F,buffs:["proc:3"],duration:u.turnDuration,targetData:p})),D&&f.push(n(D,{originalId:"3",sources:F,targetData:p,effectDelay:l})),f}),e.set("4",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:p}=s(e,t,a);let F,l=0,u=0;if(e.params){const[t,s,...n]=i(e);l=X(t),u=X(s),F=c(n,2,a)}else"bb bc fill"in e&&(l=X(e["bb bc fill"])),"bb bc fill%"in e&&(u=X(e["bb bc fill%"]));const D=[];return 0!==l&&D.push(Object.assign({id:"proc:4:flat",originalId:"4",sources:r,effectDelay:p,value:l},o)),0!==u&&D.push(Object.assign({id:"proc:4:percent",originalId:"4",sources:r,effectDelay:p,value:u},o)),F&&D.push(n(F,{originalId:"4",sources:r,targetData:o,effectDelay:p})),D}),e.set("5",(e,a,p)=>{const{targetData:F,sources:l,effectDelay:u}=s(e,a,p),D={element:w.All,atk:"0",def:"0",rec:"0",crit:"0",turnDuration:"0"},f=["atk","def","rec","crit"];let d;if(e.params){let a,s;[s,D.atk,D.def,D.rec,D.crit,D.turnDuration,...a]=i(e),D.element=t[s]||w.Unknown,d=c(a,6,p)}else{const t=e["element buffed"];D.element="all"===t?w.All:t||w.Unknown;const a=Object.keys(e);f.forEach(t=>{const s=a.find(e=>e.startsWith(t+"% buff"));s&&(D[t]=X(e[s]))}),D.turnDuration=X(e["buff turns"])}f.concat(["turnDuration"]).forEach(e=>{D[e]=X(D[e])});const E=f.some(e=>0!==D[e]),B=[];return E?f.forEach(e=>{const t=D[e];if(0!==t){const a=Object.assign({id:"proc:5:"+e,originalId:"5",sources:l,effectDelay:u,duration:D.turnDuration,value:t},F);D.element!==w.All&&(a.conditions={targetElements:[D.element]}),B.push(a)}}):r(a,D.turnDuration,p)&&B.push(o({originalId:"5",sources:l,buffs:f.map(e=>"proc:5:"+e),duration:D.turnDuration,targetData:F})),d&&B.push(n(d,{originalId:"5",sources:l,targetData:F,effectDelay:u})),B}),e.set("6",(e,t,a)=>{const{targetData:p,sources:F,effectDelay:l}=s(e,t,a),u={bc:"0",hc:"0",item:"0",turnDuration:"0"},D=["bc","hc","item"];let f;if(e.params){let t;[u.bc,u.hc,u.item,u.turnDuration,...t]=i(e),f=c(t,4,a)}else u.bc=e["bc drop rate% buff (10)"],u.hc=e["hc drop rate% buff (9)"],u.item=e["item drop rate% buff (11)"],u.turnDuration=e["drop buff rate turns"];D.concat(["turnDuration"]).forEach(e=>{u[e]=X(u[e])});const d=D.some(e=>0!==u[e]),E=[];return d?D.forEach(e=>{const t=u[e];0!==t&&E.push(Object.assign({id:"proc:6:"+e,originalId:"6",sources:F,effectDelay:l,duration:u.turnDuration,value:t},p))}):r(t,u.turnDuration,a)&&E.push(o({originalId:"6",sources:F,buffs:D.map(e=>"proc:6:"+e),duration:u.turnDuration,targetData:p})),f&&E.push(n(f,{originalId:"6",sources:F,targetData:p,effectDelay:l})),E}),e.set("7",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:p}=s(e,t,a);let F,l=0;if(e.params){const[t,...s]=i(e);l=X(t),F=c(s,1,a)}else l=X(e["angel idol recover hp%"]);const u=[Object.assign({id:"proc:7",originalId:"7",sources:r,effectDelay:p,value:l},o)];return F&&u.push(n(F,{originalId:"7",sources:r,targetData:o,effectDelay:p})),u}),e.set("8",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:p}=s(e,t,a);let F,l=0,u=0;if(e.params){const[t,s,...n]=i(e);l=X(t),u=X(s),F=c(n,2,a)}else"max hp increase"in e&&(l=X(e["max hp increase"])),"max hp% increase"in e&&(u=X(e["max hp% increase"]));const D=[];return 0!==l&&D.push(Object.assign({id:"proc:8:flat",originalId:"8",sources:r,effectDelay:p,value:l},o)),0!==u&&D.push(Object.assign({id:"proc:8:percent",originalId:"8",sources:r,effectDelay:p,value:u},o)),F&&D.push(n(F,{originalId:"8",sources:r,targetData:o,effectDelay:p})),D}),e.set("9",(e,a,p)=>{const{targetData:F,sources:l,effectDelay:u}=s(e,a,p),D={0:"atk",1:"def",2:"rec"},f=["atk","def","rec"],d={element:w.All,statReductionEntries:[],turnDuration:0};let E;if(e.params){const[a,s,n,o,r,F,l,u,...B]=i(e);d.element=t[a]||w.Unknown,d.turnDuration=X(u),[[s,n,o],[r,F,l]].forEach(([e,t,a])=>{const s=X(e)-1,i=X(t),n=X(a);3===s?d.statReductionEntries.push(...f.map(e=>({stat:e,value:i,chance:n}))):d.statReductionEntries.push({stat:D[s]||"unknown",value:i,chance:n})}),E=c(B,8,p)}else{const t=e["element buffed"];d.element="all"===t?w.All:t||w.Unknown,["buff #1","buff #2"].forEach(t=>{const a=e[t];if(a){const e=X(a["proc chance%"]),t=Object.keys(a);f.forEach(s=>{const i=t.find(e=>e.startsWith(s+"% buff"));i&&d.statReductionEntries.push({stat:s,value:X(a[i]),chance:e})})}}),d.turnDuration=X(e["buff turns"])}const B=[];let U=!1;return d.statReductionEntries.forEach(({stat:e,value:t,chance:a})=>{if(0!==t||0!==a){U=!0;const s=Object.assign({id:"proc:9:"+e,originalId:"9",sources:l,effectDelay:u,duration:d.turnDuration,value:{value:t,chance:a}},F);d.element!==w.All&&(s.conditions={targetElements:[d.element]}),B.push(s)}}),!U&&r(a,d.turnDuration,p)&&B.push(o({originalId:"9",sources:l,buffs:f.map(e=>"proc:9:"+e),duration:d.turnDuration,targetData:F})),E&&B.push(n(E,{originalId:"9",sources:l,targetData:F,effectDelay:u})),B}),e.set("10",(e,t,o)=>{const{targetData:r,sources:p,effectDelay:F}=s(e,t,o),u=[];let D;if(e.params){const t=i(e),s=t.slice(0,8),n=t.slice(8);s.filter(e=>"0"!==e).forEach(e=>{u.push(a[e]||l.Unknown)}),D=c(n,8,o)}else Object.values(a).forEach(t=>{"remove "+t in e&&u.push(t)}),"remove all status ailments"in e&&u.push(l.Unknown);const f=u.map(e=>Object.assign({id:"proc:10:"+e,originalId:"10",sources:p,effectDelay:F,value:!0},r));return D&&f.push(n(D,{originalId:"10",sources:p,targetData:r,effectDelay:F})),f}),e.set("11",(e,t,o)=>{const{targetData:r,sources:p,effectDelay:F}=s(e,t,o),u=[];let D;if(e.params){let t=i(e);t.length%2!=0&&"0"!==t[t.length-1]&&(D=c(t.slice(-1),t.length-1,o),t=t.slice(0,t.length-1));const s=t.length;for(let e=0;e<s;e+=2){const s=t[e],i=X(t[e+1]);if("0"!==s||0!==i){const e=a[s]||l.Unknown;u.push({ailment:e,chance:i})}}}else Object.values(a).forEach(t=>{let a;a=t===l.Weak?"weaken%":t===l.AttackReduction||t===l.DefenseReduction||t===l.RecoveryReduction?t:t+"%",a in e&&u.push({ailment:t,chance:X(e[a])})});const f=u.map(({ailment:e,chance:t})=>Object.assign({id:"proc:11:"+e,originalId:"11",sources:p,effectDelay:F,value:t},r));return D&&f.push(n(D,{originalId:"11",sources:p,targetData:r,effectDelay:F})),f}),e.set("12",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:p}=s(e,t,a);let F,l=0;if(e.params){const[t,...s]=i(e);l=X(t),F=c(s,1,a)}else l=X(e["revive to hp%"]);const u=[Object.assign({id:"proc:12",originalId:"12",sources:r,effectDelay:p,value:l},o)];return F&&u.push(n(F,{originalId:"12",sources:r,targetData:o,effectDelay:p})),u}),e.set("13",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:F}=s(e,t,a);let l=0;const{distribution:u}=p(t),D={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0"};let d;if(e.params){let t,s;[D["atk%"],D.flatAtk,D["crit%"],D["bc%"],D["hc%"],s,...t]=i(e),l=X(s),d=c(t,6,a)}else D["atk%"]=e["bb atk%"],D.flatAtk=e["bb flat atk"],D["crit%"]=e["bb crit%"],D["bc%"]=e["bb bc%"],D["hc%"]=e["bb hc%"],l=X(e.hits);const E=Object.entries(D).filter(([,e])=>e&&+e).reduce((e,[t,a])=>(e[t]=X(a),e),{}),B=[{id:"proc:13",originalId:"13",sources:r,effectDelay:F,value:Object.assign(Object.assign({},E),{hits:l,distribution:u}),targetType:o.targetType,targetArea:f.Random}];return d&&B.push(n(d,{originalId:"13",sources:r,targetData:o,effectDelay:F})),B}),e.set("14",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:F}=s(e,t,a),{hits:l,distribution:u}=p(t),D={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0","drainLow%":"0","drainHigh%":"0"};let f;if(e.params){let t;[D["atk%"],D.flatAtk,D["crit%"],D["bc%"],D["hc%"],D["dmg%"],D["drainLow%"],D["drainHigh%"],...t]=i(e),f=c(t,8,a)}else D["atk%"]=e["bb atk%"],D.flatAtk=e["bb flat atk"],D["crit%"]=e["bb crit%"],D["bc%"]=e["bb bc%"],D["hc%"]=e["bb hc%"],D["dmg%"]=e["bb dmg%"],D["drainLow%"]=e["hp drain% low"],D["drainHigh%"]=e["hp drain% high"];const d=Object.entries(D).filter(([,e])=>e&&+e).reduce((e,[t,a])=>(e[t]=X(a),e),{}),E=[Object.assign({id:"proc:14",originalId:"14",sources:r,effectDelay:F,value:Object.assign(Object.assign({},d),{hits:l,distribution:u})},o)];return f&&E.push(n(f,{originalId:"14",sources:r,targetData:o,effectDelay:F})),E}),e.set("16",(e,a,p)=>{const{targetData:F,sources:l,effectDelay:u}=s(e,a,p);let D,f,d=0,E=0;if(e.params){const[a,s,n,...o]=i(e);D=t[a]||w.Unknown,d=X(s),E=X(n),f=c(o,3,p)}else{const a=Object.keys(e).find(e=>e.startsWith("mitigate"));D=a&&Object.values(t).find(e=>a.includes(e))||w.Unknown,a&&(d=X(e[a])),E=X(e["buff turns"])}const B=[];return 0!==d?B.push(Object.assign({id:"proc:16:"+D,originalId:"16",sources:l,effectDelay:u,duration:E,value:d},F)):r(a,E,p)&&B.push(o({originalId:"16",sources:l,buffs:Object.values(t).concat([w.Unknown]).map(e=>"proc:16:"+e),duration:E,targetData:F})),f&&B.push(n(f,{originalId:"16",sources:l,targetData:F,effectDelay:u})),B}),e.set("17",(e,t,a)=>{const{targetData:p,sources:F,effectDelay:u}=s(e,t,a),D=[l.Poison,l.Weak,l.Sick,l.Injury,l.Curse,l.Paralysis],f={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let d,E=0;if(e.params){let t,s;[f.poison,f.weak,f.sick,f.injury,f.curse,f.paralysis,t,...s]=i(e),E=X(t),d=c(s,7,a)}else{const t=Object.keys(e).filter(e=>e.startsWith("resist"));D.forEach(a=>{const s=t.find(e=>e.includes(a));s&&(f[a]=e[s])}),E=X(e["resist status ails turns"])}const B=[];return D.forEach(e=>{const t=X(f[e]);0!==t&&B.push(Object.assign({id:"proc:17:"+e,originalId:"17",sources:F,effectDelay:u,value:t,duration:E},p))}),0===B.length&&r(t,E,a)&&B.push(o({originalId:"17",sources:F,buffs:D.map(e=>"proc:17:"+e),duration:E,targetData:p})),d&&B.push(n(d,{originalId:"17",sources:F,targetData:p,effectDelay:u})),B}),e.set("18",(e,t,a)=>F({effect:e,context:t,injectionContext:a,effectValueKey:"dmg% reduction",effectTurnDurationKey:"dmg% reduction turns (36)",buffId:"proc:18",originalId:"18"})),e.set("19",(e,t,a)=>F({effect:e,context:t,injectionContext:a,effectValueKey:"increase bb gauge gradual",effectTurnDurationKey:"increase bb gauge gradual turns (37)",parseParamValue:e=>X(e)/100,buffId:"proc:19",originalId:"19"})),e.set("20",(e,t,a)=>{const{targetData:p,sources:F,effectDelay:l}=s(e,t,a);let u,D=0,f=0,d=0,E=0;if(e.params){const[t,s,n,o,...r]=i(e);D=X(t)/100,f=X(s)/100,d=X(n),E=X(o),u=c(r,4,a)}else D=X(e["bc fill when attacked low"]),f=X(e["bc fill when attacked high"]),d=X(e["bc fill when attacked%"]),E=X(e["bc fill when attacked turns (38)"]);const B=[];return 0!==D||0!==f?B.push(Object.assign({id:"proc:20",originalId:"20",sources:F,effectDelay:l,duration:E,conditions:{whenAttacked:!0},value:{fillLow:D,fillHigh:f,chance:d}},p)):r(t,E,a)&&B.push(o({originalId:"20",sources:F,buffs:["proc:20"],duration:E,targetData:p})),u&&B.push(n(u,{originalId:"20",sources:F,targetData:p,effectDelay:l})),B}),e.set("22",(e,t,a)=>F({effect:e,context:t,injectionContext:a,effectValueKey:"defense% ignore",effectTurnDurationKey:"defense% ignore turns (39)",buffId:"proc:22",originalId:"22"})),e.set("23",(e,t,a)=>{const{targetData:p,sources:F,effectDelay:l}=s(e,t,a);let u,D=0,f=0;if(e.params){const t=i(e);D=X(t[0]),f=X(t[6]);const s=["0",...t.slice(1,6),"0",...t.slice(7)];u=c(s,0,a)}else D=X(e["spark dmg% buff (40)"]),f=X(e["buff turns"]);const d=[];return 0!==D?d.push(Object.assign({id:"proc:23",originalId:"23",sources:F,effectDelay:l,duration:f,value:D},p)):r(t,f,a)&&d.push(o({originalId:"23",sources:F,buffs:["proc:23"],duration:f,targetData:p})),u&&d.push(n(u,{originalId:"23",sources:F,targetData:p,effectDelay:l})),d}),e.set("24",(e,t,a)=>{const{targetData:p,sources:F,effectDelay:l}=s(e,t,a),u=["atk","def","rec"],D={1:"atk",2:"def",3:"rec",4:"hp"},f={attack:"atk",defense:"def",recovery:"rec",hp:"hp"},d={atk:"0",def:"0",rec:"0"};let E,B=0,U="unknown";if(e.params){let t,s,n;[s,d.atk,d.def,d.rec,n,...t]=i(e),U=D[s]||"unknown",B=X(n),E=c(t,5,a)}else{const t=e["converted attribute"];U=t in f?f[t]:"unknown";const a=Object.keys(e);u.forEach(t=>{const s=a.find(e=>e.startsWith(t+"% buff"));s&&(d[t]=X(e[s]))}),B=X(e["% converted turns"])}const T=[];return u.forEach(e=>{const t=X(d[e]);0!==t&&T.push(Object.assign({id:"proc:24:"+e,originalId:"24",sources:F,effectDelay:l,duration:B,value:{convertedStat:U,value:t}},p))}),0===T.length&&r(t,B,a)&&T.push(o({originalId:"24",sources:F,buffs:u.map(e=>"proc:24:"+e),duration:B,targetData:p})),E&&T.push(n(E,{originalId:"24",sources:F,targetData:p,effectDelay:l})),T}),e.set("26",(e,t,a)=>{const{targetData:p,sources:F,effectDelay:l}=s(e,t,a);let u,D=0,f=0,d=0;if(e.params){const t=i(e);D=X(t[0]),f=X(t[2]),d=X(t[7]);const s=["0",t[1],"0",...t.slice(3,7),"0",...t.slice(8)];u=c(s,0,a)}else D=X(e["hit increase/hit"]),f=X(e["extra hits dmg%"]),d=X(e["hit increase buff turns (50)"]);const E=[];return 0!==D||0!==f?E.push(Object.assign({id:"proc:26",originalId:"26",sources:F,effectDelay:l,duration:d,value:{hitIncreasePerHit:D,extraHitDamage:f}},p)):r(t,d,a)&&E.push(o({originalId:"26",sources:F,buffs:["proc:26"],duration:d,targetData:p})),u&&E.push(n(u,{originalId:"26",sources:F,targetData:p,effectDelay:l})),E}),e.set("27",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:F}=s(e,t,a),{hits:l,distribution:u}=p(t),D={"hpDamageLow%":"0","hpDamageHigh%":"0","hpDamageChance%":"0","atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let f;if(e.params){let t;[D["hpDamageLow%"],D["hpDamageHigh%"],D["hpDamageChance%"],D["atk%"],D.flatAtk,D["crit%"],D["bc%"],D["hc%"],D["dmg%"],...t]=i(e),f=c(t,9,a)}else D["hpDamageLow%"]=e["hp% damage low"],D["hpDamageHigh%"]=e["hp% damage high"],D["hpDamageChance%"]=e["hp% damage chance%"],D["atk%"]=e["bb atk%"],D.flatAtk=e["bb flat atk"],D["crit%"]=e["bb crit%"],D["bc%"]=e["bb bc%"],D["hc%"]=e["bb hc%"],D["dmg%"]=e["bb dmg%"];const d=Object.entries(D).filter(([,e])=>e&&+e).reduce((e,[t,a])=>(e[t]=X(a),e),{}),E=[Object.assign({id:"proc:27",originalId:"27",sources:r,effectDelay:F,value:Object.assign(Object.assign({},d),{hits:l,distribution:u})},o)];return f&&E.push(n(f,{originalId:"27",sources:r,targetData:o,effectDelay:F})),E}),e.set("28",(e,t,a)=>{const{targetData:o,sources:r,effectDelay:F}=s(e,t,a),{hits:l,distribution:u}=p(t);let D,f=0;if(e.params){const[t,...s]=i(e);f=X(t),D=c(s,1,a)}else f=X(e["fixed damage"]);const d=[Object.assign({id:"proc:28",originalId:"28",sources:r,effectDelay:F,value:{hits:l,distribution:u}},o)];return 0!==f&&(d[0].value.value=f),D&&d.push(n(D,{originalId:"28",sources:r,targetData:o,effectDelay:F})),d}),e.set("29",(e,a,o)=>{const{targetData:r,sources:F,effectDelay:l}=s(e,a,o),{hits:u,distribution:D}=p(a),f={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let d,E=[];if(e.params){let a,s,n,r;[a,s,n,f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...r]=i(e),[a,s,n].forEach(e=>{"0"!==e&&E.push(t[e]||w.Unknown),d=c(r,9,o)})}else Array.isArray(e["bb elements"])&&(E=e["bb elements"].slice()),f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const B=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[t,a])=>(e[t]=X(a),e),{}),U=[Object.assign({id:"proc:29",originalId:"29",sources:F,effectDelay:l,value:Object.assign(Object.assign({},B),{hits:u,distribution:D})},r)];return E.length>0&&(U[0].value.elements=E),d&&U.push(n(d,{originalId:"29",sources:F,targetData:r,effectDelay:l})),U}),e.set("30",(e,a,p)=>{const{targetData:F,sources:l,effectDelay:u}=s(e,a,p);let D,f=[],d=0;if(e.params){const a=i(e);f=a.slice(0,6).filter(e=>"0"!==e).map(e=>t[e]||w.Unknown),d=X(a[6]),D=c(a.slice(7),7,p)}else"elements added"in e&&(f=Array.isArray(e["elements added"])?e["elements added"]:[w.Unknown]),d=X(e["elements added turns"]);const E=[],B=Object.values(t).filter(e=>e!==w.All);return f.length>0?f.forEach(e=>{const t=B.includes(e)?e:w.Unknown;E.push(Object.assign({id:"proc:30:"+t,originalId:"30",sources:l,effectDelay:u,duration:d},F))}):r(a,d,p)&&E.push(o({originalId:"30",sources:l,buffs:B.concat([w.Unknown]).map(e=>"proc:30:"+e),duration:d,targetData:F})),D&&E.push(n(D,{originalId:"30",sources:l,targetData:F,effectDelay:u})),E})}(Z)),Z}function ee(e){return J&&!e||(J=new Map,function(e){const t={1:g.Fire,2:g.Water,3:g.Earth,4:g.Thunder,5:g.Light,6:g.Dark,X:w.OmniParadigm},a={1:I.Lord,2:I.Anima,3:I.Breaker,4:I.Guardian,5:I.Oracle,6:I.Rex},s={1:l.Poison,2:l.Weak,3:l.Sick,4:l.Injury,5:l.Curse,6:l.Paralysis,7:l.AttackReduction,8:l.DefenseReduction,9:l.RecoveryReduction},i=["atk","def","rec","crit","hp"],n=["poison","weak","sick","injury","curse","paralysis"],o=(e,t,a)=>({conditionInfo:(a&&a.processExtraSkillConditions||V)(e),targetData:(a&&a.getPassiveTargetData||Y)(e,t),sources:(a&&a.createSourcesFromContext||x)(t)}),c=e=>e.params.split(","),r=(e,{originalId:t,sources:a,targetData:s,conditionInfo:i})=>Object.assign({id:j.UNKNOWN_PASSIVE_BUFF_PARAMS,originalId:t,sources:a,value:e,conditions:Object.assign({},i)},s),p=(e,t,a)=>{let s;return e&&e.length>0&&(s=(a&&a.createUnknownParamsValue||z)(e,t)),s};let F;!function(e){e.Hp="hp",e.Bb="bb gauge"}(F||(F={}));const u=(e,t,a)=>({threshold:X(e),requireAbove:"1"===t,type:a}),D=(e,t,a="buff requirement")=>{let s=0,i=!1;return`${t} above % ${a}`in e?(s=X(e[`${t} above % ${a}`]),i=!0):(s=X(e[`${t} below % ${a}`]),i=!1),{threshold:s,requireAbove:i,type:t}},f=({threshold:e,requireAbove:t,type:a})=>{let s;return a===F.Hp?s=t?{hpGreaterThanOrEqualTo:e}:{hpLessThanOrEqualTo:e}:a===F.Bb&&(s=t?{bbGaugeGreaterThanOrEqualTo:e}:{bbGaugeLessThanOrEqualTo:e}),s},d=({effect:e,context:t,injectionContext:a,originalId:s,effectKey:i,buffId:n})=>{const{conditionInfo:F,targetData:l,sources:u}=o(e,t,a),D=e,f=[];let d,E=0;if(D.params){const[e,...t]=c(D);E=X(e),d=p(t,1,a)}else E=X(D[i]);return 0!==E&&f.push(Object.assign({id:n,originalId:s,sources:u,value:E,conditions:Object.assign({},F)},l)),d&&f.push(r(d,{originalId:s,sources:u,targetData:l,conditionInfo:F})),f},E=({effect:e,context:t,injectionContext:a,originalId:s,effectKeyLow:i,effectKeyHigh:n,effectKeyChance:F,buffKeyLow:l,buffKeyHigh:u,defaultEffectChance:D=0,parseParamValue:f=(e=>X(e)),generateBaseConditions:d=(()=>({})),buffId:E})=>{const{conditionInfo:B,targetData:U,sources:T}=o(e,t,a),R=e;let m,A,g,_;if(R.params){const[e,t,s,...i]=c(R);m=f(e),A=f(t),g=X(s),_=p(i,3,a)}else m=X(R[i]),A=X(R[n]),g=X(R[F],D);const v=[Object.assign({id:E,originalId:s,sources:T,value:{[l]:m,[u]:A,chance:g},conditions:Object.assign(Object.assign({},B),d())},U)];return _&&v.push(r(_,{originalId:s,sources:T,targetData:U,conditionInfo:B})),v};e.set("1",(e,t,a)=>{const{conditionInfo:s,targetData:n,sources:F}=o(e,t,a),l=e,u=[],D={atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let f;if(l.params){let e;[D.atk,D.def,D.rec,D.crit,D.hp,...e]=c(l),f=p(e,5,a)}else D.hp=l["hp% buff"],D.atk=l["atk% buff"],D.def=l["def% buff"],D.rec=l["rec% buff"],D.crit=l["crit% buff"];return i.forEach(e=>{const t=X(D[e]);0!==t&&u.push(Object.assign({id:"passive:1:"+e,originalId:"1",sources:F,value:t,conditions:Object.assign({},s)},n))}),f&&u.push(r(f,{originalId:"1",sources:F,targetData:n,conditionInfo:s})),u}),e.set("2",(e,a,s)=>{const{conditionInfo:n,targetData:F,sources:l}=o(e,a,s),u=e,D=[],f={elements:[],atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let d;if(u.params){let e,a,i;[a,i,f.atk,f.def,f.rec,f.crit,f.hp,...e]=c(u),[a,i].forEach(e=>{e&&"0"!==e&&f.elements.push(t[e]||w.Unknown)}),d=p(e,7,s)}else f.elements=u["elements buffed"],f.hp=u["hp% buff"],f.atk=u["atk% buff"],f.def=u["def% buff"],f.rec=u["rec% buff"],f.crit=u["crit% buff"];const E=e=>Object.assign({id:"passive:2:"+e,originalId:"2",sources:l,value:X(f[e])},F);return f.elements.length>0?f.elements.forEach(e=>{i.forEach(t=>{0!==X(f[t])&&D.push(Object.assign(Object.assign({},E(t)),{conditions:Object.assign(Object.assign({},n),{targetElements:[e]})}))})}):i.forEach(e=>{0!==X(f[e])&&D.push(Object.assign(Object.assign({},E(e)),{conditions:Object.assign(Object.assign({},n),{targetElements:[w.Unknown]})}))}),d&&D.push(r(d,{originalId:"2",sources:l,targetData:F,conditionInfo:n})),D}),e.set("3",(e,t,s)=>{const{conditionInfo:n,targetData:F,sources:l}=o(e,t,s),u=e,D=[],f={unitType:"",atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let d;if(u.params){let e,t;[t,f.atk,f.def,f.rec,f.crit,f.hp,...e]=c(u),t&&"0"!==t&&(f.unitType=a[t]||"unknown"),d=p(e,6,s)}else f.unitType=u["unit type buffed"],f.hp=u["hp% buff"],f.atk=u["atk% buff"],f.def=u["def% buff"],f.rec=u["rec% buff"],f.crit=u["crit% buff"];const E=f.unitType||"unknown";return i.forEach(e=>{const t=X(f[e]);0!==t&&D.push(Object.assign({id:"passive:3:"+e,originalId:"3",sources:l,value:+t,conditions:Object.assign(Object.assign({},n),{targetUnitType:E})},F))}),d&&D.push(r(d,{originalId:"3",sources:l,targetData:F,conditionInfo:n})),D}),e.set("4",(e,t,a)=>{const{conditionInfo:s,targetData:i,sources:F}=o(e,t,a),l=e,u=[],D={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let f;if(l.params){let e;[D.poison,D.weak,D.sick,D.injury,D.curse,D.paralysis,...e]=c(l),f=p(e,6,a)}else n.forEach(e=>{const t="weak"!==e?e:"weaken";D[e]=l[t+" resist%"]});return n.forEach(e=>{const t=X(D[e]);0!==t&&u.push(Object.assign({id:"passive:4:"+e,originalId:"4",sources:F,value:t,conditions:Object.assign({},s)},i))}),f&&u.push(r(f,{originalId:"4",sources:F,targetData:i,conditionInfo:s})),u}),e.set("5",(e,a,s)=>{const{conditionInfo:i,targetData:n,sources:F}=o(e,a,s),l=e,u=[];let D,f,d="0";if(l.params){let e,a;[a,d,...e]=c(l),D=t[a]||w.Unknown,f=p(e,2,s)}else D=Object.values(t).find(t=>t+" resist%"in e)||w.Unknown,D!==w.Unknown&&(d=l[D+" resist%"]);const E=X(d);return 0!==E&&u.push(Object.assign({id:"passive:5:"+D,originalId:"5",sources:F,value:E,conditions:Object.assign({},i)},n)),f&&u.push(r(f,{originalId:"5",sources:F,targetData:n,conditionInfo:i})),u}),e.set("8",(e,t,a)=>d({effect:e,context:t,injectionContext:a,effectKey:"dmg% mitigation",buffId:"passive:8",originalId:"8"})),e.set("9",(e,t,a)=>d({effect:e,context:t,injectionContext:a,effectKey:"bc fill per turn",buffId:"passive:9",originalId:"9"})),e.set("10",(e,t,a)=>d({effect:e,context:t,injectionContext:a,effectKey:"hc effectiveness%",buffId:"passive:10",originalId:"10"})),e.set("11",(e,t,a)=>{const{conditionInfo:s,targetData:n,sources:l}=o(e,t,a),d=e,E=[],B={atk:"0",def:"0",rec:"0",crit:"0"};let U,T;if(d.params){let e,t,s;[B.atk,B.def,B.rec,B.crit,s,t,...e]=c(d),U=u(s,t,F.Hp),T=p(e,6,a)}else B.atk=d["atk% buff"],B.def=d["def% buff"],B.rec=d["rec% buff"],B.crit=d["crit% buff"],U=D(d,F.Hp);const R=f(U);return i.forEach(e=>{const t=X(B[e]);if("hp"!==e&&0!==t){const a=Object.assign({id:"passive:11:"+e,originalId:"11",sources:l,value:t,conditions:Object.assign(Object.assign({},s),R)},n);E.push(a)}}),T&&E.push(r(T,{originalId:"11",sources:l,targetData:n,conditionInfo:s})),E}),e.set("12",(e,t,a)=>{const{conditionInfo:s,targetData:i,sources:n}=o(e,t,a),l=["bc","hc","item","zel","karma"],d=e,E=[],B={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let U,T;if(d.params){let e,t,s;[B.bc,B.hc,B.item,B.zel,B.karma,s,t,...e]=c(d),U=u(s,t,F.Hp),T=p(e,7,a)}else l.forEach(e=>{B[e]=d[e+" drop rate% buff"]}),U=D(d,F.Hp);const R=f(U);return l.forEach(e=>{const t=X(B[e]);if(0!==t){const a=Object.assign({id:"passive:12:"+e,originalId:"12",sources:n,value:t,conditions:Object.assign(Object.assign({},s),R)},i);E.push(a)}}),T&&E.push(r(T,{originalId:"12",sources:n,targetData:i,conditionInfo:s})),E}),e.set("13",(e,t,a)=>E({effect:e,context:t,injectionContext:a,originalId:"13",effectKeyLow:"bc fill on enemy defeat low",effectKeyHigh:"bc fill on enemy defeat high",effectKeyChance:"bc fill on enemy defeat%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>X(e)/100,generateBaseConditions:()=>({onEnemyDefeat:!0}),buffId:"passive:13"})),e.set("14",(e,t,a)=>{const{conditionInfo:s,targetData:i,sources:n}=o(e,t,a),F=e;let l,u,D;if(F.params){const[e,t,...s]=c(F);l=X(e),u=X(t),D=p(s,2,a)}else l=X(F["dmg reduction%"]),u=X(F["dmg reduction chance%"]);const f=[Object.assign({id:"passive:14",originalId:"14",sources:n,value:{value:l,chance:u},conditions:Object.assign({},s)},i)];return D&&f.push(r(D,{originalId:"14",sources:n,targetData:i,conditionInfo:s})),f}),e.set("15",(e,t,a)=>E({effect:e,context:t,injectionContext:a,originalId:"15",effectKeyLow:"hp% recover on enemy defeat low",effectKeyHigh:"hp% recover on enemy defeat high",effectKeyChance:"hp% recover on enemy defeat chance%",buffKeyLow:"healLow",buffKeyHigh:"healHigh",generateBaseConditions:()=>({onEnemyDefeat:!0}),defaultEffectChance:100,buffId:"passive:15"})),e.set("16",(e,t,a)=>{const{conditionInfo:s,targetData:i,sources:n}=o(e,t,a),F=e;let l,u,D;if(F.params){const[e,t,...s]=c(F);l=X(e),u=X(t),D=p(s,2,a)}else l=X(F["hp% recover on battle win low"]),u=X(F["hp% recover on battle win high"]);const f=[Object.assign({id:"passive:16",originalId:"16",sources:n,value:{healLow:l,healHigh:u},conditions:Object.assign(Object.assign({},s),{onBattleWin:!0})},i)];return D&&f.push(r(D,{originalId:"16",sources:n,targetData:i,conditionInfo:s})),f}),e.set("17",(e,t,a)=>E({effect:e,context:t,injectionContext:a,originalId:"17",effectKeyLow:"hp drain% low",effectKeyHigh:"hp drain% high",effectKeyChance:"hp drain chance%",buffKeyLow:"drainHealLow",buffKeyHigh:"drainHealHigh",buffId:"passive:17"})),e.set("19",(e,t,a)=>{const{conditionInfo:s,targetData:i,sources:n}=o(e,t,a),F=["bc","hc","item","zel","karma"],l=e,u=[],D={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let f;if(l.params){let e;[D.bc,D.hc,D.item,D.zel,D.karma,...e]=c(l),f=p(e,5,a)}else F.forEach(e=>{D[e]=l[e+" drop rate% buff"]});return F.forEach(e=>{const t=X(D[e]);0!==t&&u.push(Object.assign({id:"passive:19:"+e,originalId:"19",sources:n,value:t,conditions:Object.assign({},s)},i))}),f&&u.push(r(f,{originalId:"19",sources:n,targetData:i,conditionInfo:s})),u}),e.set("20",(e,t,a)=>{const{conditionInfo:i,targetData:n,sources:F}=o(e,t,a),u=[],D=e;let f;if(D.params){let e=c(D);e.length%2!=0&&"0"!==e[e.length-1]&&(f=p(e.slice(-1),e.length-1,a),e=e.slice(0,e.length-1));const t=e.length;for(let a=0;a<t;a+=2){const t=e[a],i=X(e[a+1]);if("0"!==t||0!==i){const e=s[t]||l.Unknown;u.push({ailment:e,chance:i})}}}else Object.values(s).forEach(t=>{let a;a=t===l.Weak?"weaken%":t===l.AttackReduction||t===l.DefenseReduction||t===l.RecoveryReduction?t:t+"%",a in e&&u.push({ailment:t,chance:X(D[a])})});const d=u.map(({ailment:e,chance:t})=>Object.assign({id:"passive:20:"+e,originalId:"20",sources:F,value:t,conditions:Object.assign({},i)},n));return f&&d.push(r(f,{originalId:"20",sources:F,targetData:n,conditionInfo:i})),d}),e.set("21",(e,t,a)=>{const{conditionInfo:s,targetData:n,sources:F}=o(e,t,a),l=e,u=[],D={atk:"0",def:"0",rec:"0",crit:"0"};let f,d=0;if(l.params){let e,t;[D.atk,D.def,D.rec,D.crit,e,...t]=c(l),d=X(e),f=p(t,5,a)}else D.atk=l["first x turns atk% (1)"],D.def=l["first x turns def% (3)"],D.rec=l["first x turns rec% (5)"],D.crit=l["first x turns crit% (7)"],d=X(l["first x turns"]);return i.forEach(e=>{const t=X(D[e]);if("hp"!==e&&0!==t){const a=Object.assign({id:"passive:21:"+e,originalId:"21",sources:F,value:t,duration:d,conditions:Object.assign({},s)},n);u.push(a)}}),f&&u.push(r(f,{originalId:"21",sources:F,targetData:n,conditionInfo:s})),u}),e.set("23",(e,t,a)=>{const{conditionInfo:s,targetData:i,sources:n}=o(e,t,a),F=e;let l,u,D;if(F.params){const[e,t,...s]=c(F);l=X(e)/100,u=X(t)/100,D=p(s,2,a)}else l=X(F["battle end bc fill low"]),u=X(F["battle end bc fill high"]);const f=[Object.assign({id:"passive:23",originalId:"23",sources:n,value:{fillLow:l,fillHigh:u},conditions:Object.assign(Object.assign({},s),{onBattleWin:!0})},i)];return D&&f.push(r(D,{originalId:"23",sources:n,targetData:i,conditionInfo:s})),f}),e.set("24",(e,t,a)=>E({effect:e,context:t,injectionContext:a,originalId:"24",effectKeyLow:"dmg% to hp when attacked low",effectKeyHigh:"dmg% to hp when attacked high",effectKeyChance:"dmg% to hp when attacked chance%",buffKeyLow:"healLow",buffKeyHigh:"healHigh",generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:24"})),e.set("25",(e,t,a)=>E({effect:e,context:t,injectionContext:a,originalId:"25",effectKeyLow:"bc fill when attacked low",effectKeyHigh:"bc fill when attacked high",effectKeyChance:"bc fill when attacked%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>X(e)/100,generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:25"})),e.set("26",(e,t,a)=>E({effect:e,context:t,injectionContext:a,originalId:"26",effectKeyLow:"dmg% reflect low",effectKeyHigh:"dmg% reflect high",effectKeyChance:"dmg% reflect chance%",buffKeyLow:"damageReflectLow",buffKeyHigh:"damageReflectHigh",generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:26"})),e.set("27",(e,t,a)=>d({effect:e,context:t,injectionContext:a,effectKey:"target% chance",buffId:"passive:27",originalId:"27"})),e.set("28",(e,t,a)=>{const{conditionInfo:s,targetData:i,sources:n}=o(e,t,a),l=e;let d,E,B=0;if(l.params){const[e,t,s,...i]=c(l);B=X(e),d=u(t,s,F.Hp),E=p(i,3,a)}else B=X(l["target% chance"]),d=D(l,F.Hp,"passive requirement");const U=[];if(0!==B){const e=f(d),t=Object.assign({id:"passive:28",originalId:"28",sources:n,value:B,conditions:Object.assign(Object.assign({},s),e)},i);U.push(t)}return E&&U.push(r(E,{originalId:"28",sources:n,targetData:i,conditionInfo:s})),U}),e.set("29",(e,t,a)=>d({effect:e,context:t,injectionContext:a,effectKey:"ignore def%",buffId:"passive:29",originalId:"29"})),e.set("30",(e,t,a)=>{const{conditionInfo:s,targetData:n,sources:l}=o(e,t,a),d=e,E=[],B={atk:"0",def:"0",rec:"0",crit:"0"};let U,T;if(d.params){let e,t,s;[B.atk,B.def,B.rec,B.crit,s,t,...e]=c(d),U=u(s,t,F.Bb),T=p(e,6,a)}else B.atk=d["atk% buff"],B.def=d["def% buff"],B.rec=d["rec% buff"],B.crit=d["crit% buff"],U=D(d,F.Bb);const R=f(U);return i.forEach(e=>{const t=X(B[e]);if("hp"!==e&&0!==t){const a=Object.assign({id:"passive:30:"+e,originalId:"30",sources:l,value:t,conditions:Object.assign(Object.assign({},s),R)},n);E.push(a)}}),T&&E.push(r(T,{originalId:"30",sources:l,targetData:n,conditionInfo:s})),E})}(J)),J}!function(e){e.Active="active",e.Passive="passive",e.ConditionalTimed="conditionalTimed",e.Singleton="singleton",e.Burst="burst",e.Attack="attack",e.Unknown="unknown"}(K||(K={})),function(e){e.BraveBurst="bb",e.SuperBraveBurst="sbb",e.UltimateBraveBurst="ubb",e.DualBraveBurst="dbb",e.BondedBraveBurst="bbb",e.BondedSuperBraveBurst="dsbb",e.SpEnhancement="sp",e.Item="item",e.LeaderSkill="ls",e.ExtraSkill="es",e.OmniParadigm="omniParadigm",e.UnitTypeBonus="unitTypeBonus",e.Quest="quest"}(S||(S={})),function(e){e.Unknown="unknown",e.OmniParadigm="omniParadigm",e.All="all"}(w||(w={})),function(e){e.hp="hp",e.atk="atk",e.def="def",e.rec="rec",e.crit="crit",e.hpRecovery="hpRecovery",e.bbGauge="bbGauge",e.bcDropRate="bcDropRate",e.hcDropRate="hcDropRate",e.itemDropRate="itemDropRate",e.zelDropRate="zelDropRate",e.karmaDropRate="karmaDropRate",e.hcEfficacy="hcEfficacy",e.poisonResist="poisonResist",e.weakResist="weakResist",e.sickResist="sickResist",e.injuryResist="injuryResist",e.curseResist="curseResist",e.paralysisResist="paralysisResist",e.poisonInflict="poisonInflict",e.weakInflict="weakInflict",e.sickInflict="sickInflict",e.injuryInflict="injuryInflict",e.curseInflict="curseInflict",e.paralysisInflict="paralysisInflict",e.atkDownResist="atkDownResist",e.defDownResist="defDownResist",e.recDownResist="recDownResist",e.atkDownInflict="atkDownInflict",e.defDownInflict="defDownInflict",e.recDownInflict="recDownInflict",e.mitigation="mitigation",e.fireMitigation="fireMitigation",e.waterMitigation="waterMitigation",e.earthMitigation="earthMitigation",e.thunderMitigation="thunderMitigation",e.lightMitigation="lightMitigation",e.darkMitigation="darkMitigation",e.turnDurationModification="turnDurationModification",e.koResistance="koResistance",e.revive="revive",e.defenseIgnore="defenseIgnore",e.sparkDamage="sparkDamage",e.hitCountModification="hitCountModification",e.damageReflect="damageReflect",e.targetingModification="targetingModification",e.elementModification="elementModification"}(L||(L={})),function(e){e.UNKNOWN="UNKNOWN",e.TURN_DURATION_UP="TURN_DURATION_UP",e.TURN_DURATION_DOWN="TURN_DURATION_DOWN",e.BUFF_HPUP="BUFF_HPUP",e.BUFF_HPDOWN="BUFF_HPDOWN",e.BUFF_ATKUP="BUFF_ATKUP",e.BUFF_ATKDOWN="BUFF_ATKDOWN",e.BUFF_DEFUP="BUFF_DEFUP",e.BUFF_DEFDOWN="BUFF_DEFDOWN",e.BUFF_RECUP="BUFF_RECUP",e.BUFF_RECDOWN="BUFF_RECDOWN",e.BUFF_CRTRATEUP="BUFF_CRTRATEUP",e.BUFF_CRTRATEDOWN="BUFF_CRTRATEDOWN",e.BUFF_HPTHRESHATKUP="BUFF_HPTHRESHATKUP",e.BUFF_HPTHRESHATKDOWN="BUFF_HPTHRESHATKDOWN",e.BUFF_HPTHRESHDEFUP="BUFF_HPTHRESHDEFUP",e.BUFF_HPTHRESHDEFDOWN="BUFF_HPTHRESHDEFDOWN",e.BUFF_HPTHRESHRECUP="BUFF_HPTHRESHRECUP",e.BUFF_HPTHRESHRECDOWN="BUFF_HPTHRESHRECDOWN",e.BUFF_HPTHRESHCRTRATEUP="BUFF_HPTHRESHCRTRATEUP",e.BUFF_HPTHRESHCRTRATEDOWN="BUFF_HPTHRESHCRTRATEDOWN",e.BUFF_BBGAUGETHRESHATKUP="BUFF_BBGAUGETHRESHATKUP",e.BUFF_BBGAUGETHRESHATKDOWN="BUFF_BBGAUGETHRESHATKDOWN",e.BUFF_BBGAUGETHRESHDEFUP="BUFF_BBGAUGETHRESHDEFUP",e.BUFF_BBGAUGETHRESHDEFDOWN="BUFF_BBGAUGETHRESHDEFDOWN",e.BUFF_BBGAUGETHRESHRECUP="BUFF_BBGAUGETHRESHRECUP",e.BUFF_BBGAUGETHRESHRECDOWN="BUFF_BBGAUGETHRESHRECDOWN",e.BUFF_BBGAUGETHRESHCRTRATEUP="BUFF_BBGAUGETHRESHCRTRATEUP",e.BUFF_BBGAUGETHRESHCRTRATEDOWN="BUFF_BBGAUGETHRESHCRTRATEDOWN",e.BUFF_HPREC="BUFF_HPREC",e.BUFF_BBREC="BUFF_BBREC",e.BUFF_DAMAGEBB="BUFF_DAMAGEBB",e.BUFF_BEENATK_HPREC="BUFF_BEENATK_HPREC",e.BUFF_FIREHPUP="BUFF_FIREHPUP",e.BUFF_FIREHPDOWN="BUFF_FIREHPDOWN",e.BUFF_FIREATKUP="BUFF_FIREATKUP",e.BUFF_FIREATKDOWN="BUFF_FIREATKDOWN",e.BUFF_FIREDEFUP="BUFF_FIREDEFUP",e.BUFF_FIREDEFDOWN="BUFF_FIREDEFDOWN",e.BUFF_FIRERECUP="BUFF_FIRERECUP",e.BUFF_FIRERECDOWN="BUFF_FIRERECDOWN",e.BUFF_FIRECRTRATEUP="BUFF_FIRECRTRATEUP",e.BUFF_FIRECRTRATEDOWN="BUFF_FIRECRTRATEDOWN",e.BUFF_WATERHPUP="BUFF_WATERHPUP",e.BUFF_WATERHPDOWN="BUFF_WATERHPDOWN",e.BUFF_WATERATKUP="BUFF_WATERATKUP",e.BUFF_WATERATKDOWN="BUFF_WATERATKDOWN",e.BUFF_WATERDEFUP="BUFF_WATERDEFUP",e.BUFF_WATERDEFDOWN="BUFF_WATERDEFDOWN",e.BUFF_WATERRECUP="BUFF_WATERRECUP",e.BUFF_WATERRECDOWN="BUFF_WATERRECDOWN",e.BUFF_WATERCRTRATEUP="BUFF_WATERCRTRATEUP",e.BUFF_WATERCRTRATEDOWN="BUFF_WATERCRTRATEDOWN",e.BUFF_EARTHHPUP="BUFF_EARTHHPUP",e.BUFF_EARTHHPDOWN="BUFF_EARTHHPDOWN",e.BUFF_EARTHATKUP="BUFF_EARTHATKUP",e.BUFF_EARTHATKDOWN="BUFF_EARTHATKDOWN",e.BUFF_EARTHDEFUP="BUFF_EARTHDEFUP",e.BUFF_EARTHDEFDOWN="BUFF_EARTHDEFDOWN",e.BUFF_EARTHRECUP="BUFF_EARTHRECUP",e.BUFF_EARTHRECDOWN="BUFF_EARTHRECDOWN",e.BUFF_EARTHCRTRATEUP="BUFF_EARTHCRTRATEUP",e.BUFF_EARTHCRTRATEDOWN="BUFF_EARTHCRTRATEDOWN",e.BUFF_THUNDERHPUP="BUFF_THUNDERHPUP",e.BUFF_THUNDERHPDOWN="BUFF_THUNDERHPDOWN",e.BUFF_THUNDERATKUP="BUFF_THUNDERATKUP",e.BUFF_THUNDERATKDOWN="BUFF_THUNDERATKDOWN",e.BUFF_THUNDERDEFUP="BUFF_THUNDERDEFUP",e.BUFF_THUNDERDEFDOWN="BUFF_THUNDERDEFDOWN",e.BUFF_THUNDERRECUP="BUFF_THUNDERRECUP",e.BUFF_THUNDERRECDOWN="BUFF_THUNDERRECDOWN",e.BUFF_THUNDERCRTRATEUP="BUFF_THUNDERCRTRATEUP",e.BUFF_THUNDERCRTRATEDOWN="BUFF_THUNDERCRTRATEDOWN",e.BUFF_LIGHTHPUP="BUFF_LIGHTHPUP",e.BUFF_LIGHTHPDOWN="BUFF_LIGHTHPDOWN",e.BUFF_LIGHTATKUP="BUFF_LIGHTATKUP",e.BUFF_LIGHTATKDOWN="BUFF_LIGHTATKDOWN",e.BUFF_LIGHTDEFUP="BUFF_LIGHTDEFUP",e.BUFF_LIGHTDEFDOWN="BUFF_LIGHTDEFDOWN",e.BUFF_LIGHTRECUP="BUFF_LIGHTRECUP",e.BUFF_LIGHTRECDOWN="BUFF_LIGHTRECDOWN",e.BUFF_LIGHTCRTRATEUP="BUFF_LIGHTCRTRATEUP",e.BUFF_LIGHTCRTRATEDOWN="BUFF_LIGHTCRTRATEDOWN",e.BUFF_DARKHPUP="BUFF_DARKHPUP",e.BUFF_DARKHPDOWN="BUFF_DARKHPDOWN",e.BUFF_DARKATKUP="BUFF_DARKATKUP",e.BUFF_DARKATKDOWN="BUFF_DARKATKDOWN",e.BUFF_DARKDEFUP="BUFF_DARKDEFUP",e.BUFF_DARKDEFDOWN="BUFF_DARKDEFDOWN",e.BUFF_DARKRECUP="BUFF_DARKRECUP",e.BUFF_DARKRECDOWN="BUFF_DARKRECDOWN",e.BUFF_DARKCRTRATEUP="BUFF_DARKCRTRATEUP",e.BUFF_DARKCRTRATEDOWN="BUFF_DARKCRTRATEDOWN",e.BUFF_ELEMENTHPUP="BUFF_ELEMENTHPUP",e.BUFF_ELEMENTHPDOWN="BUFF_ELEMENTHPDOWN",e.BUFF_ELEMENTATKUP="BUFF_ELEMENTATKUP",e.BUFF_ELEMENTATKDOWN="BUFF_ELEMENTATKDOWN",e.BUFF_ELEMENTDEFUP="BUFF_ELEMENTDEFUP",e.BUFF_ELEMENTDEFDOWN="BUFF_ELEMENTDEFDOWN",e.BUFF_ELEMENTRECUP="BUFF_ELEMENTRECUP",e.BUFF_ELEMENTRECDOWN="BUFF_ELEMENTRECDOWN",e.BUFF_ELEMENTCRTRATEUP="BUFF_ELEMENTCRTRATEUP",e.BUFF_ELEMENTCRTRATEDOWN="BUFF_ELEMENTCRTRATEDOWN",e.BUFF_LORDHPUP="BUFF_LORDHPUP",e.BUFF_LORDHPDOWN="BUFF_LORDHPDOWN",e.BUFF_LORDATKUP="BUFF_LORDATKUP",e.BUFF_LORDATKDOWN="BUFF_LORDATKDOWN",e.BUFF_LORDDEFUP="BUFF_LORDDEFUP",e.BUFF_LORDDEFDOWN="BUFF_LORDDEFDOWN",e.BUFF_LORDRECUP="BUFF_LORDRECUP",e.BUFF_LORDRECDOWN="BUFF_LORDRECDOWN",e.BUFF_LORDCRTRATEUP="BUFF_LORDCRTRATEUP",e.BUFF_LORDCRTRATEDOWN="BUFF_LORDCRTRATEDOWN",e.BUFF_ANIMAHPUP="BUFF_ANIMAHPUP",e.BUFF_ANIMAHPDOWN="BUFF_ANIMAHPDOWN",e.BUFF_ANIMAATKUP="BUFF_ANIMAATKUP",e.BUFF_ANIMAATKDOWN="BUFF_ANIMAATKDOWN",e.BUFF_ANIMADEFUP="BUFF_ANIMADEFUP",e.BUFF_ANIMADEFDOWN="BUFF_ANIMADEFDOWN",e.BUFF_ANIMARECUP="BUFF_ANIMARECUP",e.BUFF_ANIMARECDOWN="BUFF_ANIMARECDOWN",e.BUFF_ANIMACRTRATEUP="BUFF_ANIMACRTRATEUP",e.BUFF_ANIMACRTRATEDOWN="BUFF_ANIMACRTRATEDOWN",e.BUFF_BREAKERHPUP="BUFF_BREAKERHPUP",e.BUFF_BREAKERHPDOWN="BUFF_BREAKERHPDOWN",e.BUFF_BREAKERATKUP="BUFF_BREAKERATKUP",e.BUFF_BREAKERATKDOWN="BUFF_BREAKERATKDOWN",e.BUFF_BREAKERDEFUP="BUFF_BREAKERDEFUP",e.BUFF_BREAKERDEFDOWN="BUFF_BREAKERDEFDOWN",e.BUFF_BREAKERRECUP="BUFF_BREAKERRECUP",e.BUFF_BREAKERRECDOWN="BUFF_BREAKERRECDOWN",e.BUFF_BREAKERCRTRATEUP="BUFF_BREAKERCRTRATEUP",e.BUFF_BREAKERCRTRATEDOWN="BUFF_BREAKERCRTRATEDOWN",e.BUFF_GUARDIANHPUP="BUFF_GUARDIANHPUP",e.BUFF_GUARDIANHPDOWN="BUFF_GUARDIANHPDOWN",e.BUFF_GUARDIANATKUP="BUFF_GUARDIANATKUP",e.BUFF_GUARDIANATKDOWN="BUFF_GUARDIANATKDOWN",e.BUFF_GUARDIANDEFUP="BUFF_GUARDIANDEFUP",e.BUFF_GUARDIANDEFDOWN="BUFF_GUARDIANDEFDOWN",e.BUFF_GUARDIANRECUP="BUFF_GUARDIANRECUP",e.BUFF_GUARDIANRECDOWN="BUFF_GUARDIANRECDOWN",e.BUFF_GUARDIANCRTRATEUP="BUFF_GUARDIANCRTRATEUP",e.BUFF_GUARDIANCRTRATEDOWN="BUFF_GUARDIANCRTRATEDOWN",e.BUFF_ORACLEHPUP="BUFF_ORACLEHPUP",e.BUFF_ORACLEHPDOWN="BUFF_ORACLEHPDOWN",e.BUFF_ORACLEATKUP="BUFF_ORACLEATKUP",e.BUFF_ORACLEATKDOWN="BUFF_ORACLEATKDOWN",e.BUFF_ORACLEDEFUP="BUFF_ORACLEDEFUP",e.BUFF_ORACLEDEFDOWN="BUFF_ORACLEDEFDOWN",e.BUFF_ORACLERECUP="BUFF_ORACLERECUP",e.BUFF_ORACLERECDOWN="BUFF_ORACLERECDOWN",e.BUFF_ORACLECRTRATEUP="BUFF_ORACLECRTRATEUP",e.BUFF_ORACLECRTRATEDOWN="BUFF_ORACLECRTRATEDOWN",e.BUFF_REXHPUP="BUFF_REXHPUP",e.BUFF_REXHPDOWN="BUFF_REXHPDOWN",e.BUFF_REXATKUP="BUFF_REXATKUP",e.BUFF_REXATKDOWN="BUFF_REXATKDOWN",e.BUFF_REXDEFUP="BUFF_REXDEFUP",e.BUFF_REXDEFDOWN="BUFF_REXDEFDOWN",e.BUFF_REXRECUP="BUFF_REXRECUP",e.BUFF_REXRECDOWN="BUFF_REXRECDOWN",e.BUFF_REXCRTRATEUP="BUFF_REXCRTRATEUP",e.BUFF_REXCRTRATEDOWN="BUFF_REXCRTRATEDOWN",e.BUFF_UNITTYPEHPUP="BUFF_UNITTYPEHPUP",e.BUFF_UNITTYPEHPDOWN="BUFF_UNITTYPEHPDOWN",e.BUFF_UNITTYPEATKUP="BUFF_UNITTYPEATKUP",e.BUFF_UNITTYPEATKDOWN="BUFF_UNITTYPEATKDOWN",e.BUFF_UNITTYPEDEFUP="BUFF_UNITTYPEDEFUP",e.BUFF_UNITTYPEDEFDOWN="BUFF_UNITTYPEDEFDOWN",e.BUFF_UNITTYPERECUP="BUFF_UNITTYPERECUP",e.BUFF_UNITTYPERECDOWN="BUFF_UNITTYPERECDOWN",e.BUFF_UNITTYPECRTRATEUP="BUFF_UNITTYPECRTRATEUP",e.BUFF_UNITTYPECRTRATEDOWN="BUFF_UNITTYPECRTRATEDOWN",e.BUFF_CONVERTATKUP="BUFF_CONVERTATKUP",e.BUFF_CONVERTATKDOWN="BUFF_CONVERTATKDOWN",e.BUFF_CONVERTDEFUP="BUFF_CONVERTDEFUP",e.BUFF_CONVERTDEFDOWN="BUFF_CONVERTDEFDOWN",e.BUFF_CONVERTRECUP="BUFF_CONVERTRECUP",e.BUFF_CONVERTRECDOWN="BUFF_CONVERTRECDOWN",e.BUFF_POISONBLK="BUFF_POISONBLK",e.BUFF_WEAKBLK="BUFF_WEAKBLK",e.BUFF_SICKBLK="BUFF_SICKBLK",e.BUFF_INJURYBLK="BUFF_INJURYBLK",e.BUFF_CURSEBLK="BUFF_CURSEBLK",e.BUFF_PARALYSISBLK="BUFF_PARALYSISBLK",e.BUFF_ATKDOWNBLK="BUFF_ATKDOWNBLK",e.BUFF_DEFDOWNBLK="BUFF_DEFDOWNBLK",e.BUFF_RECDOWNBLK="BUFF_RECDOWNBLK",e.BUFF_AILMENTBLK="BUFF_AILMENTBLK",e.DEBUFF_POISON="DEBUFF_POISON",e.DEBUFF_WEAK="DEBUFF_WEAK",e.DEBUFF_SICK="DEBUFF_SICK",e.DEBUFF_INJURY="DEBUFF_INJURY",e.DEBUFF_CURSE="DEBUFF_CURSE",e.DEBUFF_PARALYSIS="DEBUFF_PARALYSIS",e.DEBUFF_AILMENT="DEBUFF_AILMENT",e.BUFF_ADDPOISON="BUFF_ADDPOISON",e.BUFF_ADDWEAK="BUFF_ADDWEAK",e.BUFF_ADDSICK="BUFF_ADDSICK",e.BUFF_ADDINJURY="BUFF_ADDINJURY",e.BUFF_ADDCURSE="BUFF_ADDCURSE",e.BUFF_ADDPARA="BUFF_ADDPARA",e.BUFF_ADDAILMENT="BUFF_ADDAILMENT",e.BUFF_ADDATKDOWN="BUFF_ADDATKDOWN",e.BUFF_ADDDEFDOWN="BUFF_ADDDEFDOWN",e.BUFF_ADDRECDOWN="BUFF_ADDRECDOWN",e.BUFF_DAMAGECUT="BUFF_DAMAGECUT",e.BUFF_FIREDMGDOWN="BUFF_FIREDMGDOWN",e.BUFF_WATERDMGDOWN="BUFF_WATERDMGDOWN",e.BUFF_EARTHDMGDOWN="BUFF_EARTHDMGDOWN",e.BUFF_THUNDERDMGDOWN="BUFF_THUNDERDMGDOWN",e.BUFF_LIGHTDMGDOWN="BUFF_LIGHTDMGDOWN",e.BUFF_DARKDMGDOWN="BUFF_DARKDMGDOWN",e.BUFF_ELEMENTDMGDOWN="BUFF_ELEMENTDMGDOWN",e.BUFF_HCDROP="BUFF_HCDROP",e.BUFF_HCDOWN="BUFF_HCDOWN",e.BUFF_BCDROP="BUFF_BCDROP",e.BUFF_BCDOWN="BUFF_BCDOWN",e.BUFF_ITEMDROP="BUFF_ITEMDROP",e.BUFF_ITEMDOWN="BUFF_ITEMDOWN",e.BUFF_ZELDROP="BUFF_ZELDROP",e.BUFF_ZELDOWN="BUFF_ZELDOWN",e.BUFF_KARMADROP="BUFF_KARMADROP",e.BUFF_KARMADOWN="BUFF_KARMADOWN",e.BUFF_HPTHRESHHCDROP="BUFF_HPTHRESHHCDROP",e.BUFF_HPTHRESHHCDOWN="BUFF_HPTHRESHHCDOWN",e.BUFF_HPTHRESHBCDROP="BUFF_HPTHRESHBCDROP",e.BUFF_HPTHRESHBCDOWN="BUFF_HPTHRESHBCDOWN",e.BUFF_HPTHRESHITEMDROP="BUFF_HPTHRESHITEMDROP",e.BUFF_HPTHRESHITEMDOWN="BUFF_HPTHRESHITEMDOWN",e.BUFF_HPTHRESHZELDROP="BUFF_HPTHRESHZELDROP",e.BUFF_HPTHRESHZELDOWN="BUFF_HPTHRESHZELDOWN",e.BUFF_HPTHRESHKARMADROP="BUFF_HPTHRESHKARMADROP",e.BUFF_HPTHRESHKARMADOWN="BUFF_HPTHRESHKARMADOWN",e.BUFF_HCREC="BUFF_HCREC",e.BUFF_KOBLK="BUFF_KOBLK",e.BUFF_HPABS="BUFF_HPABS",e.BUFF_IGNOREDEF="BUFF_IGNOREDEF",e.BUFF_SPARKUP="BUFF_SPARKUP",e.BUFF_HITUP="BUFF_HITUP",e.BUFF_COUNTERDAMAGE="BUFF_COUNTERDAMAGE",e.BUFF_GETENEATT="BUFF_GETENEATT",e.BUFF_REPENEATT="BUFF_REPENEATT",e.BUFF_HPTHRESHGETENEATT="BUFF_HPTHRESHGETENEATT",e.BUFF_HPTHRESHREPENEATT="BUFF_HPTHRESHREPENEATT",e.BUFF_ADDFIRE="BUFF_ADDFIRE",e.BUFF_ADDWATER="BUFF_ADDWATER",e.BUFF_ADDEARTH="BUFF_ADDEARTH",e.BUFF_ADDTHUNDER="BUFF_ADDTHUNDER",e.BUFF_ADDLIGHT="BUFF_ADDLIGHT",e.BUFF_ADDDARK="BUFF_ADDDARK",e.BUFF_ADDELEMENT="BUFF_ADDELEMENT",e.ATK_ST="ATK_ST",e.ATK_AOE="ATK_AOE",e.ATK_RT="ATK_RT",e.ATK_ST_HPREC="ATK_ST_HPREC",e.ATK_AOE_HPREC="ATK_AOE_HPREC",e.ATK_ST_PROPORTIONAL="ATK_ST_PROPORTIONAL",e.ATK_AOE_PROPORTIONAL="ATK_AOE_PROPORTIONAL",e.ATK_ST_FIXED="ATK_ST_FIXED",e.ATK_AOE_FIXED="ATK_AOE_FIXED",e.ATK_ST_MULTIELEMENT="ATK_ST_MULTIELEMENT",e.ATK_AOE_MULTIELEMENT="ATK_AOE_MULTIELEMENT"}(M||(M={})),function(e){e.UNKNOWN_PASSIVE_EFFECT_ID="UNKNOWN_PASSIVE_EFFECT_ID",e.UNKNOWN_PASSIVE_BUFF_PARAMS="UNKNOWN_PASSIVE_BUFF_PARAMS",e.TURN_DURATION_MODIFICATION="TURN_DURATION_MODIFICATION",e["passive:1:hp"]="passive:1:hp",e["passive:1:atk"]="passive:1:atk",e["passive:1:def"]="passive:1:def",e["passive:1:rec"]="passive:1:rec",e["passive:1:crit"]="passive:1:crit",e["passive:2:hp"]="passive:2:hp",e["passive:2:atk"]="passive:2:atk",e["passive:2:def"]="passive:2:def",e["passive:2:rec"]="passive:2:rec",e["passive:2:crit"]="passive:2:crit",e["passive:3:hp"]="passive:3:hp",e["passive:3:atk"]="passive:3:atk",e["passive:3:def"]="passive:3:def",e["passive:3:rec"]="passive:3:rec",e["passive:3:crit"]="passive:3:crit",e["passive:4:poison"]="passive:4:poison",e["passive:4:weak"]="passive:4:weak",e["passive:4:sick"]="passive:4:sick",e["passive:4:injury"]="passive:4:injury",e["passive:4:curse"]="passive:4:curse",e["passive:4:paralysis"]="passive:4:paralysis",e["passive:5:fire"]="passive:5:fire",e["passive:5:water"]="passive:5:water",e["passive:5:earth"]="passive:5:earth",e["passive:5:thunder"]="passive:5:thunder",e["passive:5:light"]="passive:5:light",e["passive:5:dark"]="passive:5:dark",e["passive:5:unknown"]="passive:5:unknown",e["passive:8"]="passive:8",e["passive:9"]="passive:9",e["passive:10"]="passive:10",e["passive:11:atk"]="passive:11:atk",e["passive:11:def"]="passive:11:def",e["passive:11:rec"]="passive:11:rec",e["passive:11:crit"]="passive:11:crit",e["passive:12:bc"]="passive:12:bc",e["passive:12:hc"]="passive:12:hc",e["passive:12:item"]="passive:12:item",e["passive:12:zel"]="passive:12:zel",e["passive:12:karma"]="passive:12:karma",e["passive:13"]="passive:13",e["passive:14"]="passive:14",e["passive:15"]="passive:15",e["passive:16"]="passive:16",e["passive:17"]="passive:17",e["passive:19:bc"]="passive:19:bc",e["passive:19:hc"]="passive:19:hc",e["passive:19:item"]="passive:19:item",e["passive:19:zel"]="passive:19:zel",e["passive:19:karma"]="passive:19:karma",e["passive:20:poison"]="passive:20:poison",e["passive:20:weak"]="passive:20:weak",e["passive:20:sick"]="passive:20:sick",e["passive:20:injury"]="passive:20:injury",e["passive:20:curse"]="passive:20:curse",e["passive:20:paralysis"]="passive:20:paralysis",e["passive:20:atk down"]="passive:20:atk down",e["passive:20:def down"]="passive:20:def down",e["passive:20:rec down"]="passive:20:rec down",e["passive:20:unknown"]="passive:20:unknown",e["passive:21:atk"]="passive:21:atk",e["passive:21:def"]="passive:21:def",e["passive:21:rec"]="passive:21:rec",e["passive:21:crit"]="passive:21:crit",e["passive:23"]="passive:23",e["passive:24"]="passive:24",e["passive:25"]="passive:25",e["passive:26"]="passive:26",e["passive:27"]="passive:27",e["passive:28"]="passive:28",e["passive:29"]="passive:29",e["passive:30:atk"]="passive:30:atk",e["passive:30:def"]="passive:30:def",e["passive:30:rec"]="passive:30:rec",e["passive:30:crit"]="passive:30:crit",e.UNKNOWN_PROC_EFFECT_ID="UNKNOWN_PROC_EFFECT_ID",e.UNKNOWN_PROC_BUFF_PARAMS="UNKNOWN_PROC_BUFF_PARAMS",e["proc:1"]="proc:1",e["proc:2"]="proc:2",e["proc:3"]="proc:3",e["proc:4:flat"]="proc:4:flat",e["proc:4:percent"]="proc:4:percent",e["proc:5:atk"]="proc:5:atk",e["proc:5:def"]="proc:5:def",e["proc:5:rec"]="proc:5:rec",e["proc:5:crit"]="proc:5:crit",e["proc:6:bc"]="proc:6:bc",e["proc:6:hc"]="proc:6:hc",e["proc:6:item"]="proc:6:item",e["proc:7"]="proc:7",e["proc:8:flat"]="proc:8:flat",e["proc:8:percent"]="proc:8:percent",e["proc:9:atk"]="proc:9:atk",e["proc:9:def"]="proc:9:def",e["proc:9:rec"]="proc:9:rec",e["proc:9:unknown"]="proc:9:unknown",e["proc:10:poison"]="proc:10:poison",e["proc:10:weak"]="proc:10:weak",e["proc:10:sick"]="proc:10:sick",e["proc:10:injury"]="proc:10:injury",e["proc:10:curse"]="proc:10:curse",e["proc:10:paralysis"]="proc:10:paralysis",e["proc:10:atk down"]="proc:10:atk down",e["proc:10:def down"]="proc:10:def down",e["proc:10:rec down"]="proc:10:rec down",e["proc:10:unknown"]="proc:10:unknown",e["proc:11:poison"]="proc:11:poison",e["proc:11:weak"]="proc:11:weak",e["proc:11:sick"]="proc:11:sick",e["proc:11:injury"]="proc:11:injury",e["proc:11:curse"]="proc:11:curse",e["proc:11:paralysis"]="proc:11:paralysis",e["proc:11:atk down"]="proc:11:atk down",e["proc:11:def down"]="proc:11:def down",e["proc:11:rec down"]="proc:11:rec down",e["proc:11:unknown"]="proc:11:unknown",e["proc:12"]="proc:12",e["proc:13"]="proc:13",e["proc:14"]="proc:14",e["proc:16:fire"]="proc:16:fire",e["proc:16:water"]="proc:16:water",e["proc:16:earth"]="proc:16:earth",e["proc:16:thunder"]="proc:16:thunder",e["proc:16:light"]="proc:16:light",e["proc:16:dark"]="proc:16:dark",e["proc:16:all"]="proc:16:all",e["proc:16:unknown"]="proc:16:unknown",e["proc:17:poison"]="proc:17:poison",e["proc:17:weak"]="proc:17:weak",e["proc:17:sick"]="proc:17:sick",e["proc:17:injury"]="proc:17:injury",e["proc:17:curse"]="proc:17:curse",e["proc:17:paralysis"]="proc:17:paralysis",e["proc:18"]="proc:18",e["proc:19"]="proc:19",e["proc:20"]="proc:20",e["proc:22"]="proc:22",e["proc:23"]="proc:23",e["proc:24:atk"]="proc:24:atk",e["proc:24:def"]="proc:24:def",e["proc:24:rec"]="proc:24:rec",e["proc:26"]="proc:26",e["proc:27"]="proc:27",e["proc:28"]="proc:28",e["proc:29"]="proc:29",e["proc:30:fire"]="proc:30:fire",e["proc:30:water"]="proc:30:water",e["proc:30:earth"]="proc:30:earth",e["proc:30:thunder"]="proc:30:thunder",e["proc:30:light"]="proc:30:light",e["proc:30:dark"]="proc:30:dark",e["proc:30:unknown"]="proc:30:unknown"}(j||(j={}));const te=Object.freeze(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({UNKNOWN_PASSIVE_EFFECT_ID:{id:j.UNKNOWN_PASSIVE_EFFECT_ID,name:"Unknown Passive Effect",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PASSIVE_BUFF_PARAMS:{id:j.UNKNOWN_PASSIVE_BUFF_PARAMS,name:"Unknown Passive Buff Parameters",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},TURN_DURATION_MODIFICATION:{id:j.TURN_DURATION_MODIFICATION,name:"Passive Turn Duration Modification",stat:L.turnDurationModification,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.duration&&e.value.duration<0?M.TURN_DURATION_DOWN:M.TURN_DURATION_UP]},"passive:1:hp":{id:j["passive:1:hp"],name:"Passive HP Boost",stat:L.hp,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPDOWN:M.BUFF_HPUP]},"passive:1:atk":{id:j["passive:1:atk"],name:"Passive Attack Boost",stat:L.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:1:def":{id:j["passive:1:def"],name:"Passive Defense Boost",stat:L.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:1:rec":{id:j["passive:1:rec"],name:"Passive Recovery Boost",stat:L.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:1:crit":{id:j["passive:1:crit"],name:"Passive Critical Hit Rate Boost",stat:L.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]}},(()=>{const e=e=>t=>{let a="",s="UP";t&&(t.value&&t.value<0&&(s="DOWN"),t.conditions&&t.conditions.targetElements&&(a=t.conditions.targetElements[0])),"string"!=typeof a&&(a="");let i=`BUFF_${a.toUpperCase()}${e}${s}`;return a&&i in M||(i=`BUFF_ELEMENT${e}${s}`),[M[i]]};return{"passive:2:hp":{id:j["passive:2:hp"],name:"Passive Elemental HP Boost",stat:L.hp,stackType:K.Passive,icons:e("HP")},"passive:2:atk":{id:j["passive:2:atk"],name:"Passive Elemental Attack Boost",stat:L.atk,stackType:K.Passive,icons:e("ATK")},"passive:2:def":{id:j["passive:2:def"],name:"Passive Elemental Defense Boost",stat:L.def,stackType:K.Passive,icons:e("DEF")},"passive:2:rec":{id:j["passive:2:rec"],name:"Passive Elemental Recovery Boost",stat:L.rec,stackType:K.Passive,icons:e("REC")},"passive:2:crit":{id:j["passive:2:crit"],name:"Passive Elemental Critical Hit Rate Boost",stat:L.crit,stackType:K.Passive,icons:e("CRTRATE")}}})()),(()=>{const e=e=>t=>{let a="",s="UP";t&&(t.value&&t.value<0&&(s="DOWN"),t.conditions&&(a=t.conditions.targetUnitType||"")),"string"==typeof a&&a||(a="unknown");let i=`BUFF_${a.toUpperCase()}${e}${s}`;return a&&i in M||(i=`BUFF_UNITTYPE${e}${s}`),[M[i]]};return{"passive:3:hp":{id:j["passive:3:hp"],name:"Passive Type-Based HP Boost",stat:L.hp,stackType:K.Passive,icons:e("HP")},"passive:3:atk":{id:j["passive:3:atk"],name:"Passive Type-Based Attack Boost",stat:L.atk,stackType:K.Passive,icons:e("ATK")},"passive:3:def":{id:j["passive:3:def"],name:"Passive Type-Based Defense Boost",stat:L.def,stackType:K.Passive,icons:e("DEF")},"passive:3:rec":{id:j["passive:3:rec"],name:"Passive Type-Based Recovery Boost",stat:L.rec,stackType:K.Passive,icons:e("REC")},"passive:3:crit":{id:j["passive:3:crit"],name:"Passive Type-Based Critical Hit Rate Boost",stat:L.crit,stackType:K.Passive,icons:e("CRTRATE")}}})()),{"passive:4:poison":{id:j["passive:4:poison"],name:"Passive Poison Resist",stat:L.poisonResist,stackType:K.Passive,icons:()=>[M.BUFF_POISONBLK]},"passive:4:weak":{id:j["passive:4:weak"],name:"Passive Weak Resist",stat:L.weakResist,stackType:K.Passive,icons:()=>[M.BUFF_WEAKBLK]},"passive:4:sick":{id:j["passive:4:sick"],name:"Passive Sick Resist",stat:L.sickResist,stackType:K.Passive,icons:()=>[M.BUFF_SICKBLK]},"passive:4:injury":{id:j["passive:4:injury"],name:"Passive Injury Resist",stat:L.injuryResist,stackType:K.Passive,icons:()=>[M.BUFF_INJURYBLK]},"passive:4:curse":{id:j["passive:4:curse"],name:"Passive Curse Resist",stat:L.curseResist,stackType:K.Passive,icons:()=>[M.BUFF_CURSEBLK]},"passive:4:paralysis":{id:j["passive:4:paralysis"],name:"Passive Paralysis Resist",stat:L.poisonResist,stackType:K.Passive,icons:()=>[M.BUFF_PARALYSISBLK]},"passive:5:fire":{id:j["passive:5:fire"],name:"Passive Fire Damage Reduction",stat:L.fireMitigation,stackType:K.Passive,icons:()=>[M.BUFF_FIREDMGDOWN]},"passive:5:water":{id:j["passive:5:water"],name:"Passive Water Damage Reduction",stat:L.waterMitigation,stackType:K.Passive,icons:()=>[M.BUFF_WATERDMGDOWN]},"passive:5:earth":{id:j["passive:5:earth"],name:"Passive Earth Damage Reduction",stat:L.earthMitigation,stackType:K.Passive,icons:()=>[M.BUFF_EARTHDMGDOWN]},"passive:5:thunder":{id:j["passive:5:thunder"],name:"Passive Thunder Damage Reduction",stat:L.thunderMitigation,stackType:K.Passive,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"passive:5:light":{id:j["passive:5:light"],name:"Passive Light Damage Reduction",stat:L.lightMitigation,stackType:K.Passive,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"passive:5:dark":{id:j["passive:5:dark"],name:"Passive Dark Damage Reduction",stat:L.darkMitigation,stackType:K.Passive,icons:()=>[M.BUFF_DARKDMGDOWN]},"passive:5:unknown":{id:j["passive:5:unknown"],name:"Passive Elemental Damage Reduction (Unspecified Element)",stat:L.mitigation,stackType:K.Passive,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"passive:8":{id:j["passive:8"],name:"Passive Damage Reduction",stat:L.mitigation,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGECUT]},"passive:9":{id:j["passive:9"],name:"Passive Gradual BB Gauge Fill",stat:L.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:10":{id:j["passive:10"],name:"Passive HC Efficacy",stat:L.hcEfficacy,stackType:K.Passive,icons:()=>[M.BUFF_HCREC]},"passive:11:atk":{id:j["passive:11:atk"],name:"Passive HP-Conditional Attack Boost",stat:L.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHATKDOWN:M.BUFF_HPTHRESHATKUP]},"passive:11:def":{id:j["passive:11:def"],name:"Passive HP-Conditional Defense Boost",stat:L.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHDEFDOWN:M.BUFF_HPTHRESHDEFUP]},"passive:11:rec":{id:j["passive:11:rec"],name:"Passive HP-Conditional Recovery Boost",stat:L.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHRECDOWN:M.BUFF_HPTHRESHRECUP]},"passive:11:crit":{id:j["passive:11:crit"],name:"Passive HP-Conditional Critical Hit Rate Boost",stat:L.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHCRTRATEDOWN:M.BUFF_HPTHRESHCRTRATEUP]},"passive:12:bc":{id:j["passive:12:bc"],name:"Passive HP-Conditional Battle Crystal Drop Rate Boost",stat:L.bcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHBCDOWN:M.BUFF_HPTHRESHBCDROP]},"passive:12:hc":{id:j["passive:12:hc"],name:"Passive HP-Conditional Heart Crystal Drop Rate Boost",stat:L.hcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHHCDOWN:M.BUFF_HPTHRESHHCDROP]},"passive:12:item":{id:j["passive:12:item"],name:"Passive HP-Conditional Item Drop Rate Boost",stat:L.itemDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHITEMDOWN:M.BUFF_HPTHRESHITEMDROP]},"passive:12:zel":{id:j["passive:12:zel"],name:"Passive HP-Conditional Zel Drop Rate Boost",stat:L.zelDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHZELDOWN:M.BUFF_HPTHRESHZELDROP]},"passive:12:karma":{id:j["passive:12:karma"],name:"Passive HP-Conditional Karma Drop Rate Boost",stat:L.karmaDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHKARMADOWN:M.BUFF_HPTHRESHKARMADROP]},"passive:13":{id:j["passive:13"],name:"Passive BB Gauge Fill on Enemy Defeat",stat:L.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:14":{id:j["passive:14"],name:"Passive Damage Reduction (Chance)",stat:L.mitigation,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGECUT]},"passive:15":{id:j["passive:15"],name:"Passive Heal on Enemy Defeat",stat:L.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_HPREC]},"passive:16":{id:j["passive:16"],name:"Passive Heal on Battle Win",stat:L.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_HPREC]},"passive:17":{id:j["passive:17"],name:"HP Absorption",stat:L.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_HPABS]},"passive:19:bc":{id:j["passive:19:bc"],name:"Passive Battle Crystal Drop Rate Boost",stat:L.bcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_BCDROP]},"passive:19:hc":{id:j["passive:19:hc"],name:"Passive Heart Crystal Drop Rate Boost",stat:L.hcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_HCDROP]},"passive:19:item":{id:j["passive:19:item"],name:"Passive Item Drop Rate Boost",stat:L.itemDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_ITEMDROP]},"passive:19:zel":{id:j["passive:19:zel"],name:"Passive Zel Drop Rate Boost",stat:L.zelDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ZELDOWN:M.BUFF_ZELDROP]},"passive:19:karma":{id:j["passive:19:karma"],name:"Passive Karma Drop Rate Boost",stat:L.karmaDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_KARMADOWN:M.BUFF_KARMADROP]},"passive:20:poison":{id:j["passive:20:poison"],name:"Passive Poison Infliction",stat:L.poisonInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDPOISON]},"passive:20:weak":{id:j["passive:20:weak"],name:"Passive Weak Infliction",stat:L.weakInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDWEAK]},"passive:20:sick":{id:j["passive:20:sick"],name:"Passive Sick Infliction",stat:L.sickInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDSICK]},"passive:20:injury":{id:j["passive:20:injury"],name:"Passive Injury Infliction",stat:L.injuryInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDINJURY]},"passive:20:curse":{id:j["passive:20:curse"],name:"Passive Curse Infliction",stat:L.curseInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDCURSE]},"passive:20:paralysis":{id:j["passive:20:paralysis"],name:"Passive Paralysis Infliction",stat:L.poisonInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDPARA]},"passive:20:atk down":{id:j["passive:20:atk down"],name:"Passive Attack Reduction Infliction",stat:L.atkDownInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDATKDOWN]},"passive:20:def down":{id:j["passive:20:def down"],name:"Passive Defense Reduction Infliction",stat:L.defDownInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDDEFDOWN]},"passive:20:rec down":{id:j["passive:20:rec down"],name:"Passive Recovery Reduction Infliction",stat:L.recDownInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDRECDOWN]},"passive:20:unknown":{id:j["passive:20:unknown"],name:"Passive Unknown Ailment Infliction",stackType:K.Unknown,icons:()=>[M.BUFF_ADDAILMENT]},"passive:21:atk":{id:j["passive:21:atk"],name:"Attack Boost for X Turns",stat:L.atk,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:21:def":{id:j["passive:21:def"],name:"Defense Boost for X Turns",stat:L.def,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:21:rec":{id:j["passive:21:rec"],name:"Recovery Boost for X Turns",stat:L.rec,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:21:crit":{id:j["passive:21:crit"],name:"Critical Hit Rate Boost for X Turns",stat:L.crit,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]},"passive:23":{id:j["passive:23"],name:"Passive BC Fill on Battle Win",stat:L.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:24":{id:j["passive:24"],name:"Passive Heal when Attacked",stat:L.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_BEENATK_HPREC]},"passive:25":{id:j["passive:25"],name:"Passive BC Fill when Attacked",stat:L.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGEBB]},"passive:26":{id:j["passive:26"],name:"Passive Damage Counter",stat:L.damageReflect,stackType:K.Passive,icons:()=>[M.BUFF_COUNTERDAMAGE]},"passive:27":{id:j["passive:27"],name:"Passive Target Chance Modification",stat:L.targetingModification,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_REPENEATT:M.BUFF_GETENEATT]},"passive:28":{id:j["passive:28"],name:"Passive HP-Conditional Target Chance Modification",stat:L.targetingModification,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHREPENEATT:M.BUFF_HPTHRESHGETENEATT]},"passive:29":{id:j["passive:29"],name:"Passive Defense Ignore (Chance)",stat:L.defenseIgnore,stackType:K.Passive,icons:()=>[M.BUFF_IGNOREDEF]},"passive:30:atk":{id:j["passive:30:atk"],name:"Passive BB Gauge Conditional Attack Boost",stat:L.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHATKDOWN:M.BUFF_BBGAUGETHRESHATKUP]},"passive:30:def":{id:j["passive:30:def"],name:"Passive BB Gauge Conditional Defense Boost",stat:L.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHDEFDOWN:M.BUFF_BBGAUGETHRESHDEFUP]},"passive:30:rec":{id:j["passive:30:rec"],name:"Passive BB Gauge Conditional Recovery Boost",stat:L.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHRECDOWN:M.BUFF_BBGAUGETHRESHRECUP]},"passive:30:crit":{id:j["passive:30:crit"],name:"Passive BB Gauge Conditional Critical Hit Rate Boost",stat:L.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHCRTRATEDOWN:M.BUFF_BBGAUGETHRESHCRTRATEUP]},UNKNOWN_PROC_EFFECT_ID:{id:j.UNKNOWN_PROC_EFFECT_ID,name:"Unknown Proc Effect",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PROC_BUFF_PARAMS:{id:j.UNKNOWN_PROC_BUFF_PARAMS,name:"Unknown Proc Buff Parameters",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},"proc:1":{id:j["proc:1"],name:"Regular Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST:M.ATK_AOE]},"proc:2":{id:j["proc:2"],name:"Burst Heal",stat:L.hpRecovery,stackType:K.Burst,icons:()=>[M.BUFF_HPREC]},"proc:3":{id:j["proc:3"],name:"Active Gradual Heal",stat:L.hpRecovery,stackType:K.Active,icons:()=>[M.BUFF_HPREC]},"proc:4:flat":{id:j["proc:4:flat"],name:"Burst BB Gauge Fill (Flat Amount)",stat:L.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBREC]},"proc:4:percent":{id:j["proc:4:percent"],name:"Burst BB Gauge Fill (Percentage)",stat:L.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBREC]}}),(()=>{const e=e=>t=>{let a="",s=!1,i="UP";t&&(t.value&&t.value<0&&(i="DOWN"),t.conditions&&t.conditions.targetElements&&(a=t.conditions.targetElements[0],s=!0)),"string"!=typeof a&&(a="");let n=`BUFF_${a.toUpperCase()}${e}${i}`;return a&&n in M||(n=`BUFF_${s?"ELEMENT":""}${e}${i}`),[M[n]]};return{"proc:5:atk":{id:j["proc:5:atk"],name:"Active Regular/Elemental Attack Boost",stat:L.atk,stackType:K.Active,icons:e("ATK")},"proc:5:def":{id:j["proc:5:def"],name:"Active Regular/Elemental Defense Boost",stat:L.def,stackType:K.Active,icons:e("DEF")},"proc:5:rec":{id:j["proc:5:rec"],name:"Active Regular/Elemental Recovery Boost",stat:L.rec,stackType:K.Active,icons:e("REC")},"proc:5:crit":{id:j["proc:5:crit"],name:"Active Regular/Elemental Critical Hit Rate Boost",stat:L.crit,stackType:K.Active,icons:e("CRTRATE")}}})()),{"proc:6:bc":{id:j["proc:6:bc"],name:"Active Battle Crystal Drop Rate Boost",stat:L.bcDropRate,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_BCDROP]},"proc:6:hc":{id:j["proc:6:hc"],name:"Active Heart Crystal Drop Rate Boost",stat:L.hcDropRate,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_HCDROP]},"proc:6:item":{id:j["proc:6:item"],name:"Active Item Drop Rate Boost",stat:L.itemDropRate,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_ITEMDROP]},"proc:7":{id:j["proc:7"],name:"Guaranteed KO Resistance",stat:L.koResistance,stackType:K.Singleton,icons:()=>[M.BUFF_KOBLK]},"proc:8:flat":{id:j["proc:8:flat"],name:"Max HP Boost (Flat Amount)",stat:L.hp,stackType:K.Singleton,icons:()=>[M.BUFF_HPUP]},"proc:8:percent":{id:j["proc:8:percent"],name:"Max HP Boost (Percentage)",stat:L.hp,stackType:K.Singleton,icons:()=>[M.BUFF_HPUP]}}),(()=>{const e=e=>t=>{let a="",s=!1,i="DOWN";t&&(t.value&&t.value>0&&(i="UP"),t.conditions&&t.conditions.targetElements&&(a=t.conditions.targetElements[0],s=!0)),"string"!=typeof a&&(a="");let n=`BUFF_${a.toUpperCase()}${e}${i}`;return a&&n in M||(n=`BUFF_${s?"ELEMENT":""}${e}${i}`),[M[n]]};return{"proc:9:atk":{id:j["proc:9:atk"],name:"Active Regular/Elemental Attack Reduction",stat:L.atk,stackType:K.Active,icons:e("ATK")},"proc:9:def":{id:j["proc:9:def"],name:"Active Regular/Elemental Defense Reduction",stat:L.def,stackType:K.Active,icons:e("DEF")},"proc:9:rec":{id:j["proc:9:rec"],name:"Active Regular/Elemental Recovery Reduction",stat:L.rec,stackType:K.Active,icons:e("REC")},"proc:9:unknown":{id:j["proc:9:unknown"],name:"Active Regular/Elemental Unknown Stat Reduction",stackType:K.Active,icons:()=>[M.UNKNOWN]}}})()),{"proc:10:poison":{id:j["proc:10:poison"],name:"Poison Cleanse",stat:L.poisonResist,stackType:K.Burst,icons:()=>[M.BUFF_POISONBLK]},"proc:10:weak":{id:j["proc:10:weak"],name:"Weak Cleanse",stat:L.weakResist,stackType:K.Burst,icons:()=>[M.BUFF_WEAKBLK]},"proc:10:sick":{id:j["proc:10:sick"],name:"Sick Cleanse",stat:L.sickResist,stackType:K.Burst,icons:()=>[M.BUFF_SICKBLK]},"proc:10:injury":{id:j["proc:10:injury"],name:"Injury Cleanse",stat:L.injuryResist,stackType:K.Burst,icons:()=>[M.BUFF_INJURYBLK]},"proc:10:curse":{id:j["proc:10:curse"],name:"Curse Cleanse",stat:L.curseResist,stackType:K.Burst,icons:()=>[M.BUFF_CURSEBLK]},"proc:10:paralysis":{id:j["proc:10:paralysis"],name:"Paralysis Cleanse",stat:L.poisonResist,stackType:K.Burst,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:10:atk down":{id:j["proc:10:atk down"],name:"Attack Reduction Cleanse",stat:L.atkDownResist,stackType:K.Burst,icons:()=>[M.BUFF_ATKDOWNBLK]},"proc:10:def down":{id:j["proc:10:def down"],name:"Defense Reduction Cleanse",stat:L.defDownResist,stackType:K.Burst,icons:()=>[M.BUFF_DEFDOWNBLK]},"proc:10:rec down":{id:j["proc:10:rec down"],name:"Recovery Reduction Cleanse",stat:L.recDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RECDOWNBLK]},"proc:10:unknown":{id:j["proc:10:unknown"],name:"Unknown Ailment Cleanse",stackType:K.Unknown,icons:()=>[M.BUFF_AILMENTBLK]},"proc:11:poison":{id:j["proc:11:poison"],name:"Poison Infliction",stat:L.poisonInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_POISON]},"proc:11:weak":{id:j["proc:11:weak"],name:"Weak Infliction",stat:L.weakInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_WEAK]},"proc:11:sick":{id:j["proc:11:sick"],name:"Sick Infliction",stat:L.sickInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_SICK]},"proc:11:injury":{id:j["proc:11:injury"],name:"Injury Infliction",stat:L.injuryInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_INJURY]},"proc:11:curse":{id:j["proc:11:curse"],name:"Curse Infliction",stat:L.curseInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_CURSE]},"proc:11:paralysis":{id:j["proc:11:paralysis"],name:"Paralysis Infliction",stat:L.poisonInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_PARALYSIS]},"proc:11:atk down":{id:j["proc:11:atk down"],name:"Attack Reduction Infliction",stat:L.atkDownInflict,stackType:K.Burst,icons:()=>[M.BUFF_ATKDOWN]},"proc:11:def down":{id:j["proc:11:def down"],name:"Defense Reduction Infliction",stat:L.defDownInflict,stackType:K.Burst,icons:()=>[M.BUFF_DEFDOWN]},"proc:11:rec down":{id:j["proc:11:rec down"],name:"Recovery Reduction Infliction",stat:L.recDownInflict,stackType:K.Burst,icons:()=>[M.BUFF_RECDOWN]},"proc:11:unknown":{id:j["proc:11:unknown"],name:"Unknown Ailment Infliction",stackType:K.Unknown,icons:()=>[M.DEBUFF_AILMENT]},"proc:12":{id:j["proc:12"],name:"Instant Revive (Guaranteed)",stackType:K.Burst,icons:()=>[M.BUFF_KOBLK]},"proc:13":{id:j["proc:13"],name:"Random Target Damage",stackType:K.Attack,icons:()=>[M.ATK_RT]},"proc:14":{id:j["proc:14"],name:"Lifesteal Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_HPREC:M.ATK_AOE_HPREC]},"proc:16:fire":{id:j["proc:16:fire"],name:"Active Fire Damage Reduction",stat:L.fireMitigation,stackType:K.Active,icons:()=>[M.BUFF_FIREDMGDOWN]},"proc:16:water":{id:j["proc:16:water"],name:"Active Water Damage Reduction",stat:L.waterMitigation,stackType:K.Active,icons:()=>[M.BUFF_WATERDMGDOWN]},"proc:16:earth":{id:j["proc:16:earth"],name:"Active Earth Damage Reduction",stat:L.earthMitigation,stackType:K.Active,icons:()=>[M.BUFF_EARTHDMGDOWN]},"proc:16:thunder":{id:j["proc:16:thunder"],name:"Active Thunder Damage Reduction",stat:L.thunderMitigation,stackType:K.Active,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"proc:16:light":{id:j["proc:16:light"],name:"Active Light Damage Reduction",stat:L.lightMitigation,stackType:K.Active,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"proc:16:dark":{id:j["proc:16:dark"],name:"Active Dark Damage Reduction",stat:L.darkMitigation,stackType:K.Active,icons:()=>[M.BUFF_DARKDMGDOWN]},"proc:16:all":{id:j["proc:16:all"],name:"Active Elemental Damage Reduction (All Elements)",stat:L.mitigation,stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"proc:16:unknown":{id:j["proc:16:unknown"],name:"Active Elemental Damage Reduction (Unspecified Element)",stat:L.mitigation,stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"proc:17:poison":{id:j["proc:17:poison"],name:"Active Poison Resist",stat:L.poisonResist,stackType:K.Active,icons:()=>[M.BUFF_POISONBLK]},"proc:17:weak":{id:j["proc:17:weak"],name:"Active Weak Resist",stat:L.weakResist,stackType:K.Active,icons:()=>[M.BUFF_WEAKBLK]},"proc:17:sick":{id:j["proc:17:sick"],name:"Active Sick Resist",stat:L.sickResist,stackType:K.Active,icons:()=>[M.BUFF_SICKBLK]},"proc:17:injury":{id:j["proc:17:injury"],name:"Active Injury Resist",stat:L.injuryResist,stackType:K.Active,icons:()=>[M.BUFF_INJURYBLK]},"proc:17:curse":{id:j["proc:17:curse"],name:"Active Curse Resist",stat:L.curseResist,stackType:K.Active,icons:()=>[M.BUFF_CURSEBLK]},"proc:17:paralysis":{id:j["proc:17:paralysis"],name:"Active Paralysis Resist",stat:L.poisonResist,stackType:K.Active,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:18":{id:j["proc:18"],name:"Active Damage Reduction",stat:L.mitigation,stackType:K.Active,icons:()=>[M.BUFF_DAMAGECUT]},"proc:19":{id:j["proc:19"],name:"Active Gradual BB Gauge Fill",stat:L.bbGauge,stackType:K.Active,icons:()=>[M.BUFF_BBREC]},"proc:20":{id:j["proc:20"],name:"Active BC Fill when attacked",stat:L.bbGauge,stackType:K.Active,icons:()=>[M.BUFF_DAMAGEBB]},"proc:22":{id:j["proc:22"],name:"Active Defense Ignore",stat:L.defenseIgnore,stackType:K.Active,icons:()=>[M.BUFF_IGNOREDEF]},"proc:23":{id:j["proc:23"],name:"Active Spark Damage Boost",stat:L.sparkDamage,stackType:K.Active,icons:()=>[M.BUFF_SPARKUP]},"proc:24:atk":{id:j["proc:24:atk"],name:"Active Converted Attack Boost",stat:L.atk,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTATKDOWN:M.BUFF_CONVERTATKUP]},"proc:24:def":{id:j["proc:24:def"],name:"Active Converted Defense Boost",stat:L.def,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTDEFDOWN:M.BUFF_CONVERTDEFUP]},"proc:24:rec":{id:j["proc:24:rec"],name:"Active Converted Recovery Boost",stat:L.rec,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTRECDOWN:M.BUFF_CONVERTRECUP]},"proc:26":{id:j["proc:26"],name:"Active Hit Count Boost",stat:L.hitCountModification,stackType:K.Active,icons:()=>[M.BUFF_HITUP]},"proc:27":{id:j["proc:27"],name:"Proportional Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_PROPORTIONAL:M.ATK_AOE_PROPORTIONAL]},"proc:28":{id:j["proc:28"],name:"Fixed Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_FIXED:M.ATK_AOE_FIXED]},"proc:29":{id:j["proc:29"],name:"Multi-Element Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_MULTIELEMENT:M.ATK_AOE_MULTIELEMENT]},"proc:30:fire":{id:j["proc:30:fire"],name:"Active Added Element to Attack (Fire)",stat:L.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDFIRE]},"proc:30:water":{id:j["proc:30:water"],name:"Active Added Element to Attack (Water)",stat:L.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDWATER]},"proc:30:earth":{id:j["proc:30:earth"],name:"Active Added Element to Attack (Earth)",stat:L.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDEARTH]},"proc:30:thunder":{id:j["proc:30:thunder"],name:"Active Added Element to Attack (Thunder)",stat:L.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDTHUNDER]},"proc:30:light":{id:j["proc:30:light"],name:"Active Added Element to Attack (Light)",stat:L.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDLIGHT]},"proc:30:dark":{id:j["proc:30:dark"],name:"Active Added Element to Attack (Dark)",stat:L.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDDARK]},"proc:30:unknown":{id:j["proc:30:unknown"],name:"Active Added Element to Attack (Unspecified Element)",stat:L.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDELEMENT]}}));var ae=Object.freeze({__proto__:null,convertProcEffectToBuffs:function(e,t){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!t||"object"!=typeof t)throw new TypeError("context parameter should be an object");const i=C(e)&&a(e),n=i&&Q(t.reloadMapping).get(i);return"function"==typeof n?n(e,t):function(e,t){const i=C(e)&&a(e)||s.Unknown;return[{id:j.UNKNOWN_PROC_EFFECT_ID,originalId:i,effectDelay:e["effect delay time(ms)/frame"],targetType:e["target type"],targetArea:e["target area"],sources:x(t)}]}(e,t)},convertPassiveEffectToBuffs:function(e,t){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!t||"object"!=typeof t)throw new TypeError("context parameter should be an object");const s=b(e)&&a(e),n=s&&ee(t.reloadMapping).get(s);return"function"==typeof n?n(e,t):function(e,t){const s=b(e)&&a(e)||i.Unknown;return[{id:j.UNKNOWN_PASSIVE_EFFECT_ID,originalId:s,sources:x(t)}]}(e,t)},get BuffSource(){return S},get BuffStackType(){return K},BUFF_METADATA:te,getMetadataForBuff:function(e,t=te){return t&&"object"==typeof t&&Object.hasOwnProperty.call(t,e)?t[e]:void 0}}),se=Object.freeze({__proto__:null,constants:o,parsers:ae,getMetadataForProc:p,getMetadataForPassive:h,isAttackingProcId:F,getNameForProc:O,getNameForPassive:H,isProcEffect:C,isPassiveEffect:b,combineEffectsAndDamageFrames:function(e,t){let a=[];return Array.isArray(e)&&e.length>0&&Array.isArray(t)&&e.length===t.length&&(a=e.map((e,a)=>{const s=t[a];return{delay:e["effect delay time(ms)/frame"],effect:e,frames:s,id:""+(e["proc id"]||e["unknown proc id"]),targetArea:e["random attack"]?f.Random:e["target area"],targetType:e["target type"]}})),a},getEffectId:a,getEffectName:function(e,t={}){let s="";const i=a(e);return b(e)?s=H(i,t&&t.passive):C(e)&&(s=O(i,t&&t.proc)),s},get ProcBuffType(){return n},PASSIVE_METADATA:c,PROC_METADATA:r});var ie=Object.freeze({__proto__:null,getEffectsForExtraSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var ne=Object.freeze({__proto__:null,getEffectsForItem:function(e){let t=[];if(e&&e.effect)if(Array.isArray(e.effect))t=e.effect;else if(Array.isArray(e.effect.effect)){const{effect:a,target_area:s,target_type:i}=e.effect;t=a.map(e=>{const t=Object.assign({},e);return t["target area"]=s,t["target type"]=i,t})}return t},getItemImageUrl:function(e,t){return`${e||""}/item/${t||""}`}});var oe=Object.freeze({__proto__:null,getEffectsForLeaderSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var ce=Object.freeze({__proto__:null,getUnitImageFileNames:function(e,t=""){const a=`${e||""}${t||""}.png`;return{spritesheet:"unit_anime_"+a,battleAvatar:"unit_ills_battle_"+a,guideAvatar:"unit_ills_thum_"+a,fullIllustration:"unit_ills_full_"+a}},getUnitImageUrl:function(e,t){return`${e||""}/unit/img/${t||""}`}});const re="A".charCodeAt(0),pe="a".charCodeAt(0),Fe="0".charCodeAt(0);function le(e){return"string"==typeof e&&e.split("@")[1]||e}var ue=Object.freeze({__proto__:null,getEffectsForSpEnhancement:function(e){const t=[];if(e&&e.skill&&Array.isArray(e.skill.effects)){e.skill.effects.forEach(e=>{Object.keys(e).forEach(a=>{const s=e[a],i=Object.assign(Object.assign({},s),{sp_type:a});t.push(i)})})}return t},getSpCategoryName:function(e){let t;switch(+e){case 1:t=R["Parameter Boost"];break;case 2:t=R.Spark;break;case 3:t=R["Critical Hits"];break;case 4:t=R["Attack Boost"];break;case 5:t=R["BB Gauge"];break;case 6:t=R["HP Recovery"];break;case 7:t=R.Drops;break;case 8:t=R["Ailment Resistance"];break;case 9:t=R["Ailment Infliction"];break;case 10:t=R["Damage Reduction"];break;case 11:t=R.Special;break;default:t=R.Unknown}return t},spIndexToCode:function(e){let t="",a=-1;return Number.isInteger(e)&&(e>=0&&e<=25?a=e+re:e>=26&&e<=51?a=e-26+pe:e>=52&&e<=61&&(a=e-52+Fe)),-1!==a&&(t=String.fromCharCode(a)),t},spCodeToIndex:function(e){let t=-1,a=-1;return e&&"string"==typeof e&&1===e.length&&(e>="A"&&e<="Z"?a=re:e>="a"&&e<="z"?a=pe-26:e>="0"&&e<="9"&&(a=Fe-52)),-1!==a&&(t=e.charCodeAt(0)-a),t},getSpEntryId:le,getSpEntryWithId:function(e,t){const a=le(e);return e&&Array.isArray(t)&&t.find(e=>le(e&&e.id)===a)||void 0},getAllDependenciesForSpEntry:function e(t,a,s=new Set){let i=[];if(t&&t.dependency&&Array.isArray(a)&&a.length>0){const n=le(t.dependency),o=a.find(e=>le(e&&e.id)===n);if(o&&!s.has(o)){s.add(o);const t=e(o,a,s);i=[o].concat(t)}}return i},getAllEntriesThatDependOnSpEntry:function e(t,a,s=new Set){let i=[];if(t&&t.id&&Array.isArray(a)&&a.length>0){const n=t.id;i=a.filter(e=>e.dependency&&e.dependency.includes(n)&&!s.has(e)),i.forEach(t=>{s.add(t);const n=e(t,a,s);i=i.concat(n)})}return i}});return e.buffs=se,e.bursts=k,e.datamineTypes=G,e.extraSkills=ie,e.items=ne,e.leaderSkills=oe,e.spEnhancements=ue,e.units=ce,e.version="0.7.0",e}({});
//# sourceMappingURL=index.browser.min.js.map
