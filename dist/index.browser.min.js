"use strict";var bfmtUtilities=function(e){function a(e,a){const t=e&&Array.isArray(e.levels)?e.levels:[];let s;return s=null===a||isNaN(a)?t.length-1:+a-1,t[s]}function t(e){let a="";return e&&(a=e["proc id"]||e["unknown proc id"]||e["passive id"]||e["unknown passive id"]||""),a}var s,i;!function(e){e.BurstHeal="2",e.Unknown="UNKNOWN_PROC_EFFECT_ID"}(s||(s={})),function(e){e.TriggeredEffect="66",e.Unknown="UNKNOWN_PASSIVE_EFFECT_ID"}(i||(i={}));var n,o=Object.freeze({__proto__:null,get KNOWN_PROC_ID(){return s},get KNOWN_PASSIVE_ID(){return i}});!function(e){e.Attack="Attack"}(n||(n={}));const c=Object.freeze({1:{ID:"1",Name:"Parameter Boost"},2:{ID:"2",Name:"Elemental Parameter Boost"},3:{ID:"3",Name:"Type-Based Parameter Boost"},4:{ID:"4",Name:"Status Negation"},5:{ID:"5",Name:"Elemental Damage Reduction"},6:{ID:"6",Name:""},8:{ID:"8",Name:"Damage Reduction"},9:{ID:"9",Name:"Gradual BB Gauge Boost"},10:{ID:"10",Name:"HC Efficacy"},11:{ID:"11",Name:"HP-Conditional Parameter Boost"},12:{ID:"12",Name:"HP-Conditional Drop Rate Boost"},13:{ID:"13",Name:"BC Fill on Enemy Defeat"},14:{ID:"14",Name:"Damage Reduction (Chance)"},15:{ID:"15",Name:"Heal on Enemy Defeat"},16:{ID:"16",Name:"Heal on Battle Victory"},17:{ID:"17",Name:"HP Absorption"},19:{ID:"19",Name:"Drop Rate Boost"},20:{ID:"20",Name:"Status Infliction"},21:{ID:"21",Name:"Parameter Boost for First X Turns"},23:{ID:"23",Name:"BC Fill on Battle Victory"},24:{ID:"24",Name:"Heal when Attacked (Chance)"},25:{ID:"25",Name:"BC Fill when Hit (Chance)"},26:{ID:"26",Name:"Damage Counter (Chance)"},27:{ID:"27",Name:"Increased Target Chance"},28:{ID:"28",Name:"Decreased Target Chance"},29:{ID:"29",Name:"Defense Ignore (Chance)"},30:{ID:"30",Name:"BB Conditional Parameter Boost"},31:{ID:"31",Name:"Spark Damage Boost, Boost Drop Rate on Spark"},32:{ID:"32",Name:"BC Efficacy"},33:{ID:"33",Name:"Heal over Time"},34:{ID:"34",Name:"Critical Damage Boost"},35:{ID:"35",Name:"BC Fill when Normal Attacking"},36:{ID:"36",Name:"Extra Action"},37:{ID:"37",Name:"Hit Count Boost"},38:{ID:"38",Name:""},39:{ID:"39",Name:""},40:{ID:"40",Name:"Parameter Conversion"},41:{ID:"41",Name:"Unique Element Count Conditional Parameter Boost"},42:{ID:"42",Name:"Gender Parameter Boost"},43:{ID:"43",Name:"Damage Reduction to 1"},44:{ID:"44",Name:"Flat Parameter Boost"},45:{ID:"45",Name:"Critical Damage Negation"},46:{ID:"46",Name:"Parameter Boost Relative to HP Remainaing"},47:{ID:"47",Name:"BC Fill on Spark"},48:{ID:"48",Name:"BC Cost Reduction"},49:{ID:"49",Name:"BB Gauge Consumption Reduction"},50:{ID:"50",Name:"Elemental Damage Boost"},52:{ID:"52",Name:""},53:{ID:"53",Name:"Critical/Elemental Weakness Damage Negation"},55:{ID:"55",Name:"Conditional Effect based on HP Threshold"},58:{ID:"58",Name:"Damage Reduction when Guarding"},59:{ID:"59",Name:"BC Fill when Attacked when Guarding"},61:{ID:"61",Name:"BC Fill on Guard"},62:{ID:"62",Name:"Elemental Damage Reduction"},63:{ID:"63",Name:"Elemental Damage Reduction for first X Turns"},64:{ID:"64",Name:"BB Atk Boost"},65:{ID:"65",Name:"BC Fill on Critical"},66:{ID:"66",Name:"Add buff to Brave Burst"},69:{ID:"69",Name:"Chance KO Resistance (Angel Idol)"},70:{ID:"70",Name:"OD Gauge Fill Rate Boost"},71:{ID:"71",Name:"Status Counter"},72:{ID:"72",Name:"Turn End Effects Activate at Turn Start"},73:{ID:"73",Name:"Parameter Reduction Negation"},74:{ID:"74",Name:"Attack Boost on Status Afflicted Foes"},75:{ID:"75",Name:"Spark Vulnerability"},77:{ID:"77",Name:"Spark Damage Reduction"},78:{ID:"78",Name:"Conditional Effect after Damage Received Threshold"},79:{ID:"79",Name:"BC Fill after Damage Received Threshold"},80:{ID:"80",Name:"Conditional Effect after Damage Dealt Threshold"},81:{ID:"81",Name:"BC Fill after Damage Dealt Threshold"},82:{ID:"82",Name:"Conditional Effect after BC Received Threshold"},84:{ID:"84",Name:"Conditional Effect after HC Received Threshold"},85:{ID:"85",Name:"BC Fill after HC Received Threshold"},86:{ID:"86",Name:"Conditional Effect after Spark Threshold"},88:{ID:"88",Name:"Conditional Effect on Guard"},89:{ID:"89",Name:"Conditional Effect on Critical"},90:{ID:"90",Name:"Status Infliction on Critical"},91:{ID:"91",Name:""},92:{ID:"92",Name:"Negate Defense Ignore"},93:{ID:"93",Name:"Added Elements"},96:{ID:"96",Name:"Normal Attacks Hit All Foes"},97:{ID:"97",Name:"Player EXP Boost"},99:{ID:"99",Name:""},100:{ID:"100",Name:"Spark Critical"},101:{ID:"101",Name:"Heal on Spark"},102:{ID:"102",Name:"Added Elements"},103:{ID:"103",Name:"BB Atk Boost when HP Passes Threshold"},104:{ID:"104",Name:"Spark Boost when HP Passes Threshold"},105:{ID:"105",Name:"Turn-Based Parameter Boost"},106:{ID:"106",Name:"Conditional Effect after Activating Overdrive"},107:{ID:"107",Name:"Add Effect to Leader Skill"},109:{ID:"109",Name:"BB Gauge Reduction (Chance)"},110:{ID:"110",Name:"BC Efficacy Reduction (Chance)"},111:{ID:"111",Name:"Increase Brave Burst Activation Rate"},112:{ID:"112",Name:"ABP/CBP Boost"},113:{ID:"113",Name:"Conditional Effect after HP Threshold"},114:{ID:"114",Name:"Inflict Buff when Attacked"},127:{ID:"127",Name:"Additional Damage (Damage over Time) Reduction"},128:{ID:"128",Name:"Damage Reduction from Normal Attacks"},143:{ID:"143",Name:"Break Atk Parameter Limit"},10008:{ID:"10008",Name:"Damage Reduction from Specific Sources"},11004:{ID:"11004",Name:"Elemental Spark Damage Boost"},11005:{ID:"11005",Name:"Elemental Critical Damage Boost"},11006:{ID:"11006",Name:"Summoner EXP Boost"},11009:{ID:"11009",Name:"Effect Duration Boost"},"66,1":{ID:"66,1",Name:""}}),r=Object.freeze({0:{ID:"0",Name:"",Type:""},1:{ID:"1",Name:"Regular Damage",Type:"Attack"},2:{ID:"2",Name:"Burst Heal",Type:""},3:{ID:"3",Name:"Heal over Time",Type:""},4:{ID:"4",Name:"BB Gauge Refill",Type:""},5:{ID:"5",Name:"Parameter Boost",Type:""},6:{ID:"6",Name:"Drop Rate",Type:""},7:{ID:"7",Name:"Guaranteed KO Resistance (Angel Idol)",Type:""},8:{ID:"8",Name:"Max HP Boost",Type:""},9:{ID:"9",Name:"Parameter Reduction",Type:""},10:{ID:"10",Name:"Status Cleanse",Type:""},11:{ID:"11",Name:"Status Infliction",Type:""},12:{ID:"12",Name:"Revive (Guaranteed)",Type:""},13:{ID:"13",Name:"Random Target Damage",Type:"Attack"},14:{ID:"14",Name:"Lifesteal Damage",Type:"Attack"},16:{ID:"16",Name:"Elemental Damage Reduction",Type:""},17:{ID:"17",Name:"Status Negation",Type:""},18:{ID:"18",Name:"Damage Reduction",Type:""},19:{ID:"19",Name:"Gradual BB Gauge Boost",Type:""},20:{ID:"20",Name:"BC Fill on Hit",Type:""},22:{ID:"22",Name:"Defense Ignore",Type:""},23:{ID:"23",Name:"Spark Boost",Type:""},24:{ID:"24",Name:"Parameter Conversion",Type:""},26:{ID:"26",Name:"Hit Count Boost",Type:""},27:{ID:"27",Name:"Proportional Damage",Type:"Attack"},28:{ID:"28",Name:"Fixed Damage",Type:"Attack"},29:{ID:"29",Name:"Multi-Element Damage",Type:"Attack"},30:{ID:"30",Name:"Add Elements",Type:""},31:{ID:"31",Name:"Instant BB Gauge Fill",Type:""},32:{ID:"32",Name:"Element Shift",Type:""},33:{ID:"33",Name:"Buff Removal (Chance)",Type:""},34:{ID:"34",Name:"BB Gauge Reduction (Chance)",Type:""},36:{ID:"36",Name:"Leader Skill Lock (Chance)",Type:""},37:{ID:"37",Name:"Summon Unit",Type:""},38:{ID:"38",Name:"Status Cure",Type:""},39:{ID:"39",Name:"Elemental Damage Reduction",Type:""},40:{ID:"40",Name:"Status Infliction Added to Attack",Type:""},42:{ID:"42",Name:"",Type:""},43:{ID:"43",Name:"Instant OD Fill",Type:""},44:{ID:"44",Name:"Damage over Time (Additional Damage)",Type:""},45:{ID:"45",Name:"BB Atk Boost",Type:""},46:{ID:"46",Name:"Non-Lethal Proportional Damage",Type:"Attack"},47:{ID:"47",Name:"HP Scaled Damage",Type:"Attack"},48:{ID:"48",Name:"Piercing Proportional Damage",Type:"Attack"},49:{ID:"49",Name:"Retire",Type:""},50:{ID:"50",Name:"Damage Counter",Type:""},51:{ID:"51",Name:"Parameter Reduction Added to Attack",Type:""},52:{ID:"52",Name:"BC Efficacy",Type:""},53:{ID:"53",Name:"Status Counter",Type:""},54:{ID:"54",Name:"Critical Damage Boost",Type:""},55:{ID:"55",Name:"Elemental Damage Boost",Type:""},56:{ID:"56",Name:"Chance KO Resistance (Angel Idol)",Type:""},57:{ID:"57",Name:"BC Efficacy Reduction",Type:""},58:{ID:"58",Name:"Spark Vulnerability",Type:""},59:{ID:"59",Name:"BB Atk Reduction",Type:""},60:{ID:"60",Name:"",Type:""},61:{ID:"61",Name:"BB-Scaled Damage",Type:"Attack"},62:{ID:"62",Name:"Barrier",Type:""},63:{ID:"63",Name:"Selective Buff Wipe",Type:""},64:{ID:"64",Name:"Consecutive Damage",Type:"Attack"},65:{ID:"65",Name:"Attack Boost on Status Afflicted Foes",Type:""},66:{ID:"66",Name:"Revive (Chance)",Type:""},67:{ID:"67",Name:"BC Fill on Spark",Type:""},68:{ID:"68",Name:"Damage Reduction when Guarding",Type:""},69:{ID:"69",Name:"BC Fill on Guard",Type:""},70:{ID:"70",Name:"",Type:""},71:{ID:"71",Name:"BB Gauge Fill Rate Debuff",Type:""},73:{ID:"73",Name:"Parameter Reduction Negation",Type:""},75:{ID:"75",Name:"Element Squad-Scaled Damage",Type:"Attack"},76:{ID:"76",Name:"Extra Action",Type:""},78:{ID:"78",Name:"Self Parameter Boost",Type:""},79:{ID:"79",Name:"Player EXP Boost",Type:""},82:{ID:"82",Name:"",Type:""},83:{ID:"83",Name:"Spark Critical",Type:""},84:{ID:"84",Name:"OD Gauge Fill Rate",Type:""},85:{ID:"85",Name:"Heal when Attacked",Type:""},86:{ID:"86",Name:"HP Absorption",Type:""},87:{ID:"87",Name:"Heal on Spark",Type:""},88:{ID:"88",Name:"Self Spark Boost",Type:""},89:{ID:"89",Name:"Self Parameter Conversion",Type:""},92:{ID:"92",Name:"Self Max HP Boost",Type:""},93:{ID:"93",Name:"Spark/Critical/Elemental Weakness Damage Reduction",Type:""},94:{ID:"94",Name:"Normal Attacks Hit All Foes",Type:""},95:{ID:"95",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},96:{ID:"96",Name:"Nullify Extra Skill Effects (ES Lock)",Type:""},97:{ID:"97",Name:"Element Target Damage",Type:"Attack"},113:{ID:"113",Name:"Gradual OD Fill",Type:""},119:{ID:"119",Name:"Gradual BC Drain",Type:""},123:{ID:"123",Name:"OD Gauge Reduction",Type:""},126:{ID:"126",Name:"Damage over Time (Additional Damage) Mitigation",Type:""},127:{ID:"127",Name:"Lock On",Type:""},130:{ID:"130",Name:"Parameter Reduction Counter",Type:""},131:{ID:"131",Name:"",Type:""},132:{ID:"132",Name:"Critical/Elemental Weakness Vulnerability",Type:""},901:{ID:"901",Name:"Raid Heal (on Map)",Type:""},902:{ID:"902",Name:"Raid Parameter Boost",Type:""},903:{ID:"903",Name:"Raid Boss Reveal",Type:""},905:{ID:"905",Name:"Raid Teleport",Type:""},906:{ID:"906",Name:"Raid Flee",Type:""},907:{ID:"907",Name:"Raid Damage Reduction",Type:""},908:{ID:"908",Name:"Raid Item Drop Rate Boost",Type:""},1e4:{ID:"10000",Name:"Taunt",Type:""},10001:{ID:"10001",Name:"Stealth",Type:""},10002:{ID:"10002",Name:"Shield (old)",Type:""},10003:{ID:"10003",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},10004:{ID:"10004",Name:"Damage Immunity",Type:""},10005:{ID:"10005",Name:"Turn Skip (short duration)",Type:""},10006:{ID:"10006",Name:"Turn Skip (long duration)",Type:""},10007:{ID:"10007",Name:"Evasion",Type:""},10009:{ID:"10009",Name:"",Type:""},10012:{ID:"10012",Name:"OD Drain",Type:""},10015:{ID:"10015",Name:"Elemental Spark Boost",Type:""},10016:{ID:"10016",Name:"Element Critical Damage Boost",Type:""},10017:{ID:"10017",Name:"Elemental Shield",Type:""},10018:{ID:"10018",Name:"Max HP Reduction",Type:""},10019:{ID:"10019",Name:"Effect Purge",Type:""},10020:{ID:"10020",Name:"Piercing Damage",Type:"Attack"},10021:{ID:"10021",Name:"Active Healing Reduction",Type:""},10022:{ID:"10022",Name:"Passive Healing Reduction",Type:""},10023:{ID:"10023",Name:"HC Efficacy Reduction",Type:""},10025:{ID:"10025",Name:"KO Resistance Negation",Type:""},10026:{ID:"10026",Name:"Doom",Type:""},11e3:{ID:"11000",Name:"Negative HP-Scaled Damage",Type:"Attack"},11001:{ID:"11001",Name:"Max HP% DoT of Weaker Element Enemies",Type:""},11002:{ID:"11002",Name:"HP Limit Break, Convert to HP",Type:""},11003:{ID:"11003",Name:"Effect Negation",Type:""},70001:{ID:"70001",Name:"Mana Bubble Shield",Type:""},70002:{ID:"70002",Name:"Recast",Type:""},"2-5":{ID:"2-5",Name:"Burst Heal and DEF/REC Boost",Type:""}});function F(e,a=r){return a&&"object"==typeof a&&Object.hasOwnProperty.call(a,e)?a[e]:void 0}function p(e,a){const t=F(e,a);return!!t&&t.Type===n.Attack}var l,u,D,f,d,B,E,U,T,R,m,g,A,_,v,N,I,P,y,k=Object.freeze({__proto__:null,getLevelEntryForBurst:a,getEffectsForBurst:function(e,t){const s=a(e,t);return s&&Array.isArray(s.effects)?s.effects:[]},getExtraAttackDamageFramesEntry:function(e,a="0.0/0",i){const n=(Array.isArray(e)?e:[]).filter(e=>{const a=t(e);return a===s.BurstHeal||p(a,i)}).reduce((e,a,t)=>{const s=0===t,i=a["frame times"].length,n=a["hit dmg% distribution"],o=a["frame times"];for(let a=s?0:1;a<i;++a)e.push({damage:n[a],time:o[a]});return e},[]),o={"effect delay time(ms)/frame":a,"frame times":[],"hit dmg% distribution":[],"hit dmg% distribution (total)":0,hits:0};return n.sort((e,a)=>e.time-a.time).forEach(({time:e,damage:a})=>{o["frame times"].push(e),o["hit dmg% distribution"].push(a),o["hit dmg% distribution (total)"]+=a}),o.hits=o["frame times"].length,o}});function h(e,a=c){return a&&"object"==typeof a&&Object.hasOwnProperty.call(a,e)?a[e]:void 0}function O(e,a){const t=F(e,a);return!!t&&t.Name||""}function H(e,a){const t=h(e,a);return!!t&&t.Name||""}function b(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"proc id")||Object.hasOwnProperty.call(e,"unknown proc id"))}function C(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"passive id")||Object.hasOwnProperty.call(e,"unknown passive id"))}!function(e){e.Poison="poison",e.Weak="weak",e.Sick="sick",e.Injury="injury",e.Curse="curse",e.Paralysis="paralysis",e.AttackReduction="atk down",e.DefenseReduction="def down",e.RecoveryReduction="rec down",e.Unknown="unknown"}(l||(l={})),function(e){e.hp_50pr_under="hp_50pr_under",e.hp_50pr_over="hp_50pr_over",e.hp_75pr_under="hp_75pr_under",e.hp_25pr_under="hp_25pr_under",e.hp_min="hp_min",e.hp_max="hp_max",e.atk_max="atk_max",e.random="random"}(u||(u={})),function(e){e.Moving="1",e.Teleporting="2",e.NonMoving="3"}(D||(D={})),function(e){e.Aoe="aoe",e.Single="single",e.Random="random"}(f||(f={})),function(e){e.Aoe="AOE",e.Single="ST",e.Random="RT"}(d||(d={})),function(e){e.Self="self",e.Party="party",e.Enemy="enemy"}(B||(B={})),function(e){e.AddPassive="passive",e.EnhanceBb="add to bb",e.EnhanceSbb="add to sbb",e.EnhanceUbb="add to ubb",e.EnhancePassive="add to passive"}(E||(E={})),function(e){e.None="None",e["Status Enhancing"]="Status Enhancing",e.Critical="Critical",e.Drop="Drop",e["Ailment Inducing"]="Ailment Inducing",e["Element Fusion"]="Element Fusion",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e["Target Setting"]="Target Setting",e["Damage Deflecting"]="Damage Deflecting",e["Damage Reducing"]="Damage Reducing",e.Spark="Spark",e["Defense Piercing"]="Defense Piercing",e["Attack Boosting"]="Attack Boosting",e.Special="Special"}(U||(U={})),function(e){e[e.None=0]="None",e[e["Status Enhancing"]=1]="Status Enhancing",e[e.Critical=2]="Critical",e[e.Drop=3]="Drop",e[e["Ailment Inducing"]=4]="Ailment Inducing",e[e["Element Fusion"]=5]="Element Fusion",e[e["BB Gauge"]=6]="BB Gauge",e[e["HP Recovery"]=7]="HP Recovery",e[e["Target Setting"]=8]="Target Setting",e[e["Damage Deflecting"]=9]="Damage Deflecting",e[e["Damage Reducing"]=10]="Damage Reducing",e[e.Spark=11]="Spark",e[e["Defense Piercing"]=12]="Defense Piercing",e[e["Attack Boosting"]=13]="Attack Boosting",e[e.Special=14]="Special"}(T||(T={})),function(e){e["Parameter Boost"]="Parameter Boost",e.Spark="Spark",e["Critical Hits"]="Critical Hits",e["Attack Boost"]="Attack Boost",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e.Drops="Drops",e["Ailment Resistance"]="Ailment Resistance",e["Ailment Infliction"]="Ailment Infliction",e["Damage Reduction"]="Damage Reduction",e.Special="Special",e.Unknown="Unknown"}(R||(R={})),function(e){e["Parameter Boost"]="1",e.Spark="2",e["Critical Hits"]="3",e["Attack Boost"]="4",e["BB Gauge"]="5",e["HP Recovery"]="6",e.Drops="7",e["Ailment Resistance"]="8",e["Ailment Infliction"]="9",e["Damage Reduction"]="10",e.Special="11"}(m||(m={})),function(e){e.Attack="attack",e.Idle="idle",e.Move="move"}(g||(g={})),function(e){e.Fire="fire",e.Water="water",e.Earth="earth",e.Thunder="thunder",e.Light="light",e.Dark="dark"}(A||(A={})),function(e){e.Male="male",e.Female="female",e.Other="other"}(_||(_={})),function(e){e.Ineligible="not eligible for achievement",e.Farmable="farmable",e.RareSummon="rare summon",e.ExtraSkillElgif="extra skill elgif"}(v||(v={})),function(e){e.Normal="normal",e.Evolution="evo",e.Enhancing="enhancing",e.Sale="sale"}(N||(N={})),function(e){e.Lord="lord",e.Anima="anima",e.Breaker="breaker",e.Guardian="guardian",e.Oracle="oracle",e.Rex="rex"}(I||(I={})),function(e){e.Consumable="consumable",e.Material="material",e.Sphere="sphere",e.EvolutionMaterial="evomat",e.SummonerConsumable="summoner_consumable",e.LeaderSkillSphere="ls_sphere"}(P||(P={})),function(e){e.Mimic="60142",e.BatMimic="60143",e.DragonMimic="60144",e.MetalMimic="60224"}(y||(y={}));const S={1e3:y.Mimic,1100:y.BatMimic,1101:y.BatMimic,1200:y.DragonMimic,1300:y.MetalMimic};var W,K,w,L,M,j,G=Object.freeze({__proto__:null,get Ailment(){return l},get ArenaCondition(){return u},get MoveType(){return D},get TargetArea(){return f},get TargetAreaShorthand(){return d},get TargetType(){return B},get SpPassiveType(){return E},get SphereTypeName(){return U},get SphereTypeId(){return T},get SpCategoryName(){return R},get SpCategoryId(){return m},get UnitAnimationKey(){return g},get UnitElement(){return A},get UnitGender(){return _},get UnitGettingType(){return v},get UnitKind(){return N},get UnitType(){return I},get ItemType(){return P},get MimicUnitIds(){return y},MimicMonsterGroupMapping:S});function x(e){const a=Array.isArray(e.previousSources)?e.previousSources.slice():[];return a.unshift(function(e){return`${e.source}-${e.sourceId}`}(e)),a}function V(e){const a=e&&Array.isArray(e.conditions)&&e.conditions||[],t={units:new Set,items:new Set,sphereTypes:new Set,unknowns:new Set};a.forEach((e,a)=>{"sphere category required (raw)"in e?t.sphereTypes.add(e["sphere category required (raw)"]):"item required"in e?e["item required"].forEach(e=>{t.items.add(e)}):"unit required"in e?e["unit required"].forEach(e=>{t.units.add(""+e.id)}):t.unknowns.add(`type:${e.type_id||a},condition:${e.condition_id||a}`)});return Object.entries(t).filter(e=>e[1].size>0).reduce((e,a)=>(e[a[0]]=Array.from(a[1]),e),{})}function Y(e,a){const t=a.source===K.LeaderSkill||e.sp_type===E.EnhancePassive||e["passive target"]===B.Party;return{targetType:t?B.Party:B.Self,targetArea:t?f.Aoe:f.Single}}function z(e){return{targetArea:e["target area"],targetType:e["target type"]}}function $(e,a=0){return null===e||isNaN(e)?a:+e}function X(e=[],a=0){let t=!1;const s=e.reduce((e,s,i)=>(s&&"0"!==s&&(e["param_"+(a+i)]=s,t=!0),e),{});return t?s:void 0}function Z(e){return!!e&&[K.BraveBurst,K.SuperBraveBurst,K.UltimateBraveBurst,K.BondedBraveBurst,K.BondedSuperBraveBurst,K.DualBraveBurst].includes(e)}let q,J;function Q(e){return q&&!e||(q=new Map,function(e){const a={0:w.All,1:A.Fire,2:A.Water,3:A.Earth,4:A.Thunder,5:A.Light,6:A.Dark},t={1:l.Poison,2:l.Weak,3:l.Sick,4:l.Injury,5:l.Curse,6:l.Paralysis,7:l.AttackReduction,8:l.DefenseReduction,9:l.RecoveryReduction},s=(e,a,t)=>({targetData:(t&&t.getProcTargetData||z)(e),sources:(t&&t.createSourcesFromContext||x)(a),effectDelay:e["effect delay time(ms)/frame"]}),i=e=>e.params.split(","),n=(e,{originalId:a,sources:t,targetData:s,effectDelay:i})=>Object.assign({id:j.UNKNOWN_PROC_BUFF_PARAMS,originalId:a,effectDelay:i,sources:t,value:e},s),o=({originalId:e,sources:a,buffs:t,duration:s,targetData:i})=>Object.assign({id:j.TURN_DURATION_MODIFICATION,originalId:e,sources:a,value:{buffs:t,duration:s}},i),c=({originalId:e,sources:a})=>({id:j.NO_PARAMS_SPECIFIED,originalId:e,sources:a}),r=(e,a,{originalId:t,sources:s,targetData:i,effectDelay:o})=>{0===e.length&&e.push(c({originalId:t,sources:s})),a&&e.push(n(a,{originalId:t,sources:s,targetData:i,effectDelay:o}))},F=(e,a,t)=>{let s;return e&&e.length>0&&(s=(t&&t.createUnknownParamsValue||X)(e,a)),s},p=(e,a,t)=>{let s=0!==a;return s&&(s=!(t&&t.buffSourceIsBurstType||Z)(e.source)),s},u=e=>({hits:$(e.damageFrames&&e.damageFrames.hits||0),distribution:$(e.damageFrames&&e.damageFrames["hit dmg% distribution (total)"])}),D=({effect:e,context:a,injectionContext:t,effectValueKey:n,effectTurnDurationKey:c,parseParamValue:l=(e=>$(e)),buffId:u,originalId:D})=>{const{targetData:f,sources:d,effectDelay:B}=s(e,a,t);let E,U=0,T=0;if(e.params){const[a,s,...n]=i(e);U=l(a),T=$(s),E=F(n,2,t)}else U=$(e[n]),T=$(e[c]);const R=[];return 0!==U?R.push(Object.assign({id:u,originalId:D,sources:d,effectDelay:B,duration:T,value:U},f)):p(a,T,t)&&R.push(o({originalId:D,sources:d,buffs:[u],duration:T,targetData:f})),r(R,E,{originalId:D,sources:d,targetData:f,effectDelay:B}),R};e.set("1",(e,a,t)=>{const n="1",{targetData:o,sources:c,effectDelay:p}=s(e,a,t),{hits:l,distribution:D}=u(a),f={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let d;if(e.params){let a;[f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...a]=i(e),d=F(a,6,t)}else f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const B=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=$(t),e),{}),E=[];return(0!==l||0!==D||Object.keys(B).length>0)&&E.push(Object.assign({id:"proc:1",originalId:n,sources:c,effectDelay:p,value:Object.assign(Object.assign({},B),{hits:l,distribution:D})},o)),r(E,d,{originalId:n,sources:c,targetData:o,effectDelay:p}),E}),e.set("2",(e,a,t)=>{const n="2",{targetData:o,sources:c,effectDelay:p}=s(e,a,t),l={healLow:"0",healHigh:"0","healerRec%":0};let u;if(e.params){let a,s,n;[l.healLow,l.healHigh,a,s,...n]=i(e),l["healerRec%"]=(100+$(a))*(1+$(s)/100)/10,u=F(n,4,t)}else l.healLow=e["heal low"],l.healHigh=e["heal high"],l["healerRec%"]=e["rec added% (from healer)"];Object.keys(l).forEach(e=>{l[e]=$(l[e])});const D=[];return 0===l.healHigh&&0===l.healLow||D.push(Object.assign({id:"proc:2",originalId:n,sources:c,effectDelay:p,value:l},o)),r(D,u,{originalId:n,sources:c,targetData:o,effectDelay:p}),D}),e.set("3",(e,a,t)=>{const n="3",{targetData:c,sources:l,effectDelay:u}=s(e,a,t),D={healLow:"0",healHigh:"0","targetRec%":0,turnDuration:"0"};let f;if(e.params){let a,s;[D.healLow,D.healHigh,a,D.turnDuration,...s]=i(e),D["targetRec%"]=10*(1+$(a)/100),f=F(s,4,t)}else D.healLow=e["gradual heal low"],D.healHigh=e["gradual heal high"],D["targetRec%"]=e["rec added% (from target)"],D.turnDuration=e["gradual heal turns (8)"];Object.keys(D).forEach(e=>{D[e]=$(D[e])});const d=[];return 0!==D.healLow||0!==D.healHigh?d.push(Object.assign({id:"proc:3",originalId:n,sources:l,effectDelay:u,duration:D.turnDuration,value:{healLow:D.healLow,healHigh:D.healHigh,"targetRec%":D["targetRec%"]}},c)):p(a,D.turnDuration,t)&&d.push(o({originalId:n,sources:l,buffs:["proc:3"],duration:D.turnDuration,targetData:c})),r(d,f,{originalId:n,sources:l,targetData:c,effectDelay:u}),d}),e.set("4",(e,a,t)=>{const n="4",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l,u=0,D=0;if(e.params){const[a,s,...n]=i(e);u=$(a)/100,D=$(s),l=F(n,2,t)}else"bb bc fill"in e&&(u=$(e["bb bc fill"])),"bb bc fill%"in e&&(D=$(e["bb bc fill%"]));const f=[];return 0!==u&&f.push(Object.assign({id:"proc:4:flat",originalId:n,sources:c,effectDelay:p,value:u},o)),0!==D&&f.push(Object.assign({id:"proc:4:percent",originalId:n,sources:c,effectDelay:p,value:D},o)),r(f,l,{originalId:n,sources:c,targetData:o,effectDelay:p}),f}),e.set("5",(e,t,n)=>{const c="5",{targetData:l,sources:u,effectDelay:D}=s(e,t,n),f={element:w.All,atk:"0",def:"0",rec:"0",crit:"0",turnDuration:"0"},d=["atk","def","rec","crit"];let B;if(e.params){let t,s;[s,f.atk,f.def,f.rec,f.crit,f.turnDuration,...t]=i(e),f.element=a[s]||w.Unknown,B=F(t,6,n)}else{const a=e["element buffed"];f.element="all"===a?w.All:a||w.Unknown;const t=Object.keys(e);d.forEach(a=>{const s=t.find(e=>e.startsWith(a+"% buff"));s&&(f[a]=$(e[s]))}),f.turnDuration=$(e["buff turns"])}d.concat(["turnDuration"]).forEach(e=>{f[e]=$(f[e])});const E=d.some(e=>0!==f[e]),U=[];return E?d.forEach(e=>{const a=f[e];if(0!==a){const t=Object.assign({id:"proc:5:"+e,originalId:c,sources:u,effectDelay:D,duration:f.turnDuration,value:a},l);f.element!==w.All&&(t.conditions={targetElements:[f.element]}),U.push(t)}}):p(t,f.turnDuration,n)&&U.push(o({originalId:c,sources:u,buffs:d.map(e=>"proc:5:"+e),duration:f.turnDuration,targetData:l})),r(U,B,{originalId:c,sources:u,targetData:l,effectDelay:D}),U}),e.set("6",(e,a,t)=>{const n="6",{targetData:c,sources:l,effectDelay:u}=s(e,a,t),D={bc:"0",hc:"0",item:"0",turnDuration:"0"},f=["bc","hc","item"];let d;if(e.params){let a;[D.bc,D.hc,D.item,D.turnDuration,...a]=i(e),d=F(a,4,t)}else D.bc=e["bc drop rate% buff (10)"],D.hc=e["hc drop rate% buff (9)"],D.item=e["item drop rate% buff (11)"],D.turnDuration=e["drop buff rate turns"];f.concat(["turnDuration"]).forEach(e=>{D[e]=$(D[e])});const B=f.some(e=>0!==D[e]),E=[];return B?f.forEach(e=>{const a=D[e];0!==a&&E.push(Object.assign({id:"proc:6:"+e,originalId:n,sources:l,effectDelay:u,duration:D.turnDuration,value:a},c))}):p(a,D.turnDuration,t)&&E.push(o({originalId:n,sources:l,buffs:f.map(e=>"proc:6:"+e),duration:D.turnDuration,targetData:c})),r(E,d,{originalId:n,sources:l,targetData:c,effectDelay:u}),E}),e.set("7",(e,a,t)=>{const n="7",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l,u=0;if(e.params){const[a,...s]=i(e);u=$(a),l=F(s,1,t)}else u=$(e["angel idol recover hp%"]);const D=[Object.assign({id:"proc:7",originalId:n,sources:c,effectDelay:p,value:u},o)];return r(D,l,{originalId:n,sources:c,targetData:o,effectDelay:p}),D}),e.set("8",(e,a,t)=>{const n="8",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l,u=0,D=0;if(e.params){const[a,s,...n]=i(e);u=$(a),D=$(s),l=F(n,2,t)}else"max hp increase"in e&&(u=$(e["max hp increase"])),"max hp% increase"in e&&(D=$(e["max hp% increase"]));const f=[];return 0!==u&&f.push(Object.assign({id:"proc:8:flat",originalId:n,sources:c,effectDelay:p,value:u},o)),0!==D&&f.push(Object.assign({id:"proc:8:percent",originalId:n,sources:c,effectDelay:p,value:D},o)),r(f,l,{originalId:n,sources:c,targetData:o,effectDelay:p}),f}),e.set("9",(e,t,n)=>{const c="9",{targetData:l,sources:u,effectDelay:D}=s(e,t,n),f={0:"atk",1:"def",2:"rec"},d=["atk","def","rec"],B={element:w.All,statReductionEntries:[],turnDuration:0};let E;if(e.params){const[t,s,o,c,r,p,l,u,...D]=i(e);B.element=a[t]||w.Unknown,B.turnDuration=$(u),[[s,o,c],[r,p,l]].forEach(([e,a,t])=>{const s=$(e)-1,i=$(a),n=$(t);3===s?B.statReductionEntries.push(...d.map(e=>({stat:e,value:i,chance:n}))):B.statReductionEntries.push({stat:f[s]||"unknown",value:i,chance:n})}),E=F(D,8,n)}else{const a=e["element buffed"];B.element="all"===a?w.All:a||w.Unknown,["buff #1","buff #2"].forEach(a=>{const t=e[a];if(t){const e=$(t["proc chance%"]),a=Object.keys(t);d.forEach(s=>{const i=a.find(e=>e.startsWith(s+"% buff"));i&&B.statReductionEntries.push({stat:s,value:$(t[i]),chance:e})})}}),B.turnDuration=$(e["buff turns"])}const U=[];let T=!1;return B.statReductionEntries.forEach(({stat:e,value:a,chance:t})=>{if(0!==a||0!==t){T=!0;const s=Object.assign({id:"proc:9:"+e,originalId:c,sources:u,effectDelay:D,duration:B.turnDuration,value:{value:a,chance:t}},l);B.element!==w.All&&(s.conditions={targetElements:[B.element]}),U.push(s)}}),!T&&p(t,B.turnDuration,n)&&U.push(o({originalId:c,sources:u,buffs:d.map(e=>"proc:9:"+e),duration:B.turnDuration,targetData:l})),r(U,E,{originalId:c,sources:u,targetData:l,effectDelay:D}),U}),e.set("10",(e,a,n)=>{const o="10",{targetData:c,sources:p,effectDelay:u}=s(e,a,n),D=[];let f;if(e.params){const a=i(e),s=a.slice(0,8),o=a.slice(8);s.filter(e=>"0"!==e).forEach(e=>{D.push(t[e]||l.Unknown)}),f=F(o,8,n)}else Object.values(t).forEach(a=>{"remove "+a in e&&D.push(a)}),"remove all status ailments"in e&&D.push(l.Unknown);const d=D.map(e=>Object.assign({id:"proc:10:"+e,originalId:o,sources:p,effectDelay:u,value:!0},c));return r(d,f,{originalId:o,sources:p,targetData:c,effectDelay:u}),d}),e.set("11",(e,a,n)=>{const o="11",{targetData:c,sources:p,effectDelay:u}=s(e,a,n),D=[];let f;if(e.params){let a=i(e);a.length%2!=0&&"0"!==a[a.length-1]&&(f=F(a.slice(-1),a.length-1,n),a=a.slice(0,a.length-1));const s=a.length;for(let e=0;e<s;e+=2){const s=a[e],i=$(a[e+1]);if("0"!==s||0!==i){const e=t[s]||l.Unknown;D.push({ailment:e,chance:i})}}}else Object.values(t).forEach(a=>{let t;t=a===l.Weak?"weaken%":a===l.AttackReduction||a===l.DefenseReduction||a===l.RecoveryReduction?a:a+"%",t in e&&D.push({ailment:a,chance:$(e[t])})});const d=D.map(({ailment:e,chance:a})=>Object.assign({id:"proc:11:"+e,originalId:o,sources:p,effectDelay:u,value:a},c));return r(d,f,{originalId:o,sources:p,targetData:c,effectDelay:u}),d}),e.set("12",(e,a,t)=>{const n="12",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l,u=0;if(e.params){const[a,...s]=i(e);u=$(a),l=F(s,1,t)}else u=$(e["revive to hp%"]);const D=[Object.assign({id:"proc:12",originalId:n,sources:c,effectDelay:p,value:u},o)];return r(D,l,{originalId:n,sources:c,targetData:o,effectDelay:p}),D}),e.set("13",(e,a,t)=>{const n="13",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l=0;const{distribution:D}=u(a),d={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0"};let B;if(e.params){let a,s;[d["atk%"],d.flatAtk,d["crit%"],d["bc%"],d["hc%"],s,...a]=i(e),l=$(s),B=F(a,6,t)}else d["atk%"]=e["bb atk%"],d.flatAtk=e["bb flat atk"],d["crit%"]=e["bb crit%"],d["bc%"]=e["bb bc%"],d["hc%"]=e["bb hc%"],l=$(e.hits);const E=Object.entries(d).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=$(t),e),{}),U=[];return(0!==l||0!==D||Object.keys(E).length>0)&&U.push({id:"proc:13",originalId:n,sources:c,effectDelay:p,value:Object.assign(Object.assign({},E),{hits:l,distribution:D}),targetType:o.targetType,targetArea:f.Random}),r(U,B,{originalId:n,sources:c,targetData:o,effectDelay:p}),U}),e.set("14",(e,a,t)=>{const n="14",{targetData:o,sources:c,effectDelay:p}=s(e,a,t),{hits:l,distribution:D}=u(a),f={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0","drainLow%":"0","drainHigh%":"0"};let d;if(e.params){let a;[f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],f["drainLow%"],f["drainHigh%"],...a]=i(e),d=F(a,8,t)}else f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"],f["drainLow%"]=e["hp drain% low"],f["drainHigh%"]=e["hp drain% high"];const B=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=$(t),e),{}),E=[];return(0!==l||0!==D||Object.keys(B).length>0)&&E.push(Object.assign({id:"proc:14",originalId:n,sources:c,effectDelay:p,value:Object.assign(Object.assign({},B),{hits:l,distribution:D})},o)),r(E,d,{originalId:n,sources:c,targetData:o,effectDelay:p}),E}),e.set("16",(e,t,n)=>{const c="16",{targetData:l,sources:u,effectDelay:D}=s(e,t,n);let f,d,B=0,E=0;if(e.params){const[t,s,o,...c]=i(e);f=a[t]||w.Unknown,B=$(s),E=$(o),d=F(c,3,n)}else{const t=Object.keys(e).find(e=>e.startsWith("mitigate"));f=t&&Object.values(a).find(e=>t.includes(e))||w.Unknown,t&&(B=$(e[t])),E=$(e["buff turns"])}const U=[];return 0!==B?U.push(Object.assign({id:"proc:16:"+f,originalId:c,sources:u,effectDelay:D,duration:E,value:B},l)):p(t,E,n)&&U.push(o({originalId:c,sources:u,buffs:Object.values(a).concat([w.Unknown]).map(e=>"proc:16:"+e),duration:E,targetData:l})),r(U,d,{originalId:c,sources:u,targetData:l,effectDelay:D}),U}),e.set("17",(e,a,t)=>{const n="17",{targetData:c,sources:u,effectDelay:D}=s(e,a,t),f=[l.Poison,l.Weak,l.Sick,l.Injury,l.Curse,l.Paralysis],d={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let B,E=0;if(e.params){let a,s;[d.poison,d.weak,d.sick,d.injury,d.curse,d.paralysis,a,...s]=i(e),E=$(a),B=F(s,7,t)}else{const a=Object.keys(e).filter(e=>e.startsWith("resist"));f.forEach(t=>{const s=a.find(e=>e.includes(t));s&&(d[t]=e[s])}),E=$(e["resist status ails turns"])}const U=[];return f.forEach(e=>{const a=$(d[e]);0!==a&&U.push(Object.assign({id:"proc:17:"+e,originalId:n,sources:u,effectDelay:D,value:a,duration:E},c))}),0===U.length&&p(a,E,t)&&U.push(o({originalId:n,sources:u,buffs:f.map(e=>"proc:17:"+e),duration:E,targetData:c})),r(U,B,{originalId:n,sources:u,targetData:c,effectDelay:D}),U}),e.set("18",(e,a,t)=>D({effect:e,context:a,injectionContext:t,effectValueKey:"dmg% reduction",effectTurnDurationKey:"dmg% reduction turns (36)",buffId:"proc:18",originalId:"18"})),e.set("19",(e,a,t)=>D({effect:e,context:a,injectionContext:t,effectValueKey:"increase bb gauge gradual",effectTurnDurationKey:"increase bb gauge gradual turns (37)",parseParamValue:e=>$(e)/100,buffId:"proc:19",originalId:"19"})),e.set("20",(e,a,t)=>{const n="20",{targetData:c,sources:l,effectDelay:u}=s(e,a,t);let D,f=0,d=0,B=0,E=0;if(e.params){const[a,s,n,o,...c]=i(e);f=$(a)/100,d=$(s)/100,B=$(n),E=$(o),D=F(c,4,t)}else f=$(e["bc fill when attacked low"]),d=$(e["bc fill when attacked high"]),B=$(e["bc fill when attacked%"]),E=$(e["bc fill when attacked turns (38)"]);const U=[];return 0!==f||0!==d?U.push(Object.assign({id:"proc:20",originalId:n,sources:l,effectDelay:u,duration:E,conditions:{whenAttacked:!0},value:{fillLow:f,fillHigh:d,chance:B}},c)):p(a,E,t)&&U.push(o({originalId:n,sources:l,buffs:["proc:20"],duration:E,targetData:c})),r(U,D,{originalId:n,sources:l,targetData:c,effectDelay:u}),U}),e.set("22",(e,a,t)=>D({effect:e,context:a,injectionContext:t,effectValueKey:"defense% ignore",effectTurnDurationKey:"defense% ignore turns (39)",buffId:"proc:22",originalId:"22"})),e.set("23",(e,a,t)=>{const n="23",{targetData:c,sources:l,effectDelay:u}=s(e,a,t);let D,f=0,d=0;if(e.params){const a=i(e);f=$(a[0]),d=$(a[6]);const s=["0",...a.slice(1,6),"0",...a.slice(7)];D=F(s,0,t)}else f=$(e["spark dmg% buff (40)"]),d=$(e["buff turns"]);const B=[];return 0!==f?B.push(Object.assign({id:"proc:23",originalId:n,sources:l,effectDelay:u,duration:d,value:f},c)):p(a,d,t)&&B.push(o({originalId:n,sources:l,buffs:["proc:23"],duration:d,targetData:c})),r(B,D,{originalId:n,sources:l,targetData:c,effectDelay:u}),B}),e.set("24",(e,a,t)=>{const n="24",{targetData:c,sources:l,effectDelay:u}=s(e,a,t),D=["atk","def","rec"],f={1:"atk",2:"def",3:"rec",4:"hp"},d={attack:"atk",defense:"def",recovery:"rec",hp:"hp"},B={atk:"0",def:"0",rec:"0"};let E,U=0,T="unknown";if(e.params){let a,s,n;[s,B.atk,B.def,B.rec,n,...a]=i(e),T=f[s]||"unknown",U=$(n),E=F(a,5,t)}else{const a=e["converted attribute"];T=a in d?d[a]:"unknown";const t=Object.keys(e);D.forEach(a=>{const s=t.find(e=>e.startsWith(a+"% buff"));s&&(B[a]=$(e[s]))}),U=$(e["% converted turns"])}const R=[];return D.forEach(e=>{const a=$(B[e]);0!==a&&R.push(Object.assign({id:"proc:24:"+e,originalId:n,sources:l,effectDelay:u,duration:U,value:{convertedStat:T,value:a}},c))}),0===R.length&&p(a,U,t)&&R.push(o({originalId:n,sources:l,buffs:D.map(e=>"proc:24:"+e),duration:U,targetData:c})),r(R,E,{originalId:n,sources:l,targetData:c,effectDelay:u}),R}),e.set("26",(e,a,t)=>{const n="26",{targetData:c,sources:l,effectDelay:u}=s(e,a,t);let D,f=0,d=0,B=0;if(e.params){const a=i(e);f=$(a[0]),d=$(a[2]),B=$(a[7]);const s=["0",a[1],"0",...a.slice(3,7),"0",...a.slice(8)];D=F(s,0,t)}else f=$(e["hit increase/hit"]),d=$(e["extra hits dmg%"]),B=$(e["hit increase buff turns (50)"]);const E=[];return 0!==f||0!==d?E.push(Object.assign({id:"proc:26",originalId:n,sources:l,effectDelay:u,duration:B,value:{hitIncreasePerHit:f,extraHitDamage:d}},c)):p(a,B,t)&&E.push(o({originalId:n,sources:l,buffs:["proc:26"],duration:B,targetData:c})),r(E,D,{originalId:n,sources:l,targetData:c,effectDelay:u}),E}),e.set("27",(e,a,t)=>{const n="27",{targetData:o,sources:c,effectDelay:p}=s(e,a,t),{hits:l,distribution:D}=u(a),f={"hpDamageLow%":"0","hpDamageHigh%":"0","hpDamageChance%":"0","atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let d;if(e.params){let a;[f["hpDamageLow%"],f["hpDamageHigh%"],f["hpDamageChance%"],f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...a]=i(e),d=F(a,9,t)}else f["hpDamageLow%"]=e["hp% damage low"],f["hpDamageHigh%"]=e["hp% damage high"],f["hpDamageChance%"]=e["hp% damage chance%"],f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const B=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=$(t),e),{}),E=[];return(0!==l||0!==D||Object.keys(B).length>0)&&E.push(Object.assign({id:"proc:27",originalId:n,sources:c,effectDelay:p,value:Object.assign(Object.assign({},B),{hits:l,distribution:D})},o)),r(E,d,{originalId:n,sources:c,targetData:o,effectDelay:p}),E}),e.set("28",(e,a,t)=>{const n="28",{targetData:o,sources:c,effectDelay:p}=s(e,a,t),{hits:l,distribution:D}=u(a);let f,d=0;if(e.params){const[a,...s]=i(e);d=$(a),f=F(s,1,t)}else d=$(e["fixed damage"]);const B=[];if(0!==l||0!==D||0!==d){const e=Object.assign({id:"proc:28",originalId:n,sources:c,effectDelay:p,value:{hits:l,distribution:D}},o);0!==d&&(e.value.value=d),B.push(e)}return r(B,f,{originalId:n,sources:c,targetData:o,effectDelay:p}),B}),e.set("29",(e,t,n)=>{const o="29",{targetData:c,sources:p,effectDelay:l}=s(e,t,n),{hits:D,distribution:f}=u(t),d={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let B,E=[];if(e.params){let t,s,o,c;[t,s,o,d["atk%"],d.flatAtk,d["crit%"],d["bc%"],d["hc%"],d["dmg%"],...c]=i(e),[t,s,o].forEach(e=>{"0"!==e&&E.push(a[e]||w.Unknown),B=F(c,9,n)})}else Array.isArray(e["bb elements"])&&(E=e["bb elements"].slice()),d["atk%"]=e["bb atk%"],d.flatAtk=e["bb flat atk"],d["crit%"]=e["bb crit%"],d["bc%"]=e["bb bc%"],d["hc%"]=e["bb hc%"],d["dmg%"]=e["bb dmg%"];const U=Object.entries(d).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=$(t),e),{}),T=[];if(0!==D||0!==f||E.length>0||Object.keys(U).length>0){const e=Object.assign({id:"proc:29",originalId:o,sources:p,effectDelay:l,value:Object.assign(Object.assign({},U),{hits:D,distribution:f})},c);E.length>0&&(e.value.elements=E),T.push(e)}return r(T,B,{originalId:o,sources:p,targetData:c,effectDelay:l}),T}),e.set("30",(e,t,n)=>{const c="30",{targetData:l,sources:u,effectDelay:D}=s(e,t,n);let f,d=[],B=0;if(e.params){const t=i(e);d=t.slice(0,6).filter(e=>"0"!==e).map(e=>a[e]||w.Unknown),B=$(t[6]),f=F(t.slice(7),7,n)}else"elements added"in e&&(d=Array.isArray(e["elements added"])?e["elements added"]:[w.Unknown]),B=$(e["elements added turns"]);const E=[],U=Object.values(a).filter(e=>e!==w.All);return d.length>0?d.forEach(e=>{const a=U.includes(e)?e:w.Unknown;E.push(Object.assign({id:"proc:30:"+a,originalId:c,sources:u,effectDelay:D,duration:B},l))}):p(t,B,n)&&E.push(o({originalId:c,sources:u,buffs:U.concat([w.Unknown]).map(e=>"proc:30:"+e),duration:B,targetData:l})),r(E,f,{originalId:c,sources:u,targetData:l,effectDelay:D}),E}),e.set("31",(e,a,t)=>{const n="31",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l,u=0,D=0;if(e.params){const[a,s,...n]=i(e);u=$(a)/100,D=$(s),l=F(n,2,t)}else"increase bb gauge"in e&&(u=$(e["increase bb gauge"]));const f=[];return 0!==u&&f.push(Object.assign({id:"proc:31:flat",originalId:n,sources:c,effectDelay:p,value:u},o)),0!==D&&f.push(Object.assign({id:"proc:31:percent",originalId:n,sources:c,effectDelay:p,value:D},o)),r(f,l,{originalId:n,sources:c,targetData:o,effectDelay:p}),f}),e.set("32",(e,t,n)=>{const o="32",{targetData:c,sources:p,effectDelay:l}=s(e,t,n);let u,D;if(e.params){const[t,...s]=i(e);t&&"0"!==t&&(u=a[t]||w.Unknown),D=F(s,1,n)}else{const t=e["set attack element attribute"];if(t){const e=Object.values(a).find(e=>t===e);u=e&&e!==w.All?e:w.Unknown}}const f=[];return u&&f.push(Object.assign({id:"proc:32:"+u,originalId:o,sources:p,effectDelay:l,value:!0},c)),r(f,D,{originalId:o,sources:p,targetData:c,effectDelay:l}),f}),e.set("33",(e,a,t)=>{const n="33",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l,u=0;if(e.params){const[a,...s]=i(e);u=$(a),l=F(s,1,t)}else u=$(e["clear buff chance%"]);const D=[];return 0!==u&&D.push(Object.assign({id:"proc:33",originalId:n,sources:c,effectDelay:p,value:u},o)),r(D,l,{originalId:n,sources:c,targetData:o,effectDelay:p}),D}),e.set("34",(e,a,t)=>{const n="34",{targetData:o,sources:c,effectDelay:p}=s(e,a,t);let l,u=0,D=0,f=0,d=0,B=0;if(e.params){const[a,s,n,o,c,...r]=i(e);u=$(a)/100,D=$(s)/100,f=$(n),d=$(o),B=$(c),l=F(r,5,t)}else u=$(e["base bb gauge reduction low"]),D=$(e["base bb gauge reduction high"]),f=$(e["bb gauge% reduction low"]),d=$(e["bb gauge% reduction high"]),B=$(e["bb gauge reduction chance%"]);const E=[];return 0===u&&0===D||E.push(Object.assign({id:"proc:34:flat",originalId:n,sources:c,effectDelay:p,value:{drainLow:u,drainHigh:D,chance:B}},o)),0===f&&0===d||E.push(Object.assign({id:"proc:34:percent",originalId:n,sources:c,effectDelay:p,value:{drainLow:f,drainHigh:d,chance:B}},o)),r(E,l,{originalId:n,sources:c,targetData:o,effectDelay:p}),E})}(q)),q}function ee(e){return J&&!e||(J=new Map,function(e){const a={1:A.Fire,2:A.Water,3:A.Earth,4:A.Thunder,5:A.Light,6:A.Dark,X:w.OmniParadigm},t={1:I.Lord,2:I.Anima,3:I.Breaker,4:I.Guardian,5:I.Oracle,6:I.Rex},s={1:l.Poison,2:l.Weak,3:l.Sick,4:l.Injury,5:l.Curse,6:l.Paralysis,7:l.AttackReduction,8:l.DefenseReduction,9:l.RecoveryReduction},i=["atk","def","rec","crit","hp"],n=["poison","weak","sick","injury","curse","paralysis"],o=["bc","hc","item","zel","karma"],c=(e,a,t)=>({conditionInfo:(t&&t.processExtraSkillConditions||V)(e),targetData:(t&&t.getPassiveTargetData||Y)(e,a),sources:(t&&t.createSourcesFromContext||x)(a)}),r=e=>e.params.split(","),F=(e,{originalId:a,sources:t,targetData:s,conditionInfo:i})=>Object.assign({id:j.UNKNOWN_PASSIVE_BUFF_PARAMS,originalId:a,sources:t,value:e,conditions:Object.assign({},i)},s),p=({originalId:e,sources:a})=>({id:j.NO_PARAMS_SPECIFIED,originalId:e,sources:a}),u=(e,a,{originalId:t,sources:s,targetData:i,conditionInfo:n})=>{0===e.length&&e.push(p({originalId:t,sources:s})),a&&e.push(F(a,{originalId:t,sources:s,targetData:i,conditionInfo:n}))},D=(e,a,t)=>{let s;return e&&e.length>0&&(s=(t&&t.createUnknownParamsValue||X)(e,a)),s};let f;!function(e){e.Hp="hp",e.Bb="bb gauge"}(f||(f={}));const d=(e,a,t)=>({threshold:$(e),requireAbove:"1"===a,type:t}),B=(e,a,t="buff requirement")=>{let s=0,i=!1;return`${a} above % ${t}`in e?(s=$(e[`${a} above % ${t}`]),i=!0):(s=$(e[`${a} below % ${t}`]),i=!1),{threshold:s,requireAbove:i,type:a}},E=({threshold:e,requireAbove:a,type:t})=>{let s;return t===f.Hp?s=a?{hpGreaterThanOrEqualTo:e}:{hpLessThanOrEqualTo:e}:t===f.Bb&&(s=a?{bbGaugeGreaterThanOrEqualTo:e}:{bbGaugeLessThanOrEqualTo:e}),s},U=({effect:e,context:a,injectionContext:t,originalId:s,effectKey:i,buffId:n,parseParamValue:o=(e=>$(e))})=>{const{conditionInfo:F,targetData:p,sources:l}=c(e,a,t),f=e,d=[];let B,E=0;if(f.params){const[e,...a]=r(f);E=o(e),B=D(a,1,t)}else E=$(f[i]);return 0!==E&&d.push(Object.assign({id:n,originalId:s,sources:l,value:E,conditions:Object.assign({},F)},p)),u(d,B,{originalId:s,sources:l,targetData:p,conditionInfo:F}),d},T=({effect:e,context:a,injectionContext:t,originalId:s,effectKeyLow:i,effectKeyHigh:n,effectKeyChance:o,buffKeyLow:F,buffKeyHigh:p,defaultEffectChance:l=0,parseParamValue:f=(e=>$(e)),generateBaseConditions:d=(()=>({})),buffId:B})=>{const{conditionInfo:E,targetData:U,sources:T}=c(e,a,t),R=e;let m,g,A,_;if(R.params){const[e,a,s,...i]=r(R);m=f(e),g=f(a),A=$(s),_=D(i,3,t)}else m=$(R[i]),g=$(R[n]),A=$(R[o],l);const v=[];return 0===m&&0===g&&0===A||v.push(Object.assign({id:B,originalId:s,sources:T,value:{[F]:m,[p]:g,chance:A},conditions:Object.assign(Object.assign({},E),d())},U)),u(v,_,{originalId:s,sources:T,targetData:U,conditionInfo:E}),v};e.set("1",(e,a,t)=>{const s="1",{conditionInfo:n,targetData:o,sources:F}=c(e,a,t),p=e,l=[],f={atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let d;if(p.params){let e;[f.atk,f.def,f.rec,f.crit,f.hp,...e]=r(p),d=D(e,5,t)}else f.hp=p["hp% buff"],f.atk=p["atk% buff"],f.def=p["def% buff"],f.rec=p["rec% buff"],f.crit=p["crit% buff"];return i.forEach(e=>{const a=$(f[e]);0!==a&&l.push(Object.assign({id:"passive:1:"+e,originalId:s,sources:F,value:a,conditions:Object.assign({},n)},o))}),u(l,d,{originalId:s,sources:F,targetData:o,conditionInfo:n}),l}),e.set("2",(e,t,s)=>{const n="2",{conditionInfo:o,targetData:F,sources:p}=c(e,t,s),l=e,f=[],d={elements:[],atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let B;if(l.params){let e,t,i;[t,i,d.atk,d.def,d.rec,d.crit,d.hp,...e]=r(l),[t,i].forEach(e=>{e&&"0"!==e&&d.elements.push(a[e]||w.Unknown)}),B=D(e,7,s)}else Array.isArray(l["elements buffed"])&&(d.elements=l["elements buffed"]),d.hp=l["hp% buff"],d.atk=l["atk% buff"],d.def=l["def% buff"],d.rec=l["rec% buff"],d.crit=l["crit% buff"];const E=e=>Object.assign({id:"passive:2:"+e,originalId:n,sources:p,value:$(d[e])},F);return d.elements.length>0?d.elements.forEach(e=>{i.forEach(a=>{0!==$(d[a])&&f.push(Object.assign(Object.assign({},E(a)),{conditions:Object.assign(Object.assign({},o),{targetElements:[e]})}))})}):i.forEach(e=>{0!==$(d[e])&&f.push(Object.assign(Object.assign({},E(e)),{conditions:Object.assign(Object.assign({},o),{targetElements:[w.Unknown]})}))}),u(f,B,{originalId:n,sources:p,targetData:F,conditionInfo:o}),f}),e.set("3",(e,a,s)=>{const n="3",{conditionInfo:o,targetData:F,sources:p}=c(e,a,s),l=e,f=[],d={unitType:"",atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let B;if(l.params){let e,a;[a,d.atk,d.def,d.rec,d.crit,d.hp,...e]=r(l),a&&"0"!==a&&(d.unitType=t[a]||"unknown"),B=D(e,6,s)}else d.unitType=l["unit type buffed"],d.hp=l["hp% buff"],d.atk=l["atk% buff"],d.def=l["def% buff"],d.rec=l["rec% buff"],d.crit=l["crit% buff"];const E=d.unitType||"unknown";return i.forEach(e=>{const a=$(d[e]);0!==a&&f.push(Object.assign({id:"passive:3:"+e,originalId:n,sources:p,value:+a,conditions:Object.assign(Object.assign({},o),{targetUnitType:E})},F))}),u(f,B,{originalId:n,sources:p,targetData:F,conditionInfo:o}),f}),e.set("4",(e,a,t)=>{const s="4",{conditionInfo:i,targetData:o,sources:F}=c(e,a,t),p=e,l=[],f={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let d;if(p.params){let e;[f.poison,f.weak,f.sick,f.injury,f.curse,f.paralysis,...e]=r(p),d=D(e,6,t)}else n.forEach(e=>{const a="weak"!==e?e:"weaken";f[e]=p[a+" resist%"]});return n.forEach(e=>{const a=$(f[e]);0!==a&&l.push(Object.assign({id:"passive:4:"+e,originalId:s,sources:F,value:a,conditions:Object.assign({},i)},o))}),u(l,d,{originalId:s,sources:F,targetData:o,conditionInfo:i}),l}),e.set("5",(e,t,s)=>{const i="5",{conditionInfo:n,targetData:o,sources:F}=c(e,t,s),p=e,l=[];let f,d,B="0";if(p.params){let e,t;[t,B,...e]=r(p),f=a[t]||w.Unknown,d=D(e,2,s)}else f=Object.values(a).find(a=>a+" resist%"in e)||w.Unknown,f!==w.Unknown&&(B=p[f+" resist%"]);const E=$(B);return 0!==E&&l.push(Object.assign({id:"passive:5:"+f,originalId:i,sources:F,value:E,conditions:Object.assign({},n)},o)),u(l,d,{originalId:i,sources:F,targetData:o,conditionInfo:n}),l}),e.set("8",(e,a,t)=>U({effect:e,context:a,injectionContext:t,effectKey:"dmg% mitigation",buffId:"passive:8",originalId:"8"})),e.set("9",(e,a,t)=>U({effect:e,context:a,injectionContext:t,effectKey:"bc fill per turn",buffId:"passive:9",originalId:"9"})),e.set("10",(e,a,t)=>U({effect:e,context:a,injectionContext:t,effectKey:"hc effectiveness%",buffId:"passive:10",originalId:"10"})),e.set("11",(e,a,t)=>{const s="11",{conditionInfo:n,targetData:o,sources:F}=c(e,a,t),p=e,l=[],U={atk:"0",def:"0",rec:"0",crit:"0"};let T,R;if(p.params){let e,a,s;[U.atk,U.def,U.rec,U.crit,s,a,...e]=r(p),T=d(s,a,f.Hp),R=D(e,6,t)}else U.atk=p["atk% buff"],U.def=p["def% buff"],U.rec=p["rec% buff"],U.crit=p["crit% buff"],T=B(p,f.Hp);const m=E(T);return i.forEach(e=>{const a=$(U[e]);if("hp"!==e&&0!==a){const t=Object.assign({id:"passive:11:"+e,originalId:s,sources:F,value:a,conditions:Object.assign(Object.assign({},n),m)},o);l.push(t)}}),u(l,R,{originalId:s,sources:F,targetData:o,conditionInfo:n}),l}),e.set("12",(e,a,t)=>{const s="12",{conditionInfo:i,targetData:n,sources:F}=c(e,a,t),p=e,l=[],U={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let T,R;if(p.params){let e,a,s;[U.bc,U.hc,U.item,U.zel,U.karma,s,a,...e]=r(p),T=d(s,a,f.Hp),R=D(e,7,t)}else o.forEach(e=>{U[e]=p[e+" drop rate% buff"]}),T=B(p,f.Hp);const m=E(T);return o.forEach(e=>{const a=$(U[e]);if(0!==a){const t=Object.assign({id:"passive:12:"+e,originalId:s,sources:F,value:a,conditions:Object.assign(Object.assign({},i),m)},n);l.push(t)}}),u(l,R,{originalId:s,sources:F,targetData:n,conditionInfo:i}),l}),e.set("13",(e,a,t)=>T({effect:e,context:a,injectionContext:t,originalId:"13",effectKeyLow:"bc fill on enemy defeat low",effectKeyHigh:"bc fill on enemy defeat high",effectKeyChance:"bc fill on enemy defeat%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>$(e)/100,generateBaseConditions:()=>({onEnemyDefeat:!0}),buffId:"passive:13"})),e.set("14",(e,a,t)=>{const s="14",{conditionInfo:i,targetData:n,sources:o}=c(e,a,t),F=e;let p,l,f;if(F.params){const[e,a,...s]=r(F);p=$(e),l=$(a),f=D(s,2,t)}else p=$(F["dmg reduction%"]),l=$(F["dmg reduction chance%"]);const d=[];return 0===p&&0===l||d.push(Object.assign({id:"passive:14",originalId:s,sources:o,value:{value:p,chance:l},conditions:Object.assign({},i)},n)),u(d,f,{originalId:s,sources:o,targetData:n,conditionInfo:i}),d}),e.set("15",(e,a,t)=>T({effect:e,context:a,injectionContext:t,originalId:"15",effectKeyLow:"hp% recover on enemy defeat low",effectKeyHigh:"hp% recover on enemy defeat high",effectKeyChance:"hp% recover on enemy defeat chance%",buffKeyLow:"healLow",buffKeyHigh:"healHigh",generateBaseConditions:()=>({onEnemyDefeat:!0}),defaultEffectChance:100,buffId:"passive:15"})),e.set("16",(e,a,t)=>{const s="16",{conditionInfo:i,targetData:n,sources:o}=c(e,a,t),F=e;let p,l,f;if(F.params){const[e,a,...s]=r(F);p=$(e),l=$(a),f=D(s,2,t)}else p=$(F["hp% recover on battle win low"]),l=$(F["hp% recover on battle win high"]);const d=[];return 0===p&&0===l||d.push(Object.assign({id:"passive:16",originalId:s,sources:o,value:{healLow:p,healHigh:l},conditions:Object.assign(Object.assign({},i),{onBattleWin:!0})},n)),u(d,f,{originalId:s,sources:o,targetData:n,conditionInfo:i}),d}),e.set("17",(e,a,t)=>T({effect:e,context:a,injectionContext:t,originalId:"17",effectKeyLow:"hp drain% low",effectKeyHigh:"hp drain% high",effectKeyChance:"hp drain chance%",buffKeyLow:"drainHealLow",buffKeyHigh:"drainHealHigh",buffId:"passive:17"})),e.set("19",(e,a,t)=>{const s="19",{conditionInfo:i,targetData:n,sources:F}=c(e,a,t),p=e,l=[],f={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let d;if(p.params){let e;[f.bc,f.hc,f.item,f.zel,f.karma,...e]=r(p),d=D(e,5,t)}else o.forEach(e=>{f[e]=p[e+" drop rate% buff"]});return o.forEach(e=>{const a=$(f[e]);0!==a&&l.push(Object.assign({id:"passive:19:"+e,originalId:s,sources:F,value:a,conditions:Object.assign({},i)},n))}),u(l,d,{originalId:s,sources:F,targetData:n,conditionInfo:i}),l}),e.set("20",(e,a,t)=>{const i="20",{conditionInfo:n,targetData:o,sources:F}=c(e,a,t),p=[],f=e;let d;if(f.params){let e=r(f);e.length%2!=0&&"0"!==e[e.length-1]&&(d=D(e.slice(-1),e.length-1,t),e=e.slice(0,e.length-1));const a=e.length;for(let t=0;t<a;t+=2){const a=e[t],i=$(e[t+1]);if("0"!==a||0!==i){const e=s[a]||l.Unknown;p.push({ailment:e,chance:i})}}}else Object.values(s).forEach(a=>{let t;t=a===l.Weak?"weaken%":a===l.AttackReduction||a===l.DefenseReduction||a===l.RecoveryReduction?a:a+"%",t in e&&p.push({ailment:a,chance:$(f[t])})});const B=[];return p.forEach(({ailment:e,chance:a})=>{0!==a&&B.push(Object.assign({id:"passive:20:"+e,originalId:i,sources:F,value:a,conditions:Object.assign({},n)},o))}),u(B,d,{originalId:i,sources:F,targetData:o,conditionInfo:n}),B}),e.set("21",(e,a,t)=>{const s="21",{conditionInfo:n,targetData:o,sources:F}=c(e,a,t),p=e,l=[],f={atk:"0",def:"0",rec:"0",crit:"0"};let d,B=0;if(p.params){let e,a;[f.atk,f.def,f.rec,f.crit,e,...a]=r(p),B=$(e),d=D(a,5,t)}else f.atk=p["first x turns atk% (1)"],f.def=p["first x turns def% (3)"],f.rec=p["first x turns rec% (5)"],f.crit=p["first x turns crit% (7)"],B=$(p["first x turns"]);return i.forEach(e=>{const a=$(f[e]);if("hp"!==e&&0!==a){const t=Object.assign({id:"passive:21:"+e,originalId:s,sources:F,value:a,duration:B,conditions:Object.assign({},n)},o);l.push(t)}}),u(l,d,{originalId:s,sources:F,targetData:o,conditionInfo:n}),l}),e.set("23",(e,a,t)=>{const s="23",{conditionInfo:i,targetData:n,sources:o}=c(e,a,t),F=e;let p,l,f;if(F.params){const[e,a,...s]=r(F);p=$(e)/100,l=$(a)/100,f=D(s,2,t)}else p=$(F["battle end bc fill low"]),l=$(F["battle end bc fill high"]);const d=[];return 0===p&&0===l||d.push(Object.assign({id:"passive:23",originalId:s,sources:o,value:{fillLow:p,fillHigh:l},conditions:Object.assign(Object.assign({},i),{onBattleWin:!0})},n)),u(d,f,{originalId:s,sources:o,targetData:n,conditionInfo:i}),d}),e.set("24",(e,a,t)=>T({effect:e,context:a,injectionContext:t,originalId:"24",effectKeyLow:"dmg% to hp when attacked low",effectKeyHigh:"dmg% to hp when attacked high",effectKeyChance:"dmg% to hp when attacked chance%",buffKeyLow:"healLow",buffKeyHigh:"healHigh",generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:24"})),e.set("25",(e,a,t)=>T({effect:e,context:a,injectionContext:t,originalId:"25",effectKeyLow:"bc fill when attacked low",effectKeyHigh:"bc fill when attacked high",effectKeyChance:"bc fill when attacked%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>$(e)/100,generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:25"})),e.set("26",(e,a,t)=>T({effect:e,context:a,injectionContext:t,originalId:"26",effectKeyLow:"dmg% reflect low",effectKeyHigh:"dmg% reflect high",effectKeyChance:"dmg% reflect chance%",buffKeyLow:"damageReflectLow",buffKeyHigh:"damageReflectHigh",generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:26"})),e.set("27",(e,a,t)=>U({effect:e,context:a,injectionContext:t,effectKey:"target% chance",buffId:"passive:27",originalId:"27"})),e.set("28",(e,a,t)=>{const s="28",{conditionInfo:i,targetData:n,sources:o}=c(e,a,t),F=e;let p,l,U=0;if(F.params){const[e,a,s,...i]=r(F);U=$(e),p=d(a,s,f.Hp),l=D(i,3,t)}else U=$(F["target% chance"]),p=B(F,f.Hp,"passive requirement");const T=[];if(0!==U){const e=E(p),a=Object.assign({id:"passive:28",originalId:s,sources:o,value:U,conditions:Object.assign(Object.assign({},i),e)},n);T.push(a)}return u(T,l,{originalId:s,sources:o,targetData:n,conditionInfo:i}),T}),e.set("29",(e,a,t)=>U({effect:e,context:a,injectionContext:t,effectKey:"ignore def%",buffId:"passive:29",originalId:"29"})),e.set("30",(e,a,t)=>{const s="30",{conditionInfo:n,targetData:o,sources:F}=c(e,a,t),p=e,l=[],U={atk:"0",def:"0",rec:"0",crit:"0"};let T,R;if(p.params){let e,a,s;[U.atk,U.def,U.rec,U.crit,s,a,...e]=r(p),T=d(s,a,f.Bb),R=D(e,6,t)}else U.atk=p["atk% buff"],U.def=p["def% buff"],U.rec=p["rec% buff"],U.crit=p["crit% buff"],T=B(p,f.Bb);const m=E(T);return i.forEach(e=>{const a=$(U[e]);if("hp"!==e&&0!==a){const t=Object.assign({id:"passive:30:"+e,originalId:s,sources:F,value:a,conditions:Object.assign(Object.assign({},n),m)},o);l.push(t)}}),u(l,R,{originalId:s,sources:F,targetData:o,conditionInfo:n}),l}),e.set("31",(e,a,t)=>{const s="31",{conditionInfo:i,targetData:n,sources:F}=c(e,a,t),p=e,l={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let f,d=0;if(p.params){let e,a;[a,l.bc,l.hc,l.item,l.zel,l.karma,...e]=r(p),d=$(a),f=D(e,6,t)}else d=$(p["damage% for spark"]),o.forEach(e=>{l[e]=p[e+" drop% for spark"]});const B=[];return 0!==d&&B.push(Object.assign({id:"passive:31:damage",originalId:s,sources:F,value:d,conditions:Object.assign({},i)},n)),o.forEach(e=>{const a=$(l[e]);0!==a&&B.push(Object.assign({id:"passive:31:"+e,originalId:s,sources:F,value:a,conditions:Object.assign({},i)},n))}),u(B,f,{originalId:s,sources:F,targetData:n,conditionInfo:i}),B}),e.set("32",(e,a,t)=>U({effect:e,context:a,injectionContext:t,effectKey:"bb gauge fill rate%",buffId:"passive:32",originalId:"32"})),e.set("33",(e,a,t)=>{const s="33",{conditionInfo:i,targetData:n,sources:o}=c(e,a,t),F=e;let p,l,f,d;if(F.params){const[e,a,s,...i]=r(F);p=$(e),l=$(a),f=10*(1+$(s)/100),d=D(i,3,t)}else p=$(F["turn heal low"]),l=$(F["turn heal high"]),f=$(F["rec% added (turn heal)"]);const B=[];return 0===p&&0===l||B.push(Object.assign({id:"passive:33",originalId:s,sources:o,value:{healLow:p,healHigh:l,"addedRec%":f},conditions:Object.assign({},i)},n)),u(B,d,{originalId:s,sources:o,targetData:n,conditionInfo:i}),B}),e.set("34",(e,a,t)=>U({effect:e,context:a,injectionContext:t,effectKey:"crit multiplier%",buffId:"passive:34",originalId:"34",parseParamValue:e=>100*$(e)}))}(J)),J}!function(e){e.Active="active",e.Passive="passive",e.ConditionalTimed="conditionalTimed",e.Singleton="singleton",e.Burst="burst",e.Attack="attack",e.Unknown="unknown"}(W||(W={})),function(e){e.BraveBurst="bb",e.SuperBraveBurst="sbb",e.UltimateBraveBurst="ubb",e.DualBraveBurst="dbb",e.BondedBraveBurst="bbb",e.BondedSuperBraveBurst="dsbb",e.SpEnhancement="sp",e.Item="item",e.LeaderSkill="ls",e.ExtraSkill="es",e.OmniParadigm="omniParadigm",e.UnitTypeBonus="unitTypeBonus",e.Quest="quest"}(K||(K={})),function(e){e.Unknown="unknown",e.OmniParadigm="omniParadigm",e.All="all"}(w||(w={})),function(e){e.hp="hp",e.atk="atk",e.def="def",e.rec="rec",e.crit="crit",e.hpRecovery="hpRecovery",e.bbGauge="bbGauge",e.bcDropRate="bcDropRate",e.hcDropRate="hcDropRate",e.itemDropRate="itemDropRate",e.zelDropRate="zelDropRate",e.karmaDropRate="karmaDropRate",e.bcEfficacy="bcEfficacy",e.hcEfficacy="hcEfficacy",e.poisonResist="poisonResist",e.weakResist="weakResist",e.sickResist="sickResist",e.injuryResist="injuryResist",e.curseResist="curseResist",e.paralysisResist="paralysisResist",e.poisonInflict="poisonInflict",e.weakInflict="weakInflict",e.sickInflict="sickInflict",e.injuryInflict="injuryInflict",e.curseInflict="curseInflict",e.paralysisInflict="paralysisInflict",e.atkDownResist="atkDownResist",e.defDownResist="defDownResist",e.recDownResist="recDownResist",e.atkDownInflict="atkDownInflict",e.defDownInflict="defDownInflict",e.recDownInflict="recDownInflict",e.mitigation="mitigation",e.fireMitigation="fireMitigation",e.waterMitigation="waterMitigation",e.earthMitigation="earthMitigation",e.thunderMitigation="thunderMitigation",e.lightMitigation="lightMitigation",e.darkMitigation="darkMitigation",e.turnDurationModification="turnDurationModification",e.koResistance="koResistance",e.revive="revive",e.defenseIgnore="defenseIgnore",e.criticalDamage="criticalDamage",e.sparkDamage="sparkDamage",e.hitCountModification="hitCountModification",e.damageReflect="damageReflect",e.targetingModification="targetingModification",e.elementModification="elementModification",e.buffStabilityModification="buffStabilityModification"}(L||(L={})),function(e){e.UNKNOWN="UNKNOWN",e.TURN_DURATION_UP="TURN_DURATION_UP",e.TURN_DURATION_DOWN="TURN_DURATION_DOWN",e.BUFF_HPUP="BUFF_HPUP",e.BUFF_HPDOWN="BUFF_HPDOWN",e.BUFF_ATKUP="BUFF_ATKUP",e.BUFF_ATKDOWN="BUFF_ATKDOWN",e.BUFF_DEFUP="BUFF_DEFUP",e.BUFF_DEFDOWN="BUFF_DEFDOWN",e.BUFF_RECUP="BUFF_RECUP",e.BUFF_RECDOWN="BUFF_RECDOWN",e.BUFF_CRTRATEUP="BUFF_CRTRATEUP",e.BUFF_CRTRATEDOWN="BUFF_CRTRATEDOWN",e.BUFF_HPTHRESHATKUP="BUFF_HPTHRESHATKUP",e.BUFF_HPTHRESHATKDOWN="BUFF_HPTHRESHATKDOWN",e.BUFF_HPTHRESHDEFUP="BUFF_HPTHRESHDEFUP",e.BUFF_HPTHRESHDEFDOWN="BUFF_HPTHRESHDEFDOWN",e.BUFF_HPTHRESHRECUP="BUFF_HPTHRESHRECUP",e.BUFF_HPTHRESHRECDOWN="BUFF_HPTHRESHRECDOWN",e.BUFF_HPTHRESHCRTRATEUP="BUFF_HPTHRESHCRTRATEUP",e.BUFF_HPTHRESHCRTRATEDOWN="BUFF_HPTHRESHCRTRATEDOWN",e.BUFF_BBGAUGETHRESHATKUP="BUFF_BBGAUGETHRESHATKUP",e.BUFF_BBGAUGETHRESHATKDOWN="BUFF_BBGAUGETHRESHATKDOWN",e.BUFF_BBGAUGETHRESHDEFUP="BUFF_BBGAUGETHRESHDEFUP",e.BUFF_BBGAUGETHRESHDEFDOWN="BUFF_BBGAUGETHRESHDEFDOWN",e.BUFF_BBGAUGETHRESHRECUP="BUFF_BBGAUGETHRESHRECUP",e.BUFF_BBGAUGETHRESHRECDOWN="BUFF_BBGAUGETHRESHRECDOWN",e.BUFF_BBGAUGETHRESHCRTRATEUP="BUFF_BBGAUGETHRESHCRTRATEUP",e.BUFF_BBGAUGETHRESHCRTRATEDOWN="BUFF_BBGAUGETHRESHCRTRATEDOWN",e.BUFF_HPREC="BUFF_HPREC",e.BUFF_BBREC="BUFF_BBREC",e.BUFF_DAMAGEBB="BUFF_DAMAGEBB",e.BUFF_BEENATK_HPREC="BUFF_BEENATK_HPREC",e.BUFF_FIREHPUP="BUFF_FIREHPUP",e.BUFF_FIREHPDOWN="BUFF_FIREHPDOWN",e.BUFF_FIREATKUP="BUFF_FIREATKUP",e.BUFF_FIREATKDOWN="BUFF_FIREATKDOWN",e.BUFF_FIREDEFUP="BUFF_FIREDEFUP",e.BUFF_FIREDEFDOWN="BUFF_FIREDEFDOWN",e.BUFF_FIRERECUP="BUFF_FIRERECUP",e.BUFF_FIRERECDOWN="BUFF_FIRERECDOWN",e.BUFF_FIRECRTRATEUP="BUFF_FIRECRTRATEUP",e.BUFF_FIRECRTRATEDOWN="BUFF_FIRECRTRATEDOWN",e.BUFF_WATERHPUP="BUFF_WATERHPUP",e.BUFF_WATERHPDOWN="BUFF_WATERHPDOWN",e.BUFF_WATERATKUP="BUFF_WATERATKUP",e.BUFF_WATERATKDOWN="BUFF_WATERATKDOWN",e.BUFF_WATERDEFUP="BUFF_WATERDEFUP",e.BUFF_WATERDEFDOWN="BUFF_WATERDEFDOWN",e.BUFF_WATERRECUP="BUFF_WATERRECUP",e.BUFF_WATERRECDOWN="BUFF_WATERRECDOWN",e.BUFF_WATERCRTRATEUP="BUFF_WATERCRTRATEUP",e.BUFF_WATERCRTRATEDOWN="BUFF_WATERCRTRATEDOWN",e.BUFF_EARTHHPUP="BUFF_EARTHHPUP",e.BUFF_EARTHHPDOWN="BUFF_EARTHHPDOWN",e.BUFF_EARTHATKUP="BUFF_EARTHATKUP",e.BUFF_EARTHATKDOWN="BUFF_EARTHATKDOWN",e.BUFF_EARTHDEFUP="BUFF_EARTHDEFUP",e.BUFF_EARTHDEFDOWN="BUFF_EARTHDEFDOWN",e.BUFF_EARTHRECUP="BUFF_EARTHRECUP",e.BUFF_EARTHRECDOWN="BUFF_EARTHRECDOWN",e.BUFF_EARTHCRTRATEUP="BUFF_EARTHCRTRATEUP",e.BUFF_EARTHCRTRATEDOWN="BUFF_EARTHCRTRATEDOWN",e.BUFF_THUNDERHPUP="BUFF_THUNDERHPUP",e.BUFF_THUNDERHPDOWN="BUFF_THUNDERHPDOWN",e.BUFF_THUNDERATKUP="BUFF_THUNDERATKUP",e.BUFF_THUNDERATKDOWN="BUFF_THUNDERATKDOWN",e.BUFF_THUNDERDEFUP="BUFF_THUNDERDEFUP",e.BUFF_THUNDERDEFDOWN="BUFF_THUNDERDEFDOWN",e.BUFF_THUNDERRECUP="BUFF_THUNDERRECUP",e.BUFF_THUNDERRECDOWN="BUFF_THUNDERRECDOWN",e.BUFF_THUNDERCRTRATEUP="BUFF_THUNDERCRTRATEUP",e.BUFF_THUNDERCRTRATEDOWN="BUFF_THUNDERCRTRATEDOWN",e.BUFF_LIGHTHPUP="BUFF_LIGHTHPUP",e.BUFF_LIGHTHPDOWN="BUFF_LIGHTHPDOWN",e.BUFF_LIGHTATKUP="BUFF_LIGHTATKUP",e.BUFF_LIGHTATKDOWN="BUFF_LIGHTATKDOWN",e.BUFF_LIGHTDEFUP="BUFF_LIGHTDEFUP",e.BUFF_LIGHTDEFDOWN="BUFF_LIGHTDEFDOWN",e.BUFF_LIGHTRECUP="BUFF_LIGHTRECUP",e.BUFF_LIGHTRECDOWN="BUFF_LIGHTRECDOWN",e.BUFF_LIGHTCRTRATEUP="BUFF_LIGHTCRTRATEUP",e.BUFF_LIGHTCRTRATEDOWN="BUFF_LIGHTCRTRATEDOWN",e.BUFF_DARKHPUP="BUFF_DARKHPUP",e.BUFF_DARKHPDOWN="BUFF_DARKHPDOWN",e.BUFF_DARKATKUP="BUFF_DARKATKUP",e.BUFF_DARKATKDOWN="BUFF_DARKATKDOWN",e.BUFF_DARKDEFUP="BUFF_DARKDEFUP",e.BUFF_DARKDEFDOWN="BUFF_DARKDEFDOWN",e.BUFF_DARKRECUP="BUFF_DARKRECUP",e.BUFF_DARKRECDOWN="BUFF_DARKRECDOWN",e.BUFF_DARKCRTRATEUP="BUFF_DARKCRTRATEUP",e.BUFF_DARKCRTRATEDOWN="BUFF_DARKCRTRATEDOWN",e.BUFF_ELEMENTHPUP="BUFF_ELEMENTHPUP",e.BUFF_ELEMENTHPDOWN="BUFF_ELEMENTHPDOWN",e.BUFF_ELEMENTATKUP="BUFF_ELEMENTATKUP",e.BUFF_ELEMENTATKDOWN="BUFF_ELEMENTATKDOWN",e.BUFF_ELEMENTDEFUP="BUFF_ELEMENTDEFUP",e.BUFF_ELEMENTDEFDOWN="BUFF_ELEMENTDEFDOWN",e.BUFF_ELEMENTRECUP="BUFF_ELEMENTRECUP",e.BUFF_ELEMENTRECDOWN="BUFF_ELEMENTRECDOWN",e.BUFF_ELEMENTCRTRATEUP="BUFF_ELEMENTCRTRATEUP",e.BUFF_ELEMENTCRTRATEDOWN="BUFF_ELEMENTCRTRATEDOWN",e.BUFF_LORDHPUP="BUFF_LORDHPUP",e.BUFF_LORDHPDOWN="BUFF_LORDHPDOWN",e.BUFF_LORDATKUP="BUFF_LORDATKUP",e.BUFF_LORDATKDOWN="BUFF_LORDATKDOWN",e.BUFF_LORDDEFUP="BUFF_LORDDEFUP",e.BUFF_LORDDEFDOWN="BUFF_LORDDEFDOWN",e.BUFF_LORDRECUP="BUFF_LORDRECUP",e.BUFF_LORDRECDOWN="BUFF_LORDRECDOWN",e.BUFF_LORDCRTRATEUP="BUFF_LORDCRTRATEUP",e.BUFF_LORDCRTRATEDOWN="BUFF_LORDCRTRATEDOWN",e.BUFF_ANIMAHPUP="BUFF_ANIMAHPUP",e.BUFF_ANIMAHPDOWN="BUFF_ANIMAHPDOWN",e.BUFF_ANIMAATKUP="BUFF_ANIMAATKUP",e.BUFF_ANIMAATKDOWN="BUFF_ANIMAATKDOWN",e.BUFF_ANIMADEFUP="BUFF_ANIMADEFUP",e.BUFF_ANIMADEFDOWN="BUFF_ANIMADEFDOWN",e.BUFF_ANIMARECUP="BUFF_ANIMARECUP",e.BUFF_ANIMARECDOWN="BUFF_ANIMARECDOWN",e.BUFF_ANIMACRTRATEUP="BUFF_ANIMACRTRATEUP",e.BUFF_ANIMACRTRATEDOWN="BUFF_ANIMACRTRATEDOWN",e.BUFF_BREAKERHPUP="BUFF_BREAKERHPUP",e.BUFF_BREAKERHPDOWN="BUFF_BREAKERHPDOWN",e.BUFF_BREAKERATKUP="BUFF_BREAKERATKUP",e.BUFF_BREAKERATKDOWN="BUFF_BREAKERATKDOWN",e.BUFF_BREAKERDEFUP="BUFF_BREAKERDEFUP",e.BUFF_BREAKERDEFDOWN="BUFF_BREAKERDEFDOWN",e.BUFF_BREAKERRECUP="BUFF_BREAKERRECUP",e.BUFF_BREAKERRECDOWN="BUFF_BREAKERRECDOWN",e.BUFF_BREAKERCRTRATEUP="BUFF_BREAKERCRTRATEUP",e.BUFF_BREAKERCRTRATEDOWN="BUFF_BREAKERCRTRATEDOWN",e.BUFF_GUARDIANHPUP="BUFF_GUARDIANHPUP",e.BUFF_GUARDIANHPDOWN="BUFF_GUARDIANHPDOWN",e.BUFF_GUARDIANATKUP="BUFF_GUARDIANATKUP",e.BUFF_GUARDIANATKDOWN="BUFF_GUARDIANATKDOWN",e.BUFF_GUARDIANDEFUP="BUFF_GUARDIANDEFUP",e.BUFF_GUARDIANDEFDOWN="BUFF_GUARDIANDEFDOWN",e.BUFF_GUARDIANRECUP="BUFF_GUARDIANRECUP",e.BUFF_GUARDIANRECDOWN="BUFF_GUARDIANRECDOWN",e.BUFF_GUARDIANCRTRATEUP="BUFF_GUARDIANCRTRATEUP",e.BUFF_GUARDIANCRTRATEDOWN="BUFF_GUARDIANCRTRATEDOWN",e.BUFF_ORACLEHPUP="BUFF_ORACLEHPUP",e.BUFF_ORACLEHPDOWN="BUFF_ORACLEHPDOWN",e.BUFF_ORACLEATKUP="BUFF_ORACLEATKUP",e.BUFF_ORACLEATKDOWN="BUFF_ORACLEATKDOWN",e.BUFF_ORACLEDEFUP="BUFF_ORACLEDEFUP",e.BUFF_ORACLEDEFDOWN="BUFF_ORACLEDEFDOWN",e.BUFF_ORACLERECUP="BUFF_ORACLERECUP",e.BUFF_ORACLERECDOWN="BUFF_ORACLERECDOWN",e.BUFF_ORACLECRTRATEUP="BUFF_ORACLECRTRATEUP",e.BUFF_ORACLECRTRATEDOWN="BUFF_ORACLECRTRATEDOWN",e.BUFF_REXHPUP="BUFF_REXHPUP",e.BUFF_REXHPDOWN="BUFF_REXHPDOWN",e.BUFF_REXATKUP="BUFF_REXATKUP",e.BUFF_REXATKDOWN="BUFF_REXATKDOWN",e.BUFF_REXDEFUP="BUFF_REXDEFUP",e.BUFF_REXDEFDOWN="BUFF_REXDEFDOWN",e.BUFF_REXRECUP="BUFF_REXRECUP",e.BUFF_REXRECDOWN="BUFF_REXRECDOWN",e.BUFF_REXCRTRATEUP="BUFF_REXCRTRATEUP",e.BUFF_REXCRTRATEDOWN="BUFF_REXCRTRATEDOWN",e.BUFF_UNITTYPEHPUP="BUFF_UNITTYPEHPUP",e.BUFF_UNITTYPEHPDOWN="BUFF_UNITTYPEHPDOWN",e.BUFF_UNITTYPEATKUP="BUFF_UNITTYPEATKUP",e.BUFF_UNITTYPEATKDOWN="BUFF_UNITTYPEATKDOWN",e.BUFF_UNITTYPEDEFUP="BUFF_UNITTYPEDEFUP",e.BUFF_UNITTYPEDEFDOWN="BUFF_UNITTYPEDEFDOWN",e.BUFF_UNITTYPERECUP="BUFF_UNITTYPERECUP",e.BUFF_UNITTYPERECDOWN="BUFF_UNITTYPERECDOWN",e.BUFF_UNITTYPECRTRATEUP="BUFF_UNITTYPECRTRATEUP",e.BUFF_UNITTYPECRTRATEDOWN="BUFF_UNITTYPECRTRATEDOWN",e.BUFF_CONVERTATKUP="BUFF_CONVERTATKUP",e.BUFF_CONVERTATKDOWN="BUFF_CONVERTATKDOWN",e.BUFF_CONVERTDEFUP="BUFF_CONVERTDEFUP",e.BUFF_CONVERTDEFDOWN="BUFF_CONVERTDEFDOWN",e.BUFF_CONVERTRECUP="BUFF_CONVERTRECUP",e.BUFF_CONVERTRECDOWN="BUFF_CONVERTRECDOWN",e.BUFF_POISONBLK="BUFF_POISONBLK",e.BUFF_WEAKBLK="BUFF_WEAKBLK",e.BUFF_SICKBLK="BUFF_SICKBLK",e.BUFF_INJURYBLK="BUFF_INJURYBLK",e.BUFF_CURSEBLK="BUFF_CURSEBLK",e.BUFF_PARALYSISBLK="BUFF_PARALYSISBLK",e.BUFF_ATKDOWNBLK="BUFF_ATKDOWNBLK",e.BUFF_DEFDOWNBLK="BUFF_DEFDOWNBLK",e.BUFF_RECDOWNBLK="BUFF_RECDOWNBLK",e.BUFF_AILMENTBLK="BUFF_AILMENTBLK",e.DEBUFF_POISON="DEBUFF_POISON",e.DEBUFF_WEAK="DEBUFF_WEAK",e.DEBUFF_SICK="DEBUFF_SICK",e.DEBUFF_INJURY="DEBUFF_INJURY",e.DEBUFF_CURSE="DEBUFF_CURSE",e.DEBUFF_PARALYSIS="DEBUFF_PARALYSIS",e.DEBUFF_AILMENT="DEBUFF_AILMENT",e.BUFF_ADDPOISON="BUFF_ADDPOISON",e.BUFF_ADDWEAK="BUFF_ADDWEAK",e.BUFF_ADDSICK="BUFF_ADDSICK",e.BUFF_ADDINJURY="BUFF_ADDINJURY",e.BUFF_ADDCURSE="BUFF_ADDCURSE",e.BUFF_ADDPARA="BUFF_ADDPARA",e.BUFF_ADDAILMENT="BUFF_ADDAILMENT",e.BUFF_ADDATKDOWN="BUFF_ADDATKDOWN",e.BUFF_ADDDEFDOWN="BUFF_ADDDEFDOWN",e.BUFF_ADDRECDOWN="BUFF_ADDRECDOWN",e.BUFF_DAMAGECUT="BUFF_DAMAGECUT",e.BUFF_FIREDMGDOWN="BUFF_FIREDMGDOWN",e.BUFF_WATERDMGDOWN="BUFF_WATERDMGDOWN",e.BUFF_EARTHDMGDOWN="BUFF_EARTHDMGDOWN",e.BUFF_THUNDERDMGDOWN="BUFF_THUNDERDMGDOWN",e.BUFF_LIGHTDMGDOWN="BUFF_LIGHTDMGDOWN",e.BUFF_DARKDMGDOWN="BUFF_DARKDMGDOWN",e.BUFF_ELEMENTDMGDOWN="BUFF_ELEMENTDMGDOWN",e.BUFF_HCDROP="BUFF_HCDROP",e.BUFF_HCDOWN="BUFF_HCDOWN",e.BUFF_BCDROP="BUFF_BCDROP",e.BUFF_BCDOWN="BUFF_BCDOWN",e.BUFF_ITEMDROP="BUFF_ITEMDROP",e.BUFF_ITEMDOWN="BUFF_ITEMDOWN",e.BUFF_ZELDROP="BUFF_ZELDROP",e.BUFF_ZELDOWN="BUFF_ZELDOWN",e.BUFF_KARMADROP="BUFF_KARMADROP",e.BUFF_KARMADOWN="BUFF_KARMADOWN",e.BUFF_HPTHRESHHCDROP="BUFF_HPTHRESHHCDROP",e.BUFF_HPTHRESHHCDOWN="BUFF_HPTHRESHHCDOWN",e.BUFF_HPTHRESHBCDROP="BUFF_HPTHRESHBCDROP",e.BUFF_HPTHRESHBCDOWN="BUFF_HPTHRESHBCDOWN",e.BUFF_HPTHRESHITEMDROP="BUFF_HPTHRESHITEMDROP",e.BUFF_HPTHRESHITEMDOWN="BUFF_HPTHRESHITEMDOWN",e.BUFF_HPTHRESHZELDROP="BUFF_HPTHRESHZELDROP",e.BUFF_HPTHRESHZELDOWN="BUFF_HPTHRESHZELDOWN",e.BUFF_HPTHRESHKARMADROP="BUFF_HPTHRESHKARMADROP",e.BUFF_HPTHRESHKARMADOWN="BUFF_HPTHRESHKARMADOWN",e.BUFF_BBFILL="BUFF_BBFILL",e.BUFF_BBFILLDOWN="BUFF_BBFILLDOWN",e.BUFF_HCREC="BUFF_HCREC",e.BUFF_KOBLK="BUFF_KOBLK",e.BUFF_HPABS="BUFF_HPABS",e.BUFF_IGNOREDEF="BUFF_IGNOREDEF",e.BUFF_CRTUP="BUFF_CRTUP",e.BUFF_SPARKUP="BUFF_SPARKUP",e.BUFF_SPARKDOWN="BUFF_SPARKDOWN",e.BUFF_SPARKHC="BUFF_SPARKHC",e.BUFF_SPARKBC="BUFF_SPARKBC",e.BUFF_SPARKITEM="BUFF_SPARKITEM",e.BUFF_SPARKZEL="BUFF_SPARKZEL",e.BUFF_SPARKKARMA="BUFF_SPARKKARMA",e.BUFF_HITUP="BUFF_HITUP",e.BUFF_COUNTERDAMAGE="BUFF_COUNTERDAMAGE",e.BUFF_GETENEATT="BUFF_GETENEATT",e.BUFF_REPENEATT="BUFF_REPENEATT",e.BUFF_HPTHRESHGETENEATT="BUFF_HPTHRESHGETENEATT",e.BUFF_HPTHRESHREPENEATT="BUFF_HPTHRESHREPENEATT",e.BUFF_ADDFIRE="BUFF_ADDFIRE",e.BUFF_ADDWATER="BUFF_ADDWATER",e.BUFF_ADDEARTH="BUFF_ADDEARTH",e.BUFF_ADDTHUNDER="BUFF_ADDTHUNDER",e.BUFF_ADDLIGHT="BUFF_ADDLIGHT",e.BUFF_ADDDARK="BUFF_ADDDARK",e.BUFF_ADDELEMENT="BUFF_ADDELEMENT",e.BUFF_SHIFTFIRE="BUFF_SHIFTFIRE",e.BUFF_SHIFTWATER="BUFF_SHIFTWATER",e.BUFF_SHIFTEARTH="BUFF_SHIFTEARTH",e.BUFF_SHIFTTHUNDER="BUFF_SHIFTTHUNDER",e.BUFF_SHIFTLIGHT="BUFF_SHIFTLIGHT",e.BUFF_SHIFTDARK="BUFF_SHIFTDARK",e.BUFF_SHIFTELEMENT="BUFF_SHIFTELEMENT",e.BUFF_REMOVEBUFF="BUFF_REMOVEBUFF",e.ATK_ST="ATK_ST",e.ATK_AOE="ATK_AOE",e.ATK_RT="ATK_RT",e.ATK_ST_HPREC="ATK_ST_HPREC",e.ATK_AOE_HPREC="ATK_AOE_HPREC",e.ATK_ST_PROPORTIONAL="ATK_ST_PROPORTIONAL",e.ATK_AOE_PROPORTIONAL="ATK_AOE_PROPORTIONAL",e.ATK_ST_FIXED="ATK_ST_FIXED",e.ATK_AOE_FIXED="ATK_AOE_FIXED",e.ATK_ST_MULTIELEMENT="ATK_ST_MULTIELEMENT",e.ATK_AOE_MULTIELEMENT="ATK_AOE_MULTIELEMENT"}(M||(M={})),function(e){e.TURN_DURATION_MODIFICATION="TURN_DURATION_MODIFICATION",e.NO_PARAMS_SPECIFIED="NO_PARAMS_SPECIFIED",e.UNKNOWN_PASSIVE_EFFECT_ID="UNKNOWN_PASSIVE_EFFECT_ID",e.UNKNOWN_PASSIVE_BUFF_PARAMS="UNKNOWN_PASSIVE_BUFF_PARAMS",e["passive:1:hp"]="passive:1:hp",e["passive:1:atk"]="passive:1:atk",e["passive:1:def"]="passive:1:def",e["passive:1:rec"]="passive:1:rec",e["passive:1:crit"]="passive:1:crit",e["passive:2:hp"]="passive:2:hp",e["passive:2:atk"]="passive:2:atk",e["passive:2:def"]="passive:2:def",e["passive:2:rec"]="passive:2:rec",e["passive:2:crit"]="passive:2:crit",e["passive:3:hp"]="passive:3:hp",e["passive:3:atk"]="passive:3:atk",e["passive:3:def"]="passive:3:def",e["passive:3:rec"]="passive:3:rec",e["passive:3:crit"]="passive:3:crit",e["passive:4:poison"]="passive:4:poison",e["passive:4:weak"]="passive:4:weak",e["passive:4:sick"]="passive:4:sick",e["passive:4:injury"]="passive:4:injury",e["passive:4:curse"]="passive:4:curse",e["passive:4:paralysis"]="passive:4:paralysis",e["passive:5:fire"]="passive:5:fire",e["passive:5:water"]="passive:5:water",e["passive:5:earth"]="passive:5:earth",e["passive:5:thunder"]="passive:5:thunder",e["passive:5:light"]="passive:5:light",e["passive:5:dark"]="passive:5:dark",e["passive:5:unknown"]="passive:5:unknown",e["passive:8"]="passive:8",e["passive:9"]="passive:9",e["passive:10"]="passive:10",e["passive:11:atk"]="passive:11:atk",e["passive:11:def"]="passive:11:def",e["passive:11:rec"]="passive:11:rec",e["passive:11:crit"]="passive:11:crit",e["passive:12:bc"]="passive:12:bc",e["passive:12:hc"]="passive:12:hc",e["passive:12:item"]="passive:12:item",e["passive:12:zel"]="passive:12:zel",e["passive:12:karma"]="passive:12:karma",e["passive:13"]="passive:13",e["passive:14"]="passive:14",e["passive:15"]="passive:15",e["passive:16"]="passive:16",e["passive:17"]="passive:17",e["passive:19:bc"]="passive:19:bc",e["passive:19:hc"]="passive:19:hc",e["passive:19:item"]="passive:19:item",e["passive:19:zel"]="passive:19:zel",e["passive:19:karma"]="passive:19:karma",e["passive:20:poison"]="passive:20:poison",e["passive:20:weak"]="passive:20:weak",e["passive:20:sick"]="passive:20:sick",e["passive:20:injury"]="passive:20:injury",e["passive:20:curse"]="passive:20:curse",e["passive:20:paralysis"]="passive:20:paralysis",e["passive:20:atk down"]="passive:20:atk down",e["passive:20:def down"]="passive:20:def down",e["passive:20:rec down"]="passive:20:rec down",e["passive:20:unknown"]="passive:20:unknown",e["passive:21:atk"]="passive:21:atk",e["passive:21:def"]="passive:21:def",e["passive:21:rec"]="passive:21:rec",e["passive:21:crit"]="passive:21:crit",e["passive:23"]="passive:23",e["passive:24"]="passive:24",e["passive:25"]="passive:25",e["passive:26"]="passive:26",e["passive:27"]="passive:27",e["passive:28"]="passive:28",e["passive:29"]="passive:29",e["passive:30:atk"]="passive:30:atk",e["passive:30:def"]="passive:30:def",e["passive:30:rec"]="passive:30:rec",e["passive:30:crit"]="passive:30:crit",e["passive:31:damage"]="passive:31:damage",e["passive:31:bc"]="passive:31:bc",e["passive:31:hc"]="passive:31:hc",e["passive:31:item"]="passive:31:item",e["passive:31:zel"]="passive:31:zel",e["passive:31:karma"]="passive:31:karma",e["passive:32"]="passive:32",e["passive:33"]="passive:33",e["passive:34"]="passive:34",e.UNKNOWN_PROC_EFFECT_ID="UNKNOWN_PROC_EFFECT_ID",e.UNKNOWN_PROC_BUFF_PARAMS="UNKNOWN_PROC_BUFF_PARAMS",e["proc:1"]="proc:1",e["proc:2"]="proc:2",e["proc:3"]="proc:3",e["proc:4:flat"]="proc:4:flat",e["proc:4:percent"]="proc:4:percent",e["proc:5:atk"]="proc:5:atk",e["proc:5:def"]="proc:5:def",e["proc:5:rec"]="proc:5:rec",e["proc:5:crit"]="proc:5:crit",e["proc:6:bc"]="proc:6:bc",e["proc:6:hc"]="proc:6:hc",e["proc:6:item"]="proc:6:item",e["proc:7"]="proc:7",e["proc:8:flat"]="proc:8:flat",e["proc:8:percent"]="proc:8:percent",e["proc:9:atk"]="proc:9:atk",e["proc:9:def"]="proc:9:def",e["proc:9:rec"]="proc:9:rec",e["proc:9:unknown"]="proc:9:unknown",e["proc:10:poison"]="proc:10:poison",e["proc:10:weak"]="proc:10:weak",e["proc:10:sick"]="proc:10:sick",e["proc:10:injury"]="proc:10:injury",e["proc:10:curse"]="proc:10:curse",e["proc:10:paralysis"]="proc:10:paralysis",e["proc:10:atk down"]="proc:10:atk down",e["proc:10:def down"]="proc:10:def down",e["proc:10:rec down"]="proc:10:rec down",e["proc:10:unknown"]="proc:10:unknown",e["proc:11:poison"]="proc:11:poison",e["proc:11:weak"]="proc:11:weak",e["proc:11:sick"]="proc:11:sick",e["proc:11:injury"]="proc:11:injury",e["proc:11:curse"]="proc:11:curse",e["proc:11:paralysis"]="proc:11:paralysis",e["proc:11:atk down"]="proc:11:atk down",e["proc:11:def down"]="proc:11:def down",e["proc:11:rec down"]="proc:11:rec down",e["proc:11:unknown"]="proc:11:unknown",e["proc:12"]="proc:12",e["proc:13"]="proc:13",e["proc:14"]="proc:14",e["proc:16:fire"]="proc:16:fire",e["proc:16:water"]="proc:16:water",e["proc:16:earth"]="proc:16:earth",e["proc:16:thunder"]="proc:16:thunder",e["proc:16:light"]="proc:16:light",e["proc:16:dark"]="proc:16:dark",e["proc:16:all"]="proc:16:all",e["proc:16:unknown"]="proc:16:unknown",e["proc:17:poison"]="proc:17:poison",e["proc:17:weak"]="proc:17:weak",e["proc:17:sick"]="proc:17:sick",e["proc:17:injury"]="proc:17:injury",e["proc:17:curse"]="proc:17:curse",e["proc:17:paralysis"]="proc:17:paralysis",e["proc:18"]="proc:18",e["proc:19"]="proc:19",e["proc:20"]="proc:20",e["proc:22"]="proc:22",e["proc:23"]="proc:23",e["proc:24:atk"]="proc:24:atk",e["proc:24:def"]="proc:24:def",e["proc:24:rec"]="proc:24:rec",e["proc:26"]="proc:26",e["proc:27"]="proc:27",e["proc:28"]="proc:28",e["proc:29"]="proc:29",e["proc:30:fire"]="proc:30:fire",e["proc:30:water"]="proc:30:water",e["proc:30:earth"]="proc:30:earth",e["proc:30:thunder"]="proc:30:thunder",e["proc:30:light"]="proc:30:light",e["proc:30:dark"]="proc:30:dark",e["proc:30:unknown"]="proc:30:unknown",e["proc:31:flat"]="proc:31:flat",e["proc:31:percent"]="proc:31:percent",e["proc:32:fire"]="proc:32:fire",e["proc:32:water"]="proc:32:water",e["proc:32:earth"]="proc:32:earth",e["proc:32:thunder"]="proc:32:thunder",e["proc:32:light"]="proc:32:light",e["proc:32:dark"]="proc:32:dark",e["proc:32:unknown"]="proc:32:unknown",e["proc:33"]="proc:33",e["proc:34:flat"]="proc:34:flat",e["proc:34:percent"]="proc:34:percent"}(j||(j={}));const ae=Object.freeze(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({TURN_DURATION_MODIFICATION:{id:j.TURN_DURATION_MODIFICATION,name:"Passive Turn Duration Modification",stat:L.turnDurationModification,stackType:W.Passive,icons:e=>[e&&e.value&&e.value.duration&&e.value.duration<0?M.TURN_DURATION_DOWN:M.TURN_DURATION_UP]},NO_PARAMS_SPECIFIED:{id:j.NO_PARAMS_SPECIFIED,name:"No Parameters Specified",stackType:W.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PASSIVE_EFFECT_ID:{id:j.UNKNOWN_PASSIVE_EFFECT_ID,name:"Unknown Passive Effect",stackType:W.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PASSIVE_BUFF_PARAMS:{id:j.UNKNOWN_PASSIVE_BUFF_PARAMS,name:"Unknown Passive Buff Parameters",stackType:W.Unknown,icons:()=>[M.UNKNOWN]},"passive:1:hp":{id:j["passive:1:hp"],name:"Passive HP Boost",stat:L.hp,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPDOWN:M.BUFF_HPUP]},"passive:1:atk":{id:j["passive:1:atk"],name:"Passive Attack Boost",stat:L.atk,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:1:def":{id:j["passive:1:def"],name:"Passive Defense Boost",stat:L.def,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:1:rec":{id:j["passive:1:rec"],name:"Passive Recovery Boost",stat:L.rec,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:1:crit":{id:j["passive:1:crit"],name:"Passive Critical Hit Rate Boost",stat:L.crit,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]}},(()=>{const e=e=>a=>{let t="",s="UP";a&&(a.value&&a.value<0&&(s="DOWN"),a.conditions&&a.conditions.targetElements&&(t=a.conditions.targetElements[0])),"string"!=typeof t&&(t="");let i=`BUFF_${t.toUpperCase()}${e}${s}`;return t&&i in M||(i=`BUFF_ELEMENT${e}${s}`),[M[i]]};return{"passive:2:hp":{id:j["passive:2:hp"],name:"Passive Elemental HP Boost",stat:L.hp,stackType:W.Passive,icons:e("HP")},"passive:2:atk":{id:j["passive:2:atk"],name:"Passive Elemental Attack Boost",stat:L.atk,stackType:W.Passive,icons:e("ATK")},"passive:2:def":{id:j["passive:2:def"],name:"Passive Elemental Defense Boost",stat:L.def,stackType:W.Passive,icons:e("DEF")},"passive:2:rec":{id:j["passive:2:rec"],name:"Passive Elemental Recovery Boost",stat:L.rec,stackType:W.Passive,icons:e("REC")},"passive:2:crit":{id:j["passive:2:crit"],name:"Passive Elemental Critical Hit Rate Boost",stat:L.crit,stackType:W.Passive,icons:e("CRTRATE")}}})()),(()=>{const e=e=>a=>{let t="",s="UP";a&&(a.value&&a.value<0&&(s="DOWN"),a.conditions&&(t=a.conditions.targetUnitType||"")),"string"==typeof t&&t||(t="unknown");let i=`BUFF_${t.toUpperCase()}${e}${s}`;return t&&i in M||(i=`BUFF_UNITTYPE${e}${s}`),[M[i]]};return{"passive:3:hp":{id:j["passive:3:hp"],name:"Passive Type-Based HP Boost",stat:L.hp,stackType:W.Passive,icons:e("HP")},"passive:3:atk":{id:j["passive:3:atk"],name:"Passive Type-Based Attack Boost",stat:L.atk,stackType:W.Passive,icons:e("ATK")},"passive:3:def":{id:j["passive:3:def"],name:"Passive Type-Based Defense Boost",stat:L.def,stackType:W.Passive,icons:e("DEF")},"passive:3:rec":{id:j["passive:3:rec"],name:"Passive Type-Based Recovery Boost",stat:L.rec,stackType:W.Passive,icons:e("REC")},"passive:3:crit":{id:j["passive:3:crit"],name:"Passive Type-Based Critical Hit Rate Boost",stat:L.crit,stackType:W.Passive,icons:e("CRTRATE")}}})()),{"passive:4:poison":{id:j["passive:4:poison"],name:"Passive Poison Resist",stat:L.poisonResist,stackType:W.Passive,icons:()=>[M.BUFF_POISONBLK]},"passive:4:weak":{id:j["passive:4:weak"],name:"Passive Weak Resist",stat:L.weakResist,stackType:W.Passive,icons:()=>[M.BUFF_WEAKBLK]},"passive:4:sick":{id:j["passive:4:sick"],name:"Passive Sick Resist",stat:L.sickResist,stackType:W.Passive,icons:()=>[M.BUFF_SICKBLK]},"passive:4:injury":{id:j["passive:4:injury"],name:"Passive Injury Resist",stat:L.injuryResist,stackType:W.Passive,icons:()=>[M.BUFF_INJURYBLK]},"passive:4:curse":{id:j["passive:4:curse"],name:"Passive Curse Resist",stat:L.curseResist,stackType:W.Passive,icons:()=>[M.BUFF_CURSEBLK]},"passive:4:paralysis":{id:j["passive:4:paralysis"],name:"Passive Paralysis Resist",stat:L.poisonResist,stackType:W.Passive,icons:()=>[M.BUFF_PARALYSISBLK]},"passive:5:fire":{id:j["passive:5:fire"],name:"Passive Fire Damage Reduction",stat:L.fireMitigation,stackType:W.Passive,icons:()=>[M.BUFF_FIREDMGDOWN]},"passive:5:water":{id:j["passive:5:water"],name:"Passive Water Damage Reduction",stat:L.waterMitigation,stackType:W.Passive,icons:()=>[M.BUFF_WATERDMGDOWN]},"passive:5:earth":{id:j["passive:5:earth"],name:"Passive Earth Damage Reduction",stat:L.earthMitigation,stackType:W.Passive,icons:()=>[M.BUFF_EARTHDMGDOWN]},"passive:5:thunder":{id:j["passive:5:thunder"],name:"Passive Thunder Damage Reduction",stat:L.thunderMitigation,stackType:W.Passive,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"passive:5:light":{id:j["passive:5:light"],name:"Passive Light Damage Reduction",stat:L.lightMitigation,stackType:W.Passive,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"passive:5:dark":{id:j["passive:5:dark"],name:"Passive Dark Damage Reduction",stat:L.darkMitigation,stackType:W.Passive,icons:()=>[M.BUFF_DARKDMGDOWN]},"passive:5:unknown":{id:j["passive:5:unknown"],name:"Passive Elemental Damage Reduction (Unspecified Element)",stat:L.mitigation,stackType:W.Passive,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"passive:8":{id:j["passive:8"],name:"Passive Damage Reduction",stat:L.mitigation,stackType:W.Passive,icons:()=>[M.BUFF_DAMAGECUT]},"passive:9":{id:j["passive:9"],name:"Passive Gradual BB Gauge Fill",stat:L.bbGauge,stackType:W.Passive,icons:()=>[M.BUFF_BBREC]},"passive:10":{id:j["passive:10"],name:"Passive HC Efficacy",stat:L.hcEfficacy,stackType:W.Passive,icons:()=>[M.BUFF_HCREC]},"passive:11:atk":{id:j["passive:11:atk"],name:"Passive HP-Conditional Attack Boost",stat:L.atk,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHATKDOWN:M.BUFF_HPTHRESHATKUP]},"passive:11:def":{id:j["passive:11:def"],name:"Passive HP-Conditional Defense Boost",stat:L.def,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHDEFDOWN:M.BUFF_HPTHRESHDEFUP]},"passive:11:rec":{id:j["passive:11:rec"],name:"Passive HP-Conditional Recovery Boost",stat:L.rec,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHRECDOWN:M.BUFF_HPTHRESHRECUP]},"passive:11:crit":{id:j["passive:11:crit"],name:"Passive HP-Conditional Critical Hit Rate Boost",stat:L.crit,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHCRTRATEDOWN:M.BUFF_HPTHRESHCRTRATEUP]},"passive:12:bc":{id:j["passive:12:bc"],name:"Passive HP-Conditional Battle Crystal Drop Rate Boost",stat:L.bcDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHBCDOWN:M.BUFF_HPTHRESHBCDROP]},"passive:12:hc":{id:j["passive:12:hc"],name:"Passive HP-Conditional Heart Crystal Drop Rate Boost",stat:L.hcDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHHCDOWN:M.BUFF_HPTHRESHHCDROP]},"passive:12:item":{id:j["passive:12:item"],name:"Passive HP-Conditional Item Drop Rate Boost",stat:L.itemDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHITEMDOWN:M.BUFF_HPTHRESHITEMDROP]},"passive:12:zel":{id:j["passive:12:zel"],name:"Passive HP-Conditional Zel Drop Rate Boost",stat:L.zelDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHZELDOWN:M.BUFF_HPTHRESHZELDROP]},"passive:12:karma":{id:j["passive:12:karma"],name:"Passive HP-Conditional Karma Drop Rate Boost",stat:L.karmaDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHKARMADOWN:M.BUFF_HPTHRESHKARMADROP]},"passive:13":{id:j["passive:13"],name:"Passive BB Gauge Fill on Enemy Defeat",stat:L.bbGauge,stackType:W.Passive,icons:()=>[M.BUFF_BBREC]},"passive:14":{id:j["passive:14"],name:"Passive Damage Reduction (Chance)",stat:L.mitigation,stackType:W.Passive,icons:()=>[M.BUFF_DAMAGECUT]},"passive:15":{id:j["passive:15"],name:"Passive Heal on Enemy Defeat",stat:L.hpRecovery,stackType:W.Passive,icons:()=>[M.BUFF_HPREC]},"passive:16":{id:j["passive:16"],name:"Passive Heal on Battle Win",stat:L.hpRecovery,stackType:W.Passive,icons:()=>[M.BUFF_HPREC]},"passive:17":{id:j["passive:17"],name:"HP Absorption",stat:L.hpRecovery,stackType:W.Passive,icons:()=>[M.BUFF_HPABS]},"passive:19:bc":{id:j["passive:19:bc"],name:"Passive Battle Crystal Drop Rate Boost",stat:L.bcDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_BCDROP]},"passive:19:hc":{id:j["passive:19:hc"],name:"Passive Heart Crystal Drop Rate Boost",stat:L.hcDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_HCDROP]},"passive:19:item":{id:j["passive:19:item"],name:"Passive Item Drop Rate Boost",stat:L.itemDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_ITEMDROP]},"passive:19:zel":{id:j["passive:19:zel"],name:"Passive Zel Drop Rate Boost",stat:L.zelDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ZELDOWN:M.BUFF_ZELDROP]},"passive:19:karma":{id:j["passive:19:karma"],name:"Passive Karma Drop Rate Boost",stat:L.karmaDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_KARMADOWN:M.BUFF_KARMADROP]},"passive:20:poison":{id:j["passive:20:poison"],name:"Passive Poison Infliction",stat:L.poisonInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDPOISON]},"passive:20:weak":{id:j["passive:20:weak"],name:"Passive Weak Infliction",stat:L.weakInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDWEAK]},"passive:20:sick":{id:j["passive:20:sick"],name:"Passive Sick Infliction",stat:L.sickInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDSICK]},"passive:20:injury":{id:j["passive:20:injury"],name:"Passive Injury Infliction",stat:L.injuryInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDINJURY]},"passive:20:curse":{id:j["passive:20:curse"],name:"Passive Curse Infliction",stat:L.curseInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDCURSE]},"passive:20:paralysis":{id:j["passive:20:paralysis"],name:"Passive Paralysis Infliction",stat:L.poisonInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDPARA]},"passive:20:atk down":{id:j["passive:20:atk down"],name:"Passive Attack Reduction Infliction",stat:L.atkDownInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDATKDOWN]},"passive:20:def down":{id:j["passive:20:def down"],name:"Passive Defense Reduction Infliction",stat:L.defDownInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDDEFDOWN]},"passive:20:rec down":{id:j["passive:20:rec down"],name:"Passive Recovery Reduction Infliction",stat:L.recDownInflict,stackType:W.Passive,icons:()=>[M.BUFF_ADDRECDOWN]},"passive:20:unknown":{id:j["passive:20:unknown"],name:"Passive Unknown Ailment Infliction",stackType:W.Unknown,icons:()=>[M.BUFF_ADDAILMENT]},"passive:21:atk":{id:j["passive:21:atk"],name:"Attack Boost for X Turns",stat:L.atk,stackType:W.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:21:def":{id:j["passive:21:def"],name:"Defense Boost for X Turns",stat:L.def,stackType:W.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:21:rec":{id:j["passive:21:rec"],name:"Recovery Boost for X Turns",stat:L.rec,stackType:W.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:21:crit":{id:j["passive:21:crit"],name:"Critical Hit Rate Boost for X Turns",stat:L.crit,stackType:W.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]},"passive:23":{id:j["passive:23"],name:"Passive BC Fill on Battle Win",stat:L.bbGauge,stackType:W.Passive,icons:()=>[M.BUFF_BBREC]},"passive:24":{id:j["passive:24"],name:"Passive Heal when Attacked",stat:L.hpRecovery,stackType:W.Passive,icons:()=>[M.BUFF_BEENATK_HPREC]},"passive:25":{id:j["passive:25"],name:"Passive BC Fill when Attacked",stat:L.bbGauge,stackType:W.Passive,icons:()=>[M.BUFF_DAMAGEBB]},"passive:26":{id:j["passive:26"],name:"Passive Damage Counter",stat:L.damageReflect,stackType:W.Passive,icons:()=>[M.BUFF_COUNTERDAMAGE]},"passive:27":{id:j["passive:27"],name:"Passive Target Chance Modification",stat:L.targetingModification,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_REPENEATT:M.BUFF_GETENEATT]},"passive:28":{id:j["passive:28"],name:"Passive HP-Conditional Target Chance Modification",stat:L.targetingModification,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHREPENEATT:M.BUFF_HPTHRESHGETENEATT]},"passive:29":{id:j["passive:29"],name:"Passive Defense Ignore (Chance)",stat:L.defenseIgnore,stackType:W.Passive,icons:()=>[M.BUFF_IGNOREDEF]},"passive:30:atk":{id:j["passive:30:atk"],name:"Passive BB Gauge Conditional Attack Boost",stat:L.atk,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHATKDOWN:M.BUFF_BBGAUGETHRESHATKUP]},"passive:30:def":{id:j["passive:30:def"],name:"Passive BB Gauge Conditional Defense Boost",stat:L.def,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHDEFDOWN:M.BUFF_BBGAUGETHRESHDEFUP]},"passive:30:rec":{id:j["passive:30:rec"],name:"Passive BB Gauge Conditional Recovery Boost",stat:L.rec,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHRECDOWN:M.BUFF_BBGAUGETHRESHRECUP]},"passive:30:crit":{id:j["passive:30:crit"],name:"Passive BB Gauge Conditional Critical Hit Rate Boost",stat:L.crit,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHCRTRATEDOWN:M.BUFF_BBGAUGETHRESHCRTRATEUP]},"passive:31:damage":{id:j["passive:31:damage"],name:"Passive Spark Damage Boost",stat:L.sparkDamage,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_SPARKDOWN:M.BUFF_SPARKUP]},"passive:31:bc":{id:j["passive:31:bc"],name:"Passive Battle Crystal Drop Rate Boost during Spark",stat:L.bcDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_SPARKBC]},"passive:31:hc":{id:j["passive:31:hc"],name:"Passive Heart Crystal Drop Rate Boost during Spark",stat:L.hcDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_SPARKHC]},"passive:31:item":{id:j["passive:31:item"],name:"Passive Item Drop Rate Boost during Spark",stat:L.itemDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_SPARKITEM]},"passive:31:zel":{id:j["passive:31:zel"],name:"Passive Zel Drop Rate Boost during Spark",stat:L.zelDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ZELDOWN:M.BUFF_SPARKZEL]},"passive:31:karma":{id:j["passive:31:karma"],name:"Passive Karma Drop Rate Boost during Spark",stat:L.karmaDropRate,stackType:W.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_KARMADOWN:M.BUFF_SPARKKARMA]},"passive:32":{id:j["passive:32"],name:"Passive BC Efficacy",stat:L.bcEfficacy,stackType:W.Passive,icons:()=>[M.BUFF_BBFILL]},"passive:33":{id:j["passive:33"],name:"Passive Gradual Heal",stat:L.hpRecovery,stackType:W.Passive,icons:()=>[M.BUFF_HPREC]},"passive:34":{id:j["passive:34"],name:"Passive Critical Damage Boost",stat:L.criticalDamage,stackType:W.Passive,icons:()=>[M.BUFF_CRTUP]},UNKNOWN_PROC_EFFECT_ID:{id:j.UNKNOWN_PROC_EFFECT_ID,name:"Unknown Proc Effect",stackType:W.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PROC_BUFF_PARAMS:{id:j.UNKNOWN_PROC_BUFF_PARAMS,name:"Unknown Proc Buff Parameters",stackType:W.Unknown,icons:()=>[M.UNKNOWN]},"proc:1":{id:j["proc:1"],name:"Regular Damage",stackType:W.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST:M.ATK_AOE]},"proc:2":{id:j["proc:2"],name:"Burst Heal",stat:L.hpRecovery,stackType:W.Burst,icons:()=>[M.BUFF_HPREC]},"proc:3":{id:j["proc:3"],name:"Active Gradual Heal",stat:L.hpRecovery,stackType:W.Active,icons:()=>[M.BUFF_HPREC]},"proc:4:flat":{id:j["proc:4:flat"],name:"Burst BB Gauge Fill (Flat Amount)",stat:L.bbGauge,stackType:W.Burst,icons:()=>[M.BUFF_BBREC]},"proc:4:percent":{id:j["proc:4:percent"],name:"Burst BB Gauge Fill (Percentage)",stat:L.bbGauge,stackType:W.Burst,icons:()=>[M.BUFF_BBREC]}}),(()=>{const e=e=>a=>{let t="",s=!1,i="UP";a&&(a.value&&a.value<0&&(i="DOWN"),a.conditions&&a.conditions.targetElements&&(t=a.conditions.targetElements[0],s=!0)),"string"!=typeof t&&(t="");let n=`BUFF_${t.toUpperCase()}${e}${i}`;return t&&n in M||(n=`BUFF_${s?"ELEMENT":""}${e}${i}`),[M[n]]};return{"proc:5:atk":{id:j["proc:5:atk"],name:"Active Regular/Elemental Attack Boost",stat:L.atk,stackType:W.Active,icons:e("ATK")},"proc:5:def":{id:j["proc:5:def"],name:"Active Regular/Elemental Defense Boost",stat:L.def,stackType:W.Active,icons:e("DEF")},"proc:5:rec":{id:j["proc:5:rec"],name:"Active Regular/Elemental Recovery Boost",stat:L.rec,stackType:W.Active,icons:e("REC")},"proc:5:crit":{id:j["proc:5:crit"],name:"Active Regular/Elemental Critical Hit Rate Boost",stat:L.crit,stackType:W.Active,icons:e("CRTRATE")}}})()),{"proc:6:bc":{id:j["proc:6:bc"],name:"Active Battle Crystal Drop Rate Boost",stat:L.bcDropRate,stackType:W.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_BCDROP]},"proc:6:hc":{id:j["proc:6:hc"],name:"Active Heart Crystal Drop Rate Boost",stat:L.hcDropRate,stackType:W.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_HCDROP]},"proc:6:item":{id:j["proc:6:item"],name:"Active Item Drop Rate Boost",stat:L.itemDropRate,stackType:W.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_ITEMDROP]},"proc:7":{id:j["proc:7"],name:"Guaranteed KO Resistance",stat:L.koResistance,stackType:W.Singleton,icons:()=>[M.BUFF_KOBLK]},"proc:8:flat":{id:j["proc:8:flat"],name:"Max HP Boost (Flat Amount)",stat:L.hp,stackType:W.Singleton,icons:()=>[M.BUFF_HPUP]},"proc:8:percent":{id:j["proc:8:percent"],name:"Max HP Boost (Percentage)",stat:L.hp,stackType:W.Singleton,icons:()=>[M.BUFF_HPUP]}}),(()=>{const e=e=>a=>{let t="",s=!1,i="DOWN";a&&(a.value&&a.value>0&&(i="UP"),a.conditions&&a.conditions.targetElements&&(t=a.conditions.targetElements[0],s=!0)),"string"!=typeof t&&(t="");let n=`BUFF_${t.toUpperCase()}${e}${i}`;return t&&n in M||(n=`BUFF_${s?"ELEMENT":""}${e}${i}`),[M[n]]};return{"proc:9:atk":{id:j["proc:9:atk"],name:"Active Regular/Elemental Attack Reduction",stat:L.atk,stackType:W.Active,icons:e("ATK")},"proc:9:def":{id:j["proc:9:def"],name:"Active Regular/Elemental Defense Reduction",stat:L.def,stackType:W.Active,icons:e("DEF")},"proc:9:rec":{id:j["proc:9:rec"],name:"Active Regular/Elemental Recovery Reduction",stat:L.rec,stackType:W.Active,icons:e("REC")},"proc:9:unknown":{id:j["proc:9:unknown"],name:"Active Regular/Elemental Unknown Stat Reduction",stackType:W.Active,icons:()=>[M.UNKNOWN]}}})()),{"proc:10:poison":{id:j["proc:10:poison"],name:"Poison Cleanse",stat:L.poisonResist,stackType:W.Burst,icons:()=>[M.BUFF_POISONBLK]},"proc:10:weak":{id:j["proc:10:weak"],name:"Weak Cleanse",stat:L.weakResist,stackType:W.Burst,icons:()=>[M.BUFF_WEAKBLK]},"proc:10:sick":{id:j["proc:10:sick"],name:"Sick Cleanse",stat:L.sickResist,stackType:W.Burst,icons:()=>[M.BUFF_SICKBLK]},"proc:10:injury":{id:j["proc:10:injury"],name:"Injury Cleanse",stat:L.injuryResist,stackType:W.Burst,icons:()=>[M.BUFF_INJURYBLK]},"proc:10:curse":{id:j["proc:10:curse"],name:"Curse Cleanse",stat:L.curseResist,stackType:W.Burst,icons:()=>[M.BUFF_CURSEBLK]},"proc:10:paralysis":{id:j["proc:10:paralysis"],name:"Paralysis Cleanse",stat:L.poisonResist,stackType:W.Burst,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:10:atk down":{id:j["proc:10:atk down"],name:"Attack Reduction Cleanse",stat:L.atkDownResist,stackType:W.Burst,icons:()=>[M.BUFF_ATKDOWNBLK]},"proc:10:def down":{id:j["proc:10:def down"],name:"Defense Reduction Cleanse",stat:L.defDownResist,stackType:W.Burst,icons:()=>[M.BUFF_DEFDOWNBLK]},"proc:10:rec down":{id:j["proc:10:rec down"],name:"Recovery Reduction Cleanse",stat:L.recDownResist,stackType:W.Burst,icons:()=>[M.BUFF_RECDOWNBLK]},"proc:10:unknown":{id:j["proc:10:unknown"],name:"Unknown Ailment Cleanse",stackType:W.Unknown,icons:()=>[M.BUFF_AILMENTBLK]},"proc:11:poison":{id:j["proc:11:poison"],name:"Poison Infliction",stat:L.poisonInflict,stackType:W.Burst,icons:()=>[M.DEBUFF_POISON]},"proc:11:weak":{id:j["proc:11:weak"],name:"Weak Infliction",stat:L.weakInflict,stackType:W.Burst,icons:()=>[M.DEBUFF_WEAK]},"proc:11:sick":{id:j["proc:11:sick"],name:"Sick Infliction",stat:L.sickInflict,stackType:W.Burst,icons:()=>[M.DEBUFF_SICK]},"proc:11:injury":{id:j["proc:11:injury"],name:"Injury Infliction",stat:L.injuryInflict,stackType:W.Burst,icons:()=>[M.DEBUFF_INJURY]},"proc:11:curse":{id:j["proc:11:curse"],name:"Curse Infliction",stat:L.curseInflict,stackType:W.Burst,icons:()=>[M.DEBUFF_CURSE]},"proc:11:paralysis":{id:j["proc:11:paralysis"],name:"Paralysis Infliction",stat:L.poisonInflict,stackType:W.Burst,icons:()=>[M.DEBUFF_PARALYSIS]},"proc:11:atk down":{id:j["proc:11:atk down"],name:"Attack Reduction Infliction",stat:L.atkDownInflict,stackType:W.Burst,icons:()=>[M.BUFF_ATKDOWN]},"proc:11:def down":{id:j["proc:11:def down"],name:"Defense Reduction Infliction",stat:L.defDownInflict,stackType:W.Burst,icons:()=>[M.BUFF_DEFDOWN]},"proc:11:rec down":{id:j["proc:11:rec down"],name:"Recovery Reduction Infliction",stat:L.recDownInflict,stackType:W.Burst,icons:()=>[M.BUFF_RECDOWN]},"proc:11:unknown":{id:j["proc:11:unknown"],name:"Unknown Ailment Infliction",stackType:W.Unknown,icons:()=>[M.DEBUFF_AILMENT]},"proc:12":{id:j["proc:12"],name:"Instant Revive (Guaranteed)",stackType:W.Burst,icons:()=>[M.BUFF_KOBLK]},"proc:13":{id:j["proc:13"],name:"Random Target Damage",stackType:W.Attack,icons:()=>[M.ATK_RT]},"proc:14":{id:j["proc:14"],name:"Lifesteal Damage",stackType:W.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_HPREC:M.ATK_AOE_HPREC]},"proc:16:fire":{id:j["proc:16:fire"],name:"Active Fire Damage Reduction",stat:L.fireMitigation,stackType:W.Active,icons:()=>[M.BUFF_FIREDMGDOWN]},"proc:16:water":{id:j["proc:16:water"],name:"Active Water Damage Reduction",stat:L.waterMitigation,stackType:W.Active,icons:()=>[M.BUFF_WATERDMGDOWN]},"proc:16:earth":{id:j["proc:16:earth"],name:"Active Earth Damage Reduction",stat:L.earthMitigation,stackType:W.Active,icons:()=>[M.BUFF_EARTHDMGDOWN]},"proc:16:thunder":{id:j["proc:16:thunder"],name:"Active Thunder Damage Reduction",stat:L.thunderMitigation,stackType:W.Active,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"proc:16:light":{id:j["proc:16:light"],name:"Active Light Damage Reduction",stat:L.lightMitigation,stackType:W.Active,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"proc:16:dark":{id:j["proc:16:dark"],name:"Active Dark Damage Reduction",stat:L.darkMitigation,stackType:W.Active,icons:()=>[M.BUFF_DARKDMGDOWN]},"proc:16:all":{id:j["proc:16:all"],name:"Active Elemental Damage Reduction (All Elements)",stat:L.mitigation,stackType:W.Active,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"proc:16:unknown":{id:j["proc:16:unknown"],name:"Active Elemental Damage Reduction (Unspecified Element)",stat:L.mitigation,stackType:W.Active,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"proc:17:poison":{id:j["proc:17:poison"],name:"Active Poison Resist",stat:L.poisonResist,stackType:W.Active,icons:()=>[M.BUFF_POISONBLK]},"proc:17:weak":{id:j["proc:17:weak"],name:"Active Weak Resist",stat:L.weakResist,stackType:W.Active,icons:()=>[M.BUFF_WEAKBLK]},"proc:17:sick":{id:j["proc:17:sick"],name:"Active Sick Resist",stat:L.sickResist,stackType:W.Active,icons:()=>[M.BUFF_SICKBLK]},"proc:17:injury":{id:j["proc:17:injury"],name:"Active Injury Resist",stat:L.injuryResist,stackType:W.Active,icons:()=>[M.BUFF_INJURYBLK]},"proc:17:curse":{id:j["proc:17:curse"],name:"Active Curse Resist",stat:L.curseResist,stackType:W.Active,icons:()=>[M.BUFF_CURSEBLK]},"proc:17:paralysis":{id:j["proc:17:paralysis"],name:"Active Paralysis Resist",stat:L.poisonResist,stackType:W.Active,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:18":{id:j["proc:18"],name:"Active Damage Reduction",stat:L.mitigation,stackType:W.Active,icons:()=>[M.BUFF_DAMAGECUT]},"proc:19":{id:j["proc:19"],name:"Active Gradual BB Gauge Fill",stat:L.bbGauge,stackType:W.Active,icons:()=>[M.BUFF_BBREC]},"proc:20":{id:j["proc:20"],name:"Active BC Fill when attacked",stat:L.bbGauge,stackType:W.Active,icons:()=>[M.BUFF_DAMAGEBB]},"proc:22":{id:j["proc:22"],name:"Active Defense Ignore",stat:L.defenseIgnore,stackType:W.Active,icons:()=>[M.BUFF_IGNOREDEF]},"proc:23":{id:j["proc:23"],name:"Active Spark Damage Boost",stat:L.sparkDamage,stackType:W.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_SPARKDOWN:M.BUFF_SPARKUP]},"proc:24:atk":{id:j["proc:24:atk"],name:"Active Converted Attack Boost",stat:L.atk,stackType:W.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTATKDOWN:M.BUFF_CONVERTATKUP]},"proc:24:def":{id:j["proc:24:def"],name:"Active Converted Defense Boost",stat:L.def,stackType:W.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTDEFDOWN:M.BUFF_CONVERTDEFUP]},"proc:24:rec":{id:j["proc:24:rec"],name:"Active Converted Recovery Boost",stat:L.rec,stackType:W.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTRECDOWN:M.BUFF_CONVERTRECUP]},"proc:26":{id:j["proc:26"],name:"Active Hit Count Boost",stat:L.hitCountModification,stackType:W.Active,icons:()=>[M.BUFF_HITUP]},"proc:27":{id:j["proc:27"],name:"Proportional Damage",stackType:W.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_PROPORTIONAL:M.ATK_AOE_PROPORTIONAL]},"proc:28":{id:j["proc:28"],name:"Fixed Damage",stackType:W.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_FIXED:M.ATK_AOE_FIXED]},"proc:29":{id:j["proc:29"],name:"Multi-Element Damage",stackType:W.Attack,icons:e=>[e&&e.targetArea===f.Single?M.ATK_ST_MULTIELEMENT:M.ATK_AOE_MULTIELEMENT]},"proc:30:fire":{id:j["proc:30:fire"],name:"Active Added Element to Attack (Fire)",stat:L.elementModification,stackType:W.Active,icons:()=>[M.BUFF_ADDFIRE]},"proc:30:water":{id:j["proc:30:water"],name:"Active Added Element to Attack (Water)",stat:L.elementModification,stackType:W.Active,icons:()=>[M.BUFF_ADDWATER]},"proc:30:earth":{id:j["proc:30:earth"],name:"Active Added Element to Attack (Earth)",stat:L.elementModification,stackType:W.Active,icons:()=>[M.BUFF_ADDEARTH]},"proc:30:thunder":{id:j["proc:30:thunder"],name:"Active Added Element to Attack (Thunder)",stat:L.elementModification,stackType:W.Active,icons:()=>[M.BUFF_ADDTHUNDER]},"proc:30:light":{id:j["proc:30:light"],name:"Active Added Element to Attack (Light)",stat:L.elementModification,stackType:W.Active,icons:()=>[M.BUFF_ADDLIGHT]},"proc:30:dark":{id:j["proc:30:dark"],name:"Active Added Element to Attack (Dark)",stat:L.elementModification,stackType:W.Active,icons:()=>[M.BUFF_ADDDARK]},"proc:30:unknown":{id:j["proc:30:unknown"],name:"Active Added Element to Attack (Unspecified Element)",stat:L.elementModification,stackType:W.Active,icons:()=>[M.BUFF_ADDELEMENT]},"proc:31:flat":{id:j["proc:31:flat"],name:"Burst BB Gauge Fill (Flat Amount)",stat:L.bbGauge,stackType:W.Burst,icons:()=>[M.BUFF_BBREC]},"proc:31:percent":{id:j["proc:31:percent"],name:"Burst BB Gauge Fill (Percentage)",stat:L.bbGauge,stackType:W.Burst,icons:()=>[M.BUFF_BBREC]},"proc:32:fire":{id:j["proc:32:fire"],name:"Element Shift (Fire)",stat:L.elementModification,stackType:W.Singleton,icons:()=>[M.BUFF_SHIFTFIRE]},"proc:32:water":{id:j["proc:32:water"],name:"Element Shift (Water)",stat:L.elementModification,stackType:W.Singleton,icons:()=>[M.BUFF_SHIFTWATER]},"proc:32:earth":{id:j["proc:32:earth"],name:"Element Shift (Earth)",stat:L.elementModification,stackType:W.Singleton,icons:()=>[M.BUFF_SHIFTEARTH]},"proc:32:thunder":{id:j["proc:32:thunder"],name:"Element Shift (Thunder)",stat:L.elementModification,stackType:W.Singleton,icons:()=>[M.BUFF_SHIFTTHUNDER]},"proc:32:light":{id:j["proc:32:light"],name:"Element Shift (Light)",stat:L.elementModification,stackType:W.Singleton,icons:()=>[M.BUFF_SHIFTLIGHT]},"proc:32:dark":{id:j["proc:32:dark"],name:"Element Shift (Dark)",stat:L.elementModification,stackType:W.Singleton,icons:()=>[M.BUFF_SHIFTDARK]},"proc:32:unknown":{id:j["proc:32:unknown"],name:"Element Shift (Unspecified Element)",stat:L.elementModification,stackType:W.Singleton,icons:()=>[M.BUFF_SHIFTELEMENT]},"proc:33":{id:j["proc:33"],name:"Buff Removal",stat:L.buffStabilityModification,stackType:W.Burst,icons:()=>[M.BUFF_REMOVEBUFF]},"proc:34:flat":{id:j["proc:34:flat"],name:"Burst BB Gauge Drain (Flat Amount)",stat:L.bbGauge,stackType:W.Burst,icons:()=>[M.BUFF_BBFILLDOWN]},"proc:34:percent":{id:j["proc:34:percent"],name:"Burst BB Gauge Drain (Percentage)",stat:L.bbGauge,stackType:W.Burst,icons:()=>[M.BUFF_BBFILLDOWN]}}));var te=Object.freeze({__proto__:null,convertProcEffectToBuffs:function(e,a){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!a||"object"!=typeof a)throw new TypeError("context parameter should be an object");const i=b(e)&&t(e),n=i&&Q(a.reloadMapping).get(i);return"function"==typeof n?n(e,a):function(e,a){const i=b(e)&&t(e)||s.Unknown;return[{id:j.UNKNOWN_PROC_EFFECT_ID,originalId:i,effectDelay:e["effect delay time(ms)/frame"],targetType:e["target type"],targetArea:e["target area"],sources:x(a)}]}(e,a)},convertPassiveEffectToBuffs:function(e,a){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!a||"object"!=typeof a)throw new TypeError("context parameter should be an object");const s=C(e)&&t(e),n=s&&ee(a.reloadMapping).get(s);return"function"==typeof n?n(e,a):function(e,a){const s=C(e)&&t(e)||i.Unknown;return[{id:j.UNKNOWN_PASSIVE_EFFECT_ID,originalId:s,sources:x(a)}]}(e,a)},get BuffSource(){return K},get BuffStackType(){return W},BUFF_METADATA:ae,getMetadataForBuff:function(e,a=ae){return a&&"object"==typeof a&&Object.hasOwnProperty.call(a,e)?a[e]:void 0}}),se=Object.freeze({__proto__:null,constants:o,parsers:te,getMetadataForProc:F,getMetadataForPassive:h,isAttackingProcId:p,getNameForProc:O,getNameForPassive:H,isProcEffect:b,isPassiveEffect:C,combineEffectsAndDamageFrames:function(e,a){let t=[];return Array.isArray(e)&&e.length>0&&Array.isArray(a)&&e.length===a.length&&(t=e.map((e,t)=>{const s=a[t];return{delay:e["effect delay time(ms)/frame"],effect:e,frames:s,id:""+(e["proc id"]||e["unknown proc id"]),targetArea:e["random attack"]?f.Random:e["target area"],targetType:e["target type"]}})),t},getEffectId:t,getEffectName:function(e,a={}){let s="";const i=t(e);return C(e)?s=H(i,a&&a.passive):b(e)&&(s=O(i,a&&a.proc)),s},get ProcBuffType(){return n},PASSIVE_METADATA:c,PROC_METADATA:r});var ie=Object.freeze({__proto__:null,getEffectsForExtraSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var ne=Object.freeze({__proto__:null,getEffectsForItem:function(e){let a=[];if(e&&e.effect)if(Array.isArray(e.effect))a=e.effect;else if(Array.isArray(e.effect.effect)){const{effect:t,target_area:s,target_type:i}=e.effect;a=t.map(e=>{const a=Object.assign({},e);return a["target area"]=s,a["target type"]=i,a})}return a},getItemImageUrl:function(e,a){return`${e||""}/item/${a||""}`}});var oe=Object.freeze({__proto__:null,getEffectsForLeaderSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var ce=Object.freeze({__proto__:null,getUnitImageFileNames:function(e,a=""){const t=`${e||""}${a||""}.png`;return{spritesheet:"unit_anime_"+t,battleAvatar:"unit_ills_battle_"+t,guideAvatar:"unit_ills_thum_"+t,fullIllustration:"unit_ills_full_"+t}},getUnitImageUrl:function(e,a){return`${e||""}/unit/img/${a||""}`}});const re="A".charCodeAt(0),Fe="a".charCodeAt(0),pe="0".charCodeAt(0);function le(e){return"string"==typeof e&&e.split("@")[1]||e}var ue=Object.freeze({__proto__:null,getEffectsForSpEnhancement:function(e){const a=[];if(e&&e.skill&&Array.isArray(e.skill.effects)){e.skill.effects.forEach(e=>{Object.keys(e).forEach(t=>{const s=e[t],i=Object.assign(Object.assign({},s),{sp_type:t});a.push(i)})})}return a},getSpCategoryName:function(e){let a;switch(+e){case 1:a=R["Parameter Boost"];break;case 2:a=R.Spark;break;case 3:a=R["Critical Hits"];break;case 4:a=R["Attack Boost"];break;case 5:a=R["BB Gauge"];break;case 6:a=R["HP Recovery"];break;case 7:a=R.Drops;break;case 8:a=R["Ailment Resistance"];break;case 9:a=R["Ailment Infliction"];break;case 10:a=R["Damage Reduction"];break;case 11:a=R.Special;break;default:a=R.Unknown}return a},spIndexToCode:function(e){let a="",t=-1;return Number.isInteger(e)&&(e>=0&&e<=25?t=e+re:e>=26&&e<=51?t=e-26+Fe:e>=52&&e<=61&&(t=e-52+pe)),-1!==t&&(a=String.fromCharCode(t)),a},spCodeToIndex:function(e){let a=-1,t=-1;return e&&"string"==typeof e&&1===e.length&&(e>="A"&&e<="Z"?t=re:e>="a"&&e<="z"?t=Fe-26:e>="0"&&e<="9"&&(t=pe-52)),-1!==t&&(a=e.charCodeAt(0)-t),a},getSpEntryId:le,getSpEntryWithId:function(e,a){const t=le(e);return e&&Array.isArray(a)&&a.find(e=>le(e&&e.id)===t)||void 0},getAllDependenciesForSpEntry:function e(a,t,s=new Set){let i=[];if(a&&a.dependency&&Array.isArray(t)&&t.length>0){const n=le(a.dependency),o=t.find(e=>le(e&&e.id)===n);if(o&&!s.has(o)){s.add(o);const a=e(o,t,s);i=[o].concat(a)}}return i},getAllEntriesThatDependOnSpEntry:function e(a,t,s=new Set){let i=[];if(a&&a.id&&Array.isArray(t)&&t.length>0){const n=a.id;i=t.filter(e=>e.dependency&&e.dependency.includes(n)&&!s.has(e)),i.forEach(a=>{s.add(a);const n=e(a,t,s);i=i.concat(n)})}return i}});return e.buffs=se,e.bursts=k,e.datamineTypes=G,e.extraSkills=ie,e.items=ne,e.leaderSkills=oe,e.spEnhancements=ue,e.units=ce,e.version="0.7.0",e}({});
//# sourceMappingURL=index.browser.min.js.map
