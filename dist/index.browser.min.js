"use strict";var bfmtUtilities=function(e){function a(e,a){const t=e&&Array.isArray(e.levels)?e.levels:[];let i;return i=null===a||isNaN(a)?t.length-1:+a-1,t[i]}function t(e){let a="";return e&&(a=e["proc id"]||e["unknown proc id"]||e["passive id"]||e["unknown passive id"]||""),a}var i,s,n;!function(e){e.BurstHeal="2",e.Unknown="UNKNOWN_PROC_EFFECT_ID"}(i||(i={})),function(e){e.TriggeredEffect="66",e.Unknown="UNKNOWN_PASSIVE_EFFECT_ID"}(s||(s={})),function(e){e.Unknown="UNKNOWN_CONDITIONAL_EFFECT_ID"}(n||(n={}));var c,o=Object.freeze({__proto__:null,get KNOWN_PROC_ID(){return i},get KNOWN_PASSIVE_ID(){return s},get KNOWN_CONDITIONAL_ID(){return n}});!function(e){e.Attack="Attack"}(c||(c={}));const r=Object.freeze({1:{ID:"1",Name:"Parameter Boost"},2:{ID:"2",Name:"Elemental Parameter Boost"},3:{ID:"3",Name:"Type-Based Parameter Boost"},4:{ID:"4",Name:"Status Negation"},5:{ID:"5",Name:"Elemental Damage Reduction"},6:{ID:"6",Name:""},8:{ID:"8",Name:"Damage Reduction"},9:{ID:"9",Name:"Gradual BB Gauge Boost"},10:{ID:"10",Name:"HC Efficacy"},11:{ID:"11",Name:"HP-Conditional Parameter Boost"},12:{ID:"12",Name:"HP-Conditional Drop Rate Boost"},13:{ID:"13",Name:"BC Fill on Enemy Defeat"},14:{ID:"14",Name:"Damage Reduction (Chance)"},15:{ID:"15",Name:"Heal on Enemy Defeat"},16:{ID:"16",Name:"Heal on Battle Victory"},17:{ID:"17",Name:"HP Absorption"},19:{ID:"19",Name:"Drop Rate Boost"},20:{ID:"20",Name:"Status Infliction"},21:{ID:"21",Name:"Parameter Boost for First X Turns"},23:{ID:"23",Name:"BC Fill on Battle Victory"},24:{ID:"24",Name:"Heal when Attacked (Chance)"},25:{ID:"25",Name:"BC Fill when Hit (Chance)"},26:{ID:"26",Name:"Damage Counter (Chance)"},27:{ID:"27",Name:"Increased Target Chance"},28:{ID:"28",Name:"Decreased Target Chance"},29:{ID:"29",Name:"Defense Ignore (Chance)"},30:{ID:"30",Name:"BB Conditional Parameter Boost"},31:{ID:"31",Name:"Spark Damage Boost, Boost Drop Rate on Spark"},32:{ID:"32",Name:"BC Efficacy"},33:{ID:"33",Name:"Heal over Time"},34:{ID:"34",Name:"Critical Damage Boost"},35:{ID:"35",Name:"BC Fill when Normal Attacking"},36:{ID:"36",Name:"Extra Action"},37:{ID:"37",Name:"Hit Count Boost"},38:{ID:"38",Name:""},39:{ID:"39",Name:""},40:{ID:"40",Name:"Parameter Conversion"},41:{ID:"41",Name:"Unique Element Count Conditional Parameter Boost"},42:{ID:"42",Name:"Gender Parameter Boost"},43:{ID:"43",Name:"Damage Reduction to 1"},44:{ID:"44",Name:"Flat Parameter Boost"},45:{ID:"45",Name:"Critical Damage Negation"},46:{ID:"46",Name:"Parameter Boost Relative to HP Remainaing"},47:{ID:"47",Name:"BC Fill on Spark"},48:{ID:"48",Name:"BC Cost Reduction"},49:{ID:"49",Name:"BB Gauge Consumption Reduction"},50:{ID:"50",Name:"Elemental Damage Boost"},52:{ID:"52",Name:""},53:{ID:"53",Name:"Critical/Elemental Weakness Damage Negation"},55:{ID:"55",Name:"Conditional Effect based on HP Threshold"},58:{ID:"58",Name:"Damage Reduction when Guarding"},59:{ID:"59",Name:"BC Fill when Attacked when Guarding"},61:{ID:"61",Name:"BC Fill on Guard"},62:{ID:"62",Name:"Elemental Damage Reduction"},63:{ID:"63",Name:"Elemental Damage Reduction for first X Turns"},64:{ID:"64",Name:"BB Atk Boost"},65:{ID:"65",Name:"BC Fill on Critical"},66:{ID:"66",Name:"Add buff to Brave Burst"},69:{ID:"69",Name:"Chance KO Resistance (Angel Idol)"},70:{ID:"70",Name:"OD Gauge Fill Rate Boost"},71:{ID:"71",Name:"Status Counter"},72:{ID:"72",Name:"Turn End Effects Activate at Turn Start"},73:{ID:"73",Name:"Parameter Reduction Negation"},74:{ID:"74",Name:"Attack Boost on Status Afflicted Foes"},75:{ID:"75",Name:"Spark Vulnerability"},77:{ID:"77",Name:"Spark Damage Reduction"},78:{ID:"78",Name:"Conditional Effect after Damage Received Threshold"},79:{ID:"79",Name:"BC Fill after Damage Received Threshold"},80:{ID:"80",Name:"Conditional Effect after Damage Dealt Threshold"},81:{ID:"81",Name:"BC Fill after Damage Dealt Threshold"},82:{ID:"82",Name:"Conditional Effect after BC Received Threshold"},84:{ID:"84",Name:"Conditional Effect after HC Received Threshold"},85:{ID:"85",Name:"BC Fill after HC Received Threshold"},86:{ID:"86",Name:"Conditional Effect after Spark Threshold"},88:{ID:"88",Name:"Conditional Effect on Guard"},89:{ID:"89",Name:"Conditional Effect on Critical"},90:{ID:"90",Name:"Status Infliction on Critical"},91:{ID:"91",Name:""},92:{ID:"92",Name:"Negate Defense Ignore"},93:{ID:"93",Name:"Added Elements"},96:{ID:"96",Name:"Normal Attacks Hit All Foes"},97:{ID:"97",Name:"Player EXP Boost"},99:{ID:"99",Name:""},100:{ID:"100",Name:"Spark Critical"},101:{ID:"101",Name:"Heal on Spark"},102:{ID:"102",Name:"Added Elements"},103:{ID:"103",Name:"BB Atk Boost when HP Passes Threshold"},104:{ID:"104",Name:"Spark Boost when HP Passes Threshold"},105:{ID:"105",Name:"Turn-Based Parameter Boost"},106:{ID:"106",Name:"Conditional Effect after Activating Overdrive"},107:{ID:"107",Name:"Add Effect to Leader Skill"},109:{ID:"109",Name:"BB Gauge Reduction (Chance)"},110:{ID:"110",Name:"BC Efficacy Reduction (Chance)"},111:{ID:"111",Name:"Increase Brave Burst Activation Rate"},112:{ID:"112",Name:"ABP/CBP Boost"},113:{ID:"113",Name:"Conditional Effect after HP Threshold"},114:{ID:"114",Name:"Inflict Buff when Attacked"},127:{ID:"127",Name:"Additional Damage (Damage over Time) Reduction"},128:{ID:"128",Name:"Damage Reduction from Normal Attacks"},143:{ID:"143",Name:"Break Atk Parameter Limit"},10008:{ID:"10008",Name:"Damage Reduction from Specific Sources"},11004:{ID:"11004",Name:"Elemental Spark Damage Boost"},11005:{ID:"11005",Name:"Elemental Critical Damage Boost"},11006:{ID:"11006",Name:"Summoner EXP Boost"},11009:{ID:"11009",Name:"Effect Duration Boost"},"66,1":{ID:"66,1",Name:""}}),l=Object.freeze({0:{ID:"0",Name:"",Type:""},1:{ID:"1",Name:"Regular Damage",Type:"Attack"},2:{ID:"2",Name:"Burst Heal",Type:""},3:{ID:"3",Name:"Heal over Time",Type:""},4:{ID:"4",Name:"BB Gauge Refill",Type:""},5:{ID:"5",Name:"Parameter Boost",Type:""},6:{ID:"6",Name:"Drop Rate",Type:""},7:{ID:"7",Name:"Guaranteed KO Resistance (Angel Idol)",Type:""},8:{ID:"8",Name:"Max HP Boost",Type:""},9:{ID:"9",Name:"Parameter Reduction",Type:""},10:{ID:"10",Name:"Status Cleanse",Type:""},11:{ID:"11",Name:"Status Infliction",Type:""},12:{ID:"12",Name:"Revive (Guaranteed)",Type:""},13:{ID:"13",Name:"Random Target Damage",Type:"Attack"},14:{ID:"14",Name:"Lifesteal Damage",Type:"Attack"},16:{ID:"16",Name:"Elemental Damage Reduction",Type:""},17:{ID:"17",Name:"Status Negation",Type:""},18:{ID:"18",Name:"Damage Reduction",Type:""},19:{ID:"19",Name:"Gradual BB Gauge Boost",Type:""},20:{ID:"20",Name:"BC Fill on Hit",Type:""},22:{ID:"22",Name:"Defense Ignore",Type:""},23:{ID:"23",Name:"Spark Boost",Type:""},24:{ID:"24",Name:"Parameter Conversion",Type:""},26:{ID:"26",Name:"Hit Count Boost",Type:""},27:{ID:"27",Name:"Proportional Damage",Type:"Attack"},28:{ID:"28",Name:"Fixed Damage",Type:"Attack"},29:{ID:"29",Name:"Multi-Element Damage",Type:"Attack"},30:{ID:"30",Name:"Add Elements",Type:""},31:{ID:"31",Name:"Instant BB Gauge Fill",Type:""},32:{ID:"32",Name:"Element Shift",Type:""},33:{ID:"33",Name:"Buff Removal (Chance)",Type:""},34:{ID:"34",Name:"BB Gauge Reduction (Chance)",Type:""},36:{ID:"36",Name:"Leader Skill Lock (Chance)",Type:""},37:{ID:"37",Name:"Summon Unit",Type:""},38:{ID:"38",Name:"Status Cure",Type:""},39:{ID:"39",Name:"Elemental Damage Reduction",Type:""},40:{ID:"40",Name:"Status Infliction Added to Attack",Type:""},42:{ID:"42",Name:"",Type:""},43:{ID:"43",Name:"Instant OD Fill",Type:""},44:{ID:"44",Name:"Damage over Time (Additional Damage)",Type:""},45:{ID:"45",Name:"BB Atk Boost",Type:""},46:{ID:"46",Name:"Non-Lethal Proportional Damage",Type:"Attack"},47:{ID:"47",Name:"HP Scaled Damage",Type:"Attack"},48:{ID:"48",Name:"Piercing Proportional Damage",Type:"Attack"},49:{ID:"49",Name:"Retire",Type:""},50:{ID:"50",Name:"Damage Counter",Type:""},51:{ID:"51",Name:"Parameter Reduction Added to Attack",Type:""},52:{ID:"52",Name:"BC Efficacy",Type:""},53:{ID:"53",Name:"Status Counter",Type:""},54:{ID:"54",Name:"Critical Damage Boost",Type:""},55:{ID:"55",Name:"Elemental Damage Boost",Type:""},56:{ID:"56",Name:"Chance KO Resistance (Angel Idol)",Type:""},57:{ID:"57",Name:"BC Efficacy Reduction",Type:""},58:{ID:"58",Name:"Spark Vulnerability",Type:""},59:{ID:"59",Name:"BB Atk Reduction",Type:""},60:{ID:"60",Name:"",Type:""},61:{ID:"61",Name:"BB-Scaled Damage",Type:"Attack"},62:{ID:"62",Name:"Barrier",Type:""},63:{ID:"63",Name:"Selective Buff Wipe",Type:""},64:{ID:"64",Name:"Consecutive Damage",Type:"Attack"},65:{ID:"65",Name:"Attack Boost on Status Afflicted Foes",Type:""},66:{ID:"66",Name:"Revive (Chance)",Type:""},67:{ID:"67",Name:"BC Fill on Spark",Type:""},68:{ID:"68",Name:"Damage Reduction when Guarding",Type:""},69:{ID:"69",Name:"BC Fill on Guard",Type:""},70:{ID:"70",Name:"",Type:""},71:{ID:"71",Name:"BB Gauge Fill Rate Debuff",Type:""},73:{ID:"73",Name:"Parameter Reduction Negation",Type:""},75:{ID:"75",Name:"Element Squad-Scaled Damage",Type:"Attack"},76:{ID:"76",Name:"Extra Action",Type:""},78:{ID:"78",Name:"Self Parameter Boost",Type:""},79:{ID:"79",Name:"Player EXP Boost",Type:""},82:{ID:"82",Name:"",Type:""},83:{ID:"83",Name:"Spark Critical",Type:""},84:{ID:"84",Name:"OD Gauge Fill Rate",Type:""},85:{ID:"85",Name:"Heal when Attacked",Type:""},86:{ID:"86",Name:"HP Absorption",Type:""},87:{ID:"87",Name:"Heal on Spark",Type:""},88:{ID:"88",Name:"Self Spark Boost",Type:""},89:{ID:"89",Name:"Self Parameter Conversion",Type:""},92:{ID:"92",Name:"Self Max HP Boost",Type:""},93:{ID:"93",Name:"Spark/Critical/Elemental Weakness Damage Reduction",Type:""},94:{ID:"94",Name:"Normal Attacks Hit All Foes",Type:""},95:{ID:"95",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},96:{ID:"96",Name:"Nullify Extra Skill Effects (ES Lock)",Type:""},97:{ID:"97",Name:"Element Target Damage",Type:"Attack"},113:{ID:"113",Name:"Gradual OD Fill",Type:""},119:{ID:"119",Name:"Gradual BC Drain",Type:""},123:{ID:"123",Name:"OD Gauge Reduction",Type:""},126:{ID:"126",Name:"Damage over Time (Additional Damage) Mitigation",Type:""},127:{ID:"127",Name:"Lock On",Type:""},130:{ID:"130",Name:"Parameter Reduction Counter",Type:""},131:{ID:"131",Name:"",Type:""},132:{ID:"132",Name:"Critical/Elemental Weakness Vulnerability",Type:""},901:{ID:"901",Name:"Raid Heal (on Map)",Type:""},902:{ID:"902",Name:"Raid Parameter Boost",Type:""},903:{ID:"903",Name:"Raid Boss Reveal",Type:""},905:{ID:"905",Name:"Raid Teleport",Type:""},906:{ID:"906",Name:"Raid Flee",Type:""},907:{ID:"907",Name:"Raid Damage Reduction",Type:""},908:{ID:"908",Name:"Raid Item Drop Rate Boost",Type:""},1e4:{ID:"10000",Name:"Taunt",Type:""},10001:{ID:"10001",Name:"Stealth",Type:""},10002:{ID:"10002",Name:"Shield (old)",Type:""},10003:{ID:"10003",Name:"Nullify Sphere Effects (Sphere Lock)",Type:""},10004:{ID:"10004",Name:"Damage Immunity",Type:""},10005:{ID:"10005",Name:"Turn Skip (short duration)",Type:""},10006:{ID:"10006",Name:"Turn Skip (long duration)",Type:""},10007:{ID:"10007",Name:"Evasion",Type:""},10009:{ID:"10009",Name:"",Type:""},10012:{ID:"10012",Name:"OD Drain",Type:""},10015:{ID:"10015",Name:"Elemental Spark Boost",Type:""},10016:{ID:"10016",Name:"Element Critical Damage Boost",Type:""},10017:{ID:"10017",Name:"Elemental Shield",Type:""},10018:{ID:"10018",Name:"Max HP Reduction",Type:""},10019:{ID:"10019",Name:"Effect Purge",Type:""},10020:{ID:"10020",Name:"Piercing Damage",Type:"Attack"},10021:{ID:"10021",Name:"Active Healing Reduction",Type:""},10022:{ID:"10022",Name:"Passive Healing Reduction",Type:""},10023:{ID:"10023",Name:"HC Efficacy Reduction",Type:""},10025:{ID:"10025",Name:"KO Resistance Negation",Type:""},10026:{ID:"10026",Name:"Doom",Type:""},11e3:{ID:"11000",Name:"Negative HP-Scaled Damage",Type:"Attack"},11001:{ID:"11001",Name:"Max HP% DoT of Weaker Element Enemies",Type:""},11002:{ID:"11002",Name:"HP Limit Break, Convert to HP",Type:""},11003:{ID:"11003",Name:"Effect Negation",Type:""},70001:{ID:"70001",Name:"Mana Bubble Shield",Type:""},70002:{ID:"70002",Name:"Recast",Type:""},"2-5":{ID:"2-5",Name:"Burst Heal and DEF/REC Boost",Type:""}});function d(e,a=l){return a&&"object"==typeof a&&Object.hasOwnProperty.call(a,e)?a[e]:void 0}function p(e,a){const t=d(e,a);return!!t&&t.Type===c.Attack}var f,u,F,g,m,D,v,E,B,T,U,b,k,h,A,R,_,I,y,P=Object.freeze({__proto__:null,getLevelEntryForBurst:a,getEffectsForBurst:function(e,t){const i=a(e,t);return i&&Array.isArray(i.effects)?i.effects:[]},getExtraAttackDamageFramesEntry:function(e,a="0.0/0",s){const n=(Array.isArray(e)?e:[]).filter(e=>{const a=t(e);return a===i.BurstHeal||p(a,s)}).reduce((e,a,t)=>{const i=0===t,s=a["frame times"].length,n=a["hit dmg% distribution"],c=a["frame times"];for(let a=i?0:1;a<s;++a)e.push({damage:n[a],time:c[a]});return e},[]),c={"effect delay time(ms)/frame":a,"frame times":[],"hit dmg% distribution":[],"hit dmg% distribution (total)":0,hits:0};return n.sort((e,a)=>e.time-a.time).forEach(({time:e,damage:a})=>{c["frame times"].push(e),c["hit dmg% distribution"].push(a),c["hit dmg% distribution (total)"]+=a}),c.hits=c["frame times"].length,c}});function O(e,a=r){return a&&"object"==typeof a&&Object.hasOwnProperty.call(a,e)?a[e]:void 0}function N(e,a){const t=d(e,a);return!!t&&t.Name||""}function C(e,a){const t=O(e,a);return!!t&&t.Name||""}function S(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"proc id")||Object.hasOwnProperty.call(e,"unknown proc id"))}function H(e){return!!e&&"object"==typeof e&&(Object.hasOwnProperty.call(e,"passive id")||Object.hasOwnProperty.call(e,"unknown passive id"))}!function(e){e.Poison="poison",e.Weak="weak",e.Sick="sick",e.Injury="injury",e.Curse="curse",e.Paralysis="paralysis",e.AttackReduction="atk down",e.DefenseReduction="def down",e.RecoveryReduction="rec down",e.Unknown="unknown"}(f||(f={})),function(e){e.hp_50pr_under="hp_50pr_under",e.hp_50pr_over="hp_50pr_over",e.hp_75pr_under="hp_75pr_under",e.hp_25pr_under="hp_25pr_under",e.hp_min="hp_min",e.hp_max="hp_max",e.atk_max="atk_max",e.random="random"}(u||(u={})),function(e){e.Moving="1",e.Teleporting="2",e.NonMoving="3"}(F||(F={})),function(e){e.Aoe="aoe",e.Single="single",e.Random="random"}(g||(g={})),function(e){e.Aoe="AOE",e.Single="ST",e.Random="RT"}(m||(m={})),function(e){e.Self="self",e.Party="party",e.Enemy="enemy"}(D||(D={})),function(e){e.AddPassive="passive",e.EnhanceBb="add to bb",e.EnhanceSbb="add to sbb",e.EnhanceUbb="add to ubb",e.EnhancePassive="add to passive"}(v||(v={})),function(e){e.None="None",e["Status Enhancing"]="Status Enhancing",e.Critical="Critical",e.Drop="Drop",e["Ailment Inducing"]="Ailment Inducing",e["Element Fusion"]="Element Fusion",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e["Target Setting"]="Target Setting",e["Damage Deflecting"]="Damage Deflecting",e["Damage Reducing"]="Damage Reducing",e.Spark="Spark",e["Defense Piercing"]="Defense Piercing",e["Attack Boosting"]="Attack Boosting",e.Special="Special"}(E||(E={})),function(e){e[e.None=0]="None",e[e["Status Enhancing"]=1]="Status Enhancing",e[e.Critical=2]="Critical",e[e.Drop=3]="Drop",e[e["Ailment Inducing"]=4]="Ailment Inducing",e[e["Element Fusion"]=5]="Element Fusion",e[e["BB Gauge"]=6]="BB Gauge",e[e["HP Recovery"]=7]="HP Recovery",e[e["Target Setting"]=8]="Target Setting",e[e["Damage Deflecting"]=9]="Damage Deflecting",e[e["Damage Reducing"]=10]="Damage Reducing",e[e.Spark=11]="Spark",e[e["Defense Piercing"]=12]="Defense Piercing",e[e["Attack Boosting"]=13]="Attack Boosting",e[e.Special=14]="Special"}(B||(B={})),function(e){e["Parameter Boost"]="Parameter Boost",e.Spark="Spark",e["Critical Hits"]="Critical Hits",e["Attack Boost"]="Attack Boost",e["BB Gauge"]="BB Gauge",e["HP Recovery"]="HP Recovery",e.Drops="Drops",e["Ailment Resistance"]="Ailment Resistance",e["Ailment Infliction"]="Ailment Infliction",e["Damage Reduction"]="Damage Reduction",e.Special="Special",e.Unknown="Unknown"}(T||(T={})),function(e){e["Parameter Boost"]="1",e.Spark="2",e["Critical Hits"]="3",e["Attack Boost"]="4",e["BB Gauge"]="5",e["HP Recovery"]="6",e.Drops="7",e["Ailment Resistance"]="8",e["Ailment Infliction"]="9",e["Damage Reduction"]="10",e.Special="11"}(U||(U={})),function(e){e.Attack="attack",e.Idle="idle",e.Move="move"}(b||(b={})),function(e){e.Fire="fire",e.Water="water",e.Earth="earth",e.Thunder="thunder",e.Light="light",e.Dark="dark"}(k||(k={})),function(e){e.Male="male",e.Female="female",e.Other="other"}(h||(h={})),function(e){e.Ineligible="not eligible for achievement",e.Farmable="farmable",e.RareSummon="rare summon",e.ExtraSkillElgif="extra skill elgif"}(A||(A={})),function(e){e.Normal="normal",e.Evolution="evo",e.Enhancing="enhancing",e.Sale="sale"}(R||(R={})),function(e){e.Lord="lord",e.Anima="anima",e.Breaker="breaker",e.Guardian="guardian",e.Oracle="oracle",e.Rex="rex"}(_||(_={})),function(e){e.Consumable="consumable",e.Material="material",e.Sphere="sphere",e.EvolutionMaterial="evomat",e.SummonerConsumable="summoner_consumable",e.LeaderSkillSphere="ls_sphere"}(I||(I={})),function(e){e.Mimic="60142",e.BatMimic="60143",e.DragonMimic="60144",e.MetalMimic="60224"}(y||(y={}));const w={1e3:y.Mimic,1100:y.BatMimic,1101:y.BatMimic,1200:y.DragonMimic,1300:y.MetalMimic};var K,L,W,j,M,G,x=Object.freeze({__proto__:null,get Ailment(){return f},get ArenaCondition(){return u},get MoveType(){return F},get TargetArea(){return g},get TargetAreaShorthand(){return m},get TargetType(){return D},get SpPassiveType(){return v},get SphereTypeName(){return E},get SphereTypeId(){return B},get SpCategoryName(){return T},get SpCategoryId(){return U},get UnitAnimationKey(){return b},get UnitElement(){return k},get UnitGender(){return h},get UnitGettingType(){return A},get UnitKind(){return R},get UnitType(){return _},get ItemType(){return I},get MimicUnitIds(){return y},MimicMonsterGroupMapping:w});function V(e){const a=Array.isArray(e.previousSources)?e.previousSources.slice():[];return a.unshift(function(e){return`${e.source}-${e.sourceId}`}(e)),a}function $(e){const a=e&&Array.isArray(e.conditions)&&e.conditions||[],t={units:new Set,items:new Set,sphereTypes:new Set,unknowns:new Set};a.forEach((e,a)=>{"sphere category required (raw)"in e?t.sphereTypes.add(e["sphere category required (raw)"]):"item required"in e?e["item required"].forEach(e=>{t.items.add(e)}):"unit required"in e?e["unit required"].forEach(e=>{t.units.add(""+e.id)}):t.unknowns.add(`type:${e.type_id||a},condition:${e.condition_id||a}`)});return Object.entries(t).filter(e=>e[1].size>0).reduce((e,a)=>(e[a[0]]=Array.from(a[1]),e),{})}function X(e,a){const t=a.source===L.LeaderSkill||e.sp_type===v.EnhancePassive||e["passive target"]===D.Party;return{targetType:t?D.Party:D.Self,targetArea:t?g.Aoe:g.Single}}function q(e){return{targetArea:e["target area"],targetType:e["target type"]}}function Y(e,a=0){return null===e||isNaN(e)?a:+e}function z(e=[],a=0){let t=!1;const i=e.reduce((e,i,s)=>(i&&"0"!==i&&(e["param_"+(a+s)]=i,t=!0),e),{});return t?i:void 0}function Q(e){return!!e&&[L.BraveBurst,L.SuperBraveBurst,L.UltimateBraveBurst,L.BondedBraveBurst,L.BondedSuperBraveBurst,L.DualBraveBurst].includes(e)}function Z(e,a,t){let i;return e&&e.length>0&&(i=(t&&t.createUnknownParamsValue||z)(e,a)),i}function J({originalId:e,sources:a}){return{id:G.NO_PARAMS_SPECIFIED,originalId:e,sources:a}}let ee,ae,te;function ie(e){return ee&&!e||(ee=new Map,function(e){const a="unknown proc param",t={0:W.All,1:k.Fire,2:k.Water,3:k.Earth,4:k.Thunder,5:k.Light,6:k.Dark},i={1:k.Fire,2:k.Water,3:k.Earth,4:k.Thunder,5:k.Light,6:k.Dark},s={1:f.Poison,2:f.Weak,3:f.Sick,4:f.Injury,5:f.Curse,6:f.Paralysis,7:f.AttackReduction,8:f.DefenseReduction,9:f.RecoveryReduction},n=(e,a,t)=>({targetData:(t&&t.getProcTargetData||q)(e),sources:(t&&t.createSourcesFromContext||V)(a),effectDelay:e["effect delay time(ms)/frame"]}),c=e=>e.params.split(","),o=e=>{const t=e.params||e[a]||"";return c({params:t})},r=(e,{originalId:a,sources:t,targetData:i,effectDelay:s})=>Object.assign({id:G.UNKNOWN_PROC_BUFF_PARAMS,originalId:a,effectDelay:s,sources:t,value:e},i),l=({originalId:e,sources:a,buffs:t,duration:i,targetData:s})=>Object.assign({id:G.TURN_DURATION_MODIFICATION,originalId:e,sources:a,value:{buffs:t,duration:i}},s),d=(e,a,{originalId:t,sources:i,targetData:s,effectDelay:n})=>{0===e.length&&e.push(J({originalId:t,sources:i})),a&&e.push(r(a,{originalId:t,sources:i,targetData:s,effectDelay:n}))},p=(e,a,t)=>{let i=0!==a;return i&&(i=!(t&&t.buffSourceIsBurstType||Q)(e.source)),i},u=e=>({hits:Y(e.damageFrames&&e.damageFrames.hits||0),distribution:Y(e.damageFrames&&e.damageFrames["hit dmg% distribution (total)"])}),F=({effect:e,context:a,injectionContext:t,effectValueKey:i,effectTurnDurationKey:s,parseParamValue:o=(e=>Y(e)),buffId:r,originalId:f})=>{const{targetData:u,sources:F,effectDelay:g}=n(e,a,t);let m,D=0,v=0;if(e.params){const[a,i,...s]=c(e);D=o(a),v=Y(i),m=Z(s,2,t)}else i&&s&&(D=Y(e[i]),v=Y(e[s]));const E=[];return 0!==D?E.push(Object.assign({id:r,originalId:f,sources:F,effectDelay:g,duration:v,value:D},u)):p(a,v,t)&&E.push(l({originalId:f,sources:F,buffs:[r],duration:v,targetData:u})),d(E,m,{originalId:f,sources:F,targetData:u,effectDelay:g}),E},m=({effect:e,context:a,injectionContext:t,originalId:i,buffId:s,effectKeyLow:o,effectKeyHigh:r,effectKeyChance:f,effectTurnDurationKey:u,buffKeyLow:F,buffKeyHigh:g,parseParamValue:m=(e=>Y(e)),generateConditions:D})=>{const{targetData:v,sources:E,effectDelay:B}=n(e,a,t);let T,U=0,b=0,k=0,h=0;if(e.params){const[a,i,s,n,...o]=c(e);U=m(a),b=m(i),k=Y(s),h=Y(n),T=Z(o,4,t)}else U=Y(e[o]),b=Y(e[r]),k=Y(e[f]),h=Y(e[u]);const A=[];if(0!==U||0!==b||0!==k){const e=Object.assign({id:s,originalId:i,sources:E,effectDelay:B,duration:h,value:{[F]:U,[g]:b,chance:k}},v);D&&(e.conditions=D()),A.push(e)}else p(a,h,t)&&A.push(l({originalId:i,sources:E,buffs:[s],duration:h,targetData:v}));return d(A,T,{originalId:i,sources:E,targetData:v,effectDelay:B}),A};e.set("1",(e,a,t)=>{const i="1",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),f={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let F;if(e.params){let a;[f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...a]=c(e),F=Z(a,6,t)}else f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const g=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),m=[];return(0!==l||0!==p||Object.keys(g).length>0)&&m.push(Object.assign({id:"proc:1:attack",originalId:i,sources:o,effectDelay:r,value:Object.assign(Object.assign({},g),{hits:l,distribution:p})},s)),d(m,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("2",(e,a,t)=>{const i="2",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),l={healLow:"0",healHigh:"0","healerRec%":0};let p;if(e.params){let a,i,s;[l.healLow,l.healHigh,a,i,...s]=c(e),l["healerRec%"]=(100+Y(a))*(1+Y(i)/100)/10,p=Z(s,4,t)}else l.healLow=e["heal low"],l.healHigh=e["heal high"],l["healerRec%"]=e["rec added% (from healer)"];Object.keys(l).forEach(e=>{l[e]=Y(l[e])});const f=[];return 0===l.healHigh&&0===l.healLow||f.push(Object.assign({id:"proc:2:burst heal",originalId:i,sources:o,effectDelay:r,value:l},s)),d(f,p,{originalId:i,sources:o,targetData:s,effectDelay:r}),f}),e.set("3",(e,a,t)=>{const i="3",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),f={healLow:"0",healHigh:"0","targetRec%":0,turnDuration:"0"};let u;if(e.params){let a,i;[f.healLow,f.healHigh,a,f.turnDuration,...i]=c(e),f["targetRec%"]=10*(1+Y(a)/100),u=Z(i,4,t)}else f.healLow=e["gradual heal low"],f.healHigh=e["gradual heal high"],f["targetRec%"]=e["rec added% (from target)"],f.turnDuration=e["gradual heal turns (8)"];Object.keys(f).forEach(e=>{f[e]=Y(f[e])});const F=[];return 0!==f.healLow||0!==f.healHigh?F.push(Object.assign({id:"proc:3:gradual heal",originalId:i,sources:o,effectDelay:r,duration:f.turnDuration,value:{healLow:f.healLow,healHigh:f.healHigh,"targetRec%":f["targetRec%"]}},s)):p(a,f.turnDuration,t)&&F.push(l({originalId:i,sources:o,buffs:["proc:3:gradual heal"],duration:f.turnDuration,targetData:s})),d(F,u,{originalId:i,sources:o,targetData:s,effectDelay:r}),F}),e.set("4",(e,a,t)=>{const i="4",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0,f=0;if(e.params){const[a,i,...s]=c(e);p=Y(a)/100,f=Y(i),l=Z(s,2,t)}else"bb bc fill"in e&&(p=Y(e["bb bc fill"])),"bb bc fill%"in e&&(f=Y(e["bb bc fill%"]));const u=[];return 0!==p&&u.push(Object.assign({id:"proc:4:bc fill-flat",originalId:i,sources:o,effectDelay:r,value:p},s)),0!==f&&u.push(Object.assign({id:"proc:4:bc fill-percent",originalId:i,sources:o,effectDelay:r,value:f},s)),d(u,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),u}),e.set("5",(e,a,i)=>{const s="5",{targetData:o,sources:r,effectDelay:f}=n(e,a,i),u={element:W.All,atk:"0",def:"0",rec:"0",crit:"0",turnDuration:"0"},F=["atk","def","rec","crit"];let g;if(e.params){let a,s;[s,u.atk,u.def,u.rec,u.crit,u.turnDuration,...a]=c(e),u.element=t[s]||W.Unknown,g=Z(a,6,i)}else{const a=e["element buffed"];u.element="all"===a?W.All:a||W.Unknown;const t=Object.keys(e);F.forEach(a=>{const i=t.find(e=>e.startsWith(a+"% buff"));i&&(u[a]=e[i])}),u.turnDuration=e["buff turns"]}F.concat(["turnDuration"]).forEach(e=>{u[e]=Y(u[e])});const m=F.some(e=>0!==u[e]),D=[];return m?F.forEach(e=>{const a=u[e];if(0!==a){const t=Object.assign({id:"proc:5:regular or elemental-"+e,originalId:s,sources:r,effectDelay:f,duration:u.turnDuration,value:a},o);u.element!==W.All&&(t.conditions={targetElements:[u.element]}),D.push(t)}}):p(a,u.turnDuration,i)&&D.push(l({originalId:s,sources:r,buffs:F.map(e=>"proc:5:regular or elemental-"+e),duration:u.turnDuration,targetData:o})),d(D,g,{originalId:s,sources:r,targetData:o,effectDelay:f}),D}),e.set("6",(e,a,t)=>{const i="6",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),f={bc:"0",hc:"0",item:"0",turnDuration:"0"},u=["bc","hc","item"];let F;if(e.params){let a;[f.bc,f.hc,f.item,f.turnDuration,...a]=c(e),F=Z(a,4,t)}else f.bc=e["bc drop rate% buff (10)"],f.hc=e["hc drop rate% buff (9)"],f.item=e["item drop rate% buff (11)"],f.turnDuration=e["drop buff rate turns"];u.concat(["turnDuration"]).forEach(e=>{f[e]=Y(f[e])});const g=u.some(e=>0!==f[e]),m=[];return g?u.forEach(e=>{const a=f[e];0!==a&&m.push(Object.assign({id:"proc:6:drop boost-"+e,originalId:i,sources:o,effectDelay:r,duration:f.turnDuration,value:a},s))}):p(a,f.turnDuration,t)&&m.push(l({originalId:i,sources:o,buffs:u.map(e=>"proc:6:drop boost-"+e),duration:f.turnDuration,targetData:s})),d(m,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("7",(e,a,t)=>{const i="7",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0;if(e.params){const[a,...i]=c(e);p=Y(a),l=Z(i,1,t)}else p=Y(e["angel idol recover hp%"]);const f=[Object.assign({id:"proc:7:guaranteed ko resistance",originalId:i,sources:o,effectDelay:r,value:p},s)];return d(f,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),f}),e.set("8",(e,a,t)=>{const i="8",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0,f=0;if(e.params){const[a,i,...s]=c(e);p=Y(a),f=Y(i),l=Z(s,2,t)}else"max hp increase"in e&&(p=Y(e["max hp increase"])),"max hp% increase"in e&&(f=Y(e["max hp% increase"]));const u=[];return 0!==p&&u.push(Object.assign({id:"proc:8:max hp boost-flat",originalId:i,sources:o,effectDelay:r,value:p},s)),0!==f&&u.push(Object.assign({id:"proc:8:max hp boost-percent",originalId:i,sources:o,effectDelay:r,value:f},s)),d(u,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),u}),e.set("9",(e,a,i)=>{const s="9",{targetData:o,sources:r,effectDelay:f}=n(e,a,i),u={0:"atk",1:"def",2:"rec"},F=["atk","def","rec"],g={element:W.All,statReductionEntries:[],turnDuration:0};let m;if(e.params){const[a,s,n,o,r,l,d,p,...f]=c(e);g.element=t[a]||W.Unknown,g.turnDuration=Y(p),[[s,n,o],[r,l,d]].forEach(([e,a,t])=>{const i=Y(e)-1,s=Y(a),n=Y(t);3===i?g.statReductionEntries.push(...F.map(e=>({stat:e,value:s,chance:n}))):g.statReductionEntries.push({stat:u[i]||"unknown",value:s,chance:n})}),m=Z(f,8,i)}else{const a=e["element buffed"];g.element="all"===a?W.All:a||W.Unknown,["buff #1","buff #2"].forEach(a=>{const t=e[a];if(t){const e=Y(t["proc chance%"]),a=Object.keys(t);F.forEach(i=>{const s=a.find(e=>e.startsWith(i+"% buff"));s&&g.statReductionEntries.push({stat:i,value:Y(t[s]),chance:e})})}}),g.turnDuration=Y(e["buff turns"])}const D=[];let v=!1;return g.statReductionEntries.forEach(({stat:e,value:a,chance:t})=>{if(0!==a||0!==t){v=!0;const i=Object.assign({id:"proc:9:regular or elemental reduction-"+e,originalId:s,sources:r,effectDelay:f,duration:g.turnDuration,value:{value:a,chance:t}},o);g.element!==W.All&&(i.conditions={targetElements:[g.element]}),D.push(i)}}),!v&&p(a,g.turnDuration,i)&&D.push(l({originalId:s,sources:r,buffs:F.map(e=>"proc:9:regular or elemental reduction-"+e),duration:g.turnDuration,targetData:o})),d(D,m,{originalId:s,sources:r,targetData:o,effectDelay:f}),D}),e.set("10",(e,a,t)=>{const i="10",{targetData:o,sources:r,effectDelay:l}=n(e,a,t),p=[];let u;if(e.params){const a=c(e),i=a.slice(0,8),n=a.slice(8);i.filter(e=>"0"!==e).forEach(e=>{p.push(s[e]||f.Unknown)}),u=Z(n,8,t)}else Object.values(s).forEach(a=>{"remove "+a in e&&p.push(a)}),"remove all status ailments"in e&&p.push(f.Unknown);const F=p.map(e=>Object.assign({id:"proc:10:cleanse-"+e,originalId:i,sources:r,effectDelay:l,value:!0},o));return d(F,u,{originalId:i,sources:r,targetData:o,effectDelay:l}),F}),e.set("11",(e,a,t)=>{const i="11",{targetData:o,sources:r,effectDelay:l}=n(e,a,t),p=[];let u;if(e.params){let a=c(e);a.length%2!=0&&"0"!==a[a.length-1]&&(u=Z(a.slice(-1),a.length-1,t),a=a.slice(0,a.length-1));const i=a.length;for(let e=0;e<i;e+=2){const t=a[e],i=Y(a[e+1]);if("0"!==t||0!==i){const e=s[t]||f.Unknown;p.push({ailment:e,chance:i})}}}else Object.values(s).forEach(a=>{let t;t=a===f.Weak?"weaken%":a===f.AttackReduction||a===f.DefenseReduction||a===f.RecoveryReduction?a:a+"%",t in e&&p.push({ailment:a,chance:Y(e[t])})});const F=p.map(({ailment:e,chance:a})=>Object.assign({id:"proc:11:chance inflict-"+e,originalId:i,sources:r,effectDelay:l,value:a},o));return d(F,u,{originalId:i,sources:r,targetData:o,effectDelay:l}),F}),e.set("12",(e,a,t)=>{const i="12",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0;if(e.params){const[a,...i]=c(e);p=Y(a),l=Z(i,1,t)}else p=Y(e["revive to hp%"]);const f=[Object.assign({id:"proc:12:guaranteed revive",originalId:i,sources:o,effectDelay:r,value:p},s)];return d(f,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),f}),e.set("13",(e,a,t)=>{const i="13",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l=0;const{distribution:p}=u(a),f={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0"};let F;if(e.params){let a,i;[f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],i,...a]=c(e),l=Y(i),F=Z(a,6,t)}else f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],l=Y(e.hits);const m=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),D=[];return(0!==l||0!==p||Object.keys(m).length>0)&&D.push({id:"proc:13:random attack",originalId:i,sources:o,effectDelay:r,value:Object.assign(Object.assign({},m),{hits:l,distribution:p}),targetType:s.targetType,targetArea:g.Random}),d(D,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),D}),e.set("14",(e,a,t)=>{const i="14",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),f={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0","drainLow%":"0","drainHigh%":"0"};let F;if(e.params){let a;[f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],f["drainLow%"],f["drainHigh%"],...a]=c(e),F=Z(a,8,t)}else f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"],f["drainLow%"]=e["hp drain% low"],f["drainHigh%"]=e["hp drain% high"];const g=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),m=[];return(0!==l||0!==p||Object.keys(g).length>0)&&m.push(Object.assign({id:"proc:14:hp absorb attack",originalId:i,sources:o,effectDelay:r,value:Object.assign(Object.assign({},g),{hits:l,distribution:p})},s)),d(m,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("16",(e,a,i)=>{const s="16",{targetData:o,sources:r,effectDelay:f}=n(e,a,i);let u,F,g=0,m=0;if(e.params){const[a,s,n,...o]=c(e);u=t[a]||W.Unknown,g=Y(s),m=Y(n),F=Z(o,3,i)}else{const a=Object.keys(e).find(e=>e.startsWith("mitigate"));u=a&&Object.values(t).find(e=>a.includes(e))||W.Unknown,a&&(g=Y(e[a])),m=Y(e["buff turns"])}const D=[];return 0!==g?D.push(Object.assign({id:"proc:16:mitigate-"+u,originalId:s,sources:r,effectDelay:f,duration:m,value:g},o)):p(a,m,i)&&D.push(l({originalId:s,sources:r,buffs:Object.values(t).concat([W.Unknown]).map(e=>"proc:16:mitigate-"+e),duration:m,targetData:o})),d(D,F,{originalId:s,sources:r,targetData:o,effectDelay:f}),D}),e.set("17",(e,a,t)=>{const i="17",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),u=[f.Poison,f.Weak,f.Sick,f.Injury,f.Curse,f.Paralysis],F={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let g,m=0;if(e.params){let a,i;[F.poison,F.weak,F.sick,F.injury,F.curse,F.paralysis,a,...i]=c(e),m=Y(a),g=Z(i,7,t)}else{const a=Object.keys(e).filter(e=>e.startsWith("resist"));u.forEach(t=>{const i=a.find(e=>e.includes(t));i&&(F[t]=e[i])}),m=Y(e["resist status ails turns"])}const D=[];return u.forEach(e=>{const a=Y(F[e]);0!==a&&D.push(Object.assign({id:"proc:17:resist-"+e,originalId:i,sources:o,effectDelay:r,value:a,duration:m},s))}),0===D.length&&p(a,m,t)&&D.push(l({originalId:i,sources:o,buffs:u.map(e=>"proc:17:resist-"+e),duration:m,targetData:s})),d(D,g,{originalId:i,sources:o,targetData:s,effectDelay:r}),D}),e.set("18",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"dmg% reduction",effectTurnDurationKey:"dmg% reduction turns (36)",buffId:"proc:18:mitigation",originalId:"18"})),e.set("19",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"increase bb gauge gradual",effectTurnDurationKey:"increase bb gauge gradual turns (37)",parseParamValue:e=>Y(e)/100,buffId:"proc:19:gradual bc fill",originalId:"19"})),e.set("20",(e,a,t)=>m({effect:e,context:a,injectionContext:t,originalId:"20",buffId:"proc:20:bc fill on hit",effectKeyLow:"bc fill when attacked low",effectKeyHigh:"bc fill when attacked high",effectKeyChance:"bc fill when attacked%",effectTurnDurationKey:"bc fill when attacked turns (38)",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>Y(e)/100,generateConditions:()=>({whenAttacked:!0})})),e.set("22",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"defense% ignore",effectTurnDurationKey:"defense% ignore turns (39)",buffId:"proc:22:defense ignore",originalId:"22"})),e.set("23",(e,a,t)=>{const i="23",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0;if(e.params){const a=c(e);u=Y(a[0]),F=Y(a[6]);f=Z(["0",...a.slice(1,6),"0",...a.slice(7)],0,t)}else u=Y(e["spark dmg% buff (40)"]),F=Y(e["buff turns"]);const g=[];return 0!==u?g.push(Object.assign({id:"proc:23:spark damage",originalId:i,sources:o,effectDelay:r,duration:F,value:u},s)):p(a,F,t)&&g.push(l({originalId:i,sources:o,buffs:["proc:23:spark damage"],duration:F,targetData:s})),d(g,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),g}),e.set("24",(e,a,t)=>{const i="24",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),f=["atk","def","rec"],u={1:"atk",2:"def",3:"rec",4:"hp"},F={attack:"atk",defense:"def",recovery:"rec",hp:"hp"},g={atk:"0",def:"0",rec:"0"};let m,D=0,v="unknown";if(e.params){let a,i,s;[i,g.atk,g.def,g.rec,s,...a]=c(e),v=u[i]||"unknown",D=Y(s),m=Z(a,5,t)}else{const a=e["converted attribute"];v=a in F?F[a]:"unknown";const t=Object.keys(e);f.forEach(a=>{const i=t.find(e=>e.startsWith(a+"% buff"));i&&(g[a]=e[i])}),D=Y(e["% converted turns"])}const E=[];return f.forEach(e=>{const a=Y(g[e]);0!==a&&E.push(Object.assign({id:"proc:24:converted-"+e,originalId:i,sources:o,effectDelay:r,duration:D,value:{convertedStat:v,value:a}},s))}),0===E.length&&p(a,D,t)&&E.push(l({originalId:i,sources:o,buffs:f.map(e=>"proc:24:converted-"+e),duration:D,targetData:s})),d(E,m,{originalId:i,sources:o,targetData:s,effectDelay:r}),E}),e.set("26",(e,a,t)=>{const i="26",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0;if(e.params){const a=c(e);u=Y(a[0]),F=Y(a[2]),g=Y(a[7]);f=Z(["0",a[1],"0",...a.slice(3,7),"0",...a.slice(8)],0,t)}else u=Y(e["hit increase/hit"]),F=Y(e["extra hits dmg%"]),g=Y(e["hit increase buff turns (50)"]);const m=[];return 0!==u||0!==F?m.push(Object.assign({id:"proc:26:hit count boost",originalId:i,sources:o,effectDelay:r,duration:g,value:{hitIncreasePerHit:u,extraHitDamage:F}},s)):p(a,g,t)&&m.push(l({originalId:i,sources:o,buffs:["proc:26:hit count boost"],duration:g,targetData:s})),d(m,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("27",(e,a,t)=>{const i="27",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),f={"hpDamageLow%":"0","hpDamageHigh%":"0","hpDamageChance%":"0","atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let F;if(e.params){let a;[f["hpDamageLow%"],f["hpDamageHigh%"],f["hpDamageChance%"],f["atk%"],f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...a]=c(e),F=Z(a,9,t)}else f["hpDamageLow%"]=e["hp% damage low"],f["hpDamageHigh%"]=e["hp% damage high"],f["hpDamageChance%"]=e["hp% damage chance%"],f["atk%"]=e["bb atk%"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const g=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),m=[];return(0!==l||0!==p||Object.keys(g).length>0)&&m.push(Object.assign({id:"proc:27:proportional attack",originalId:i,sources:o,effectDelay:r,value:Object.assign(Object.assign({},g),{hits:l,distribution:p})},s)),d(m,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("28",(e,a,t)=>{const i="28",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a);let f,F=0;if(e.params){const[a,...i]=c(e);F=Y(a),f=Z(i,1,t)}else F=Y(e["fixed damage"]);const g=[];if(0!==l||0!==p||0!==F){const e=Object.assign({id:"proc:28:fixed attack",originalId:i,sources:o,effectDelay:r,value:{hits:l,distribution:p}},s);0!==F&&(e.value.value=F),g.push(e)}return d(g,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),g}),e.set("29",(e,a,i)=>{const s="29",{targetData:o,sources:r,effectDelay:l}=n(e,a,i),{hits:p,distribution:f}=u(a),F={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let g,m=[];if(e.params){let a,s,n,o;[a,s,n,F["atk%"],F.flatAtk,F["crit%"],F["bc%"],F["hc%"],F["dmg%"],...o]=c(e),[a,s,n].forEach(e=>{"0"!==e&&m.push(t[e]||W.Unknown),g=Z(o,9,i)})}else Array.isArray(e["bb elements"])&&(m=e["bb elements"].slice()),F["atk%"]=e["bb atk%"],F.flatAtk=e["bb flat atk"],F["crit%"]=e["bb crit%"],F["bc%"]=e["bb bc%"],F["hc%"]=e["bb hc%"],F["dmg%"]=e["bb dmg%"];const D=Object.entries(F).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),v=[];if(0!==p||0!==f||m.length>0||Object.keys(D).length>0){const e=Object.assign({id:"proc:29:multi-element attack",originalId:s,sources:r,effectDelay:l,value:Object.assign(Object.assign({},D),{hits:p,distribution:f})},o);m.length>0&&(e.value.elements=m),v.push(e)}return d(v,g,{originalId:s,sources:r,targetData:o,effectDelay:l}),v}),e.set("30",(e,a,i)=>{const s="30",{targetData:o,sources:r,effectDelay:f}=n(e,a,i);let u,F=[],g=0;if(e.params){const a=c(e);F=a.slice(0,6).filter(e=>"0"!==e).map(e=>t[e]||W.Unknown),g=Y(a[6]),u=Z(a.slice(7),7,i)}else"elements added"in e&&(F=Array.isArray(e["elements added"])?e["elements added"]:[W.Unknown]),g=Y(e["elements added turns"]);const m=[],D=Object.values(t).filter(e=>e!==W.All);return F.length>0?F.forEach(e=>{const a=D.includes(e)?e:W.Unknown;m.push(Object.assign({id:"proc:30:add element-"+a,originalId:s,sources:r,effectDelay:f,duration:g,value:!0},o))}):p(a,g,i)&&m.push(l({originalId:s,sources:r,buffs:D.concat([W.Unknown]).map(e=>"proc:30:add element-"+e),duration:g,targetData:o})),d(m,u,{originalId:s,sources:r,targetData:o,effectDelay:f}),m}),e.set("31",(e,a,t)=>{const i="31",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0,f=0;if(e.params){const[a,i,...s]=c(e);p=Y(a)/100,f=Y(i),l=Z(s,2,t)}else"increase bb gauge"in e&&(p=Y(e["increase bb gauge"]));const u=[];return 0!==p&&u.push(Object.assign({id:"proc:31:bc fill-flat",originalId:i,sources:o,effectDelay:r,value:p},s)),0!==f&&u.push(Object.assign({id:"proc:31:bc fill-percent",originalId:i,sources:o,effectDelay:r,value:f},s)),d(u,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),u}),e.set("32",(e,a,t)=>{const s="32",{targetData:o,sources:r,effectDelay:l}=n(e,a,t);let p,f;if(e.params){const[a,...s]=c(e);a&&"0"!==a&&(p=i[a]||W.Unknown),f=Z(s,1,t)}else{const a=e["set attack element attribute"];if(a){const e=Object.values(i).find(e=>a===e);p=e&&e!==W.All?e:W.Unknown}}const u=[];return p&&u.push(Object.assign({id:"proc:32:element shift-"+p,originalId:s,sources:r,effectDelay:l,value:!0},o)),d(u,f,{originalId:s,sources:r,targetData:o,effectDelay:l}),u}),e.set("33",(e,a,t)=>{const i="33",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0;if(e.params){const[a,...i]=c(e);p=Y(a),l=Z(i,1,t)}else p=Y(e["clear buff chance%"]);const f=[];return 0!==p&&f.push(Object.assign({id:"proc:33:buff wipe",originalId:i,sources:o,effectDelay:r,value:p},s)),d(f,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),f}),e.set("34",(e,a,t)=>{const i="34",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0,f=0,u=0,F=0,g=0;if(e.params){const[a,i,s,n,o,...r]=c(e);p=Y(a)/100,f=Y(i)/100,u=Y(s),F=Y(n),g=Y(o),l=Z(r,5,t)}else p=Y(e["base bb gauge reduction low"]),f=Y(e["base bb gauge reduction high"]),u=Y(e["bb gauge% reduction low"]),F=Y(e["bb gauge% reduction high"]),g=Y(e["bb gauge reduction chance%"]);const m=[];return 0===p&&0===f||m.push(Object.assign({id:"proc:34:bc drain-flat",originalId:i,sources:o,effectDelay:r,value:{drainLow:p,drainHigh:f,chance:g}},s)),0===u&&0===F||m.push(Object.assign({id:"proc:34:bc drain-percent",originalId:i,sources:o,effectDelay:r,value:{drainLow:u,drainHigh:F,chance:g}},s)),d(m,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("36",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"invalidate LS chance%",effectTurnDurationKey:"invalidate LS turns (60)",buffId:"proc:36:ls lock",originalId:"36"})),e.set("37",(e,a,t)=>{const i="37",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),[l,p="",f,u,...F]=o(e),g=Y(f),m=Y(u),D=Z(F,4,t),v=[];return(l||p)&&v.push(Object.assign({id:"proc:37:summon",originalId:i,sources:c,effectDelay:r,value:{summonGroup:l,summonId:p,positionX:g,positionY:m}},s)),d(v,D,{originalId:i,sources:c,targetData:s,effectDelay:r}),v}),e.set("38",(e,a,t)=>{const i="38",{targetData:o,sources:r,effectDelay:l}=n(e,a,t),p=[];let u;if(e.params){const a=c(e),i=a.slice(0,9),n=a.slice(9);i.filter(e=>"0"!==e).forEach(e=>{p.push(s[e]||f.Unknown)}),u=Z(n,9,t)}else if(Array.isArray(e["ailments cured"])){const a=e["ailments cured"];if(Object.values(s).forEach(e=>{const t=e!==f.Weak?e:"weaken";a.includes(t)&&p.push(e)}),a.length>p.length){const e=a.length-p.length;for(let a=0;a<e;++a)p.push(f.Unknown)}}const F=p.map(e=>Object.assign({id:"proc:38:cleanse-"+e,originalId:i,sources:r,effectDelay:l,value:!0},o));return d(F,u,{originalId:i,sources:r,targetData:o,effectDelay:l}),F}),e.set("39",(e,a,t)=>{const s="39",{targetData:o,sources:r,effectDelay:f}=n(e,a,t),u=[];let F,g=0,m=0;if(e.params){const a=c(e),s=a.slice(0,6);g=Y(a[6]),m=Y(a[7]),s.forEach(e=>{"0"!==e&&u.push(i[e]||W.Unknown)}),F=Z(a.slice(8),8,t)}else Object.values(i).forEach(a=>{e[`mitigate ${a} attacks`]&&u.push(a)}),g=Y(e["dmg% mitigation for elemental attacks"]),m=Y(e["dmg% mitigation for elemental attacks buff turns"]);const D=[];return u.length>0?u.forEach(e=>{D.push(Object.assign({id:"proc:39:mitigate-"+e,originalId:s,sources:r,effectDelay:f,duration:m,value:g},o))}):0!==g?D.push(Object.assign({id:"proc:39:mitigate-unknown",originalId:s,sources:r,effectDelay:f,duration:m,value:g},o)):p(a,m,t)&&D.push(l({originalId:s,sources:r,buffs:Object.values(i).concat([W.Unknown]).map(e=>"proc:39:mitigate-"+e),duration:m,targetData:o})),d(D,F,{originalId:s,sources:r,targetData:o,effectDelay:f}),D}),e.set("40",(e,a,t)=>{const i="40",{targetData:o,sources:r,effectDelay:u}=n(e,a,t),F=[];let g,m=0;if(e.params){const a=c(e);for(let e=0;e<8;e+=2){const t=a[e],i=Y(a[e+1]);if("0"!==t||0!==i){const e=s[t]||f.Unknown;F.push({ailment:e,chance:i})}}m=Y(a[8]),g=Z(a.slice(9),9,t)}else Object.values(s).forEach(a=>{let t;t=a===f.Weak?"weaken% buff":a===f.AttackReduction||a===f.DefenseReduction||a===f.RecoveryReduction?a+" buff":a+"% buff",t in e&&F.push({ailment:a,chance:Y(e[t])})}),m=Y(e["buff turns"]);const D=F.map(({ailment:e,chance:a})=>Object.assign({id:"proc:40:add ailment-"+e,originalId:i,sources:r,effectDelay:u,duration:m,value:a},o));return 0===D.length&&p(a,m,t)&&D.push(l({originalId:i,sources:r,duration:m,buffs:Object.values(s).concat([f.Unknown]).map(e=>"proc:40:add ailment-"+e),targetData:o})),d(D,g,{originalId:i,sources:r,targetData:o,effectDelay:u}),D}),e.set("42",(e,a,t)=>{const i="42",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),[f,F,m,...v]=o(e),E={"atkLow%":f,"atkHigh%":F,flatAtk:m},B=Z(v,3,t),T=Object.entries(E).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{});let U;return U=0!==l||0!==p||Object.keys(T).length>0?[Object.assign({id:"proc:42:sacrificial attack",originalId:i,sources:c,effectDelay:r,value:Object.assign(Object.assign({},T),{hits:l,distribution:p})},s),{id:"proc:42:instant death",originalId:i,sources:c,effectDelay:r,value:!0,targetArea:g.Single,targetType:D.Self}]:[],d(U,B,{originalId:i,sources:c,targetData:s,effectDelay:r}),U}),e.set("43",(e,a,t)=>{const i="43",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0;if(e.params){const[a,...i]=c(e);p=Y(a),l=Z(i,1,t)}else p=Y(e["increase od gauge%"]);const f=[];return 0!==p&&f.push(Object.assign({id:"proc:43:burst od fill",originalId:i,sources:o,effectDelay:r,value:p},s)),d(f,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),f}),e.set("44",(e,a,t)=>{const i="44",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),f={"atk%":"0",flatAtk:"0","dmg%":"0"};let u,F=!1,g=0,m=0;if(e.params){let a,i,s,n;[f["atk%"],f.flatAtk,f["dmg%"],i,s,n,...a]=c(e),F="1"!==i,g=Y(s),m=Y(n),u=Z(a,6,t)}else f["atk%"]=e["dot atk%"],f.flatAtk=e["dot flat atk"],f["dmg%"]=e["dot dmg%"],F=!!e["dot element affected"],g=Y(e["dot unit index"]),m=Y(e["dot turns (71)"]);const D=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),v=[];return Object.keys(D).length>0?v.push(Object.assign({id:"proc:44:damage over time",originalId:i,sources:o,effectDelay:r,duration:m,value:Object.assign(Object.assign({},D),{affectsElement:F,unitIndex:g})},s)):p(a,m,t)&&v.push(l({originalId:i,sources:o,buffs:["proc:44:damage over time"],duration:m,targetData:s})),d(v,u,{originalId:i,sources:o,targetData:s,effectDelay:r}),v}),e.set("45",(e,a,t)=>{const i="45",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0,m=0;if(e.params){const[a,i,s,n,...o]=c(e);u=Y(a),F=Y(i),g=Y(s),m=Y(n),f=Z(o,4,t)}else u=Y(e["bb atk% buff"]),F=Y(e["sbb atk% buff"]),g=Y(e["ubb atk% buff"]),m=Y(e["buff turns (72)"]);const D=[];return 0!==u&&D.push(Object.assign({id:"proc:45:attack boost-bb",originalId:i,sources:o,effectDelay:r,duration:m,value:u},s)),0!==F&&D.push(Object.assign({id:"proc:45:attack boost-sbb",originalId:i,sources:o,effectDelay:r,duration:m,value:F},s)),0!==g&&D.push(Object.assign({id:"proc:45:attack boost-ubb",originalId:i,sources:o,effectDelay:r,duration:m,value:g},s)),0===D.length&&p(a,m,t)&&D.push(l({originalId:i,sources:o,buffs:["bb","sbb","ubb"].map(e=>"proc:45:attack boost-"+e),duration:m,targetData:s})),d(D,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),D}),e.set("46",(e,a,t)=>{const i="46",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),[f,F,...g]=o(e),m=Y(f),D=Y(F),v=Z(g,2,t),E=[];if(0!==m||0!==D||0!==l||0!==p){const e=Object.assign({id:"proc:46:non-lethal proportional attack",originalId:i,sources:c,effectDelay:r,value:{hits:l,distribution:p}},s);0===m&&0===D||(e.value={"hpDamageLow%":m,"hpDamageHigh%":D,hits:l,distribution:p}),E.push(e)}return d(E,v,{originalId:i,sources:c,targetData:s,effectDelay:r}),E}),e.set("47",(e,a,t)=>{const i="47",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),f={"baseAtk%":"0","maxAddedAtk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let F,g="unknown";if(e.params){let a,i,s;[f["baseAtk%"],i,s,f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...a]=c(e),f["maxAddedAtk%"]=Y(i)-Y(f["baseAtk%"]),g="1"===s?"lost":"remaining",F=Z(a,8,t)}else f["baseAtk%"]=e["bb base atk%"],f["maxAddedAtk%"]=e["bb added atk% based on hp"],g=e["bb added atk% proportional to hp"]||"unknown",f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const m=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),D=[];return(0!==l||0!==p||Object.keys(m).length>0)&&D.push(Object.assign({id:"proc:47:hp scaled attack",originalId:i,sources:o,effectDelay:r,value:Object.assign(Object.assign({},m),{proportionalMode:g,hits:l,distribution:p})},s)),d(D,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),D}),e.set("48",(e,a,t)=>{const i="48",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),[f,F,g,m,D,v,E,...B]=o(e),T=Y(f),U=Y(F),b=Y(g),k=Y(m),h=Y(D),A=Y(v),R="1"===E,_=Z(B,7,t),I=[],y=(e,a)=>Object.assign({id:"proc:48:piercing attack-"+e,originalId:i,sources:c,effectDelay:r,value:Object.assign(Object.assign({},a),{isLethal:R,chance:A,hits:l,distribution:p})},s);return 0===T&&0===U||I.push(y("base",{"hpDamageLow%":T,"hpDamageHigh%":U})),0===b&&0===k||I.push(y("current",{"hpDamageLow%":b,"hpDamageHigh%":k})),0!==h&&I.push(y("fixed",{value:h})),0!==I.length||0===l&&0===p||I.push(y("unknown",{})),d(I,_,{originalId:i,sources:c,targetData:s,effectDelay:r}),I}),e.set("49",(e,a,t)=>{const i="49",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),[l,...p]=o(e),f=Y(l),u=Z(p,1,t),F=[];return 0!==f&&F.push(Object.assign({id:"proc:49:chance instant death",originalId:i,sources:c,effectDelay:r,value:f},s)),d(F,u,{originalId:i,sources:c,targetData:s,effectDelay:r}),F}),e.set("50",(e,a,t)=>{const i="50",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),[f,u,F,g,...m]=o(e),D=Y(f),v=Y(u),E=Y(F),B=Y(g),T=Z(m,4,t),U=[];return 0!==D||0!==v?U.push(Object.assign({id:"proc:50:chance damage reflect",originalId:i,sources:c,effectDelay:r,duration:B,value:{"reflectedDamageLow%":D,"reflectedDamageHigh%":v,chance:E}},s)):p(a,B,t)&&U.push(l({originalId:i,sources:c,buffs:["proc:50:chance damage reflect"],duration:B,targetData:s})),d(U,T,{originalId:i,sources:c,targetData:s,effectDelay:r}),U}),e.set("51",(e,a,t)=>{const i="51",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),l=[];let u,F=0,g=0;if(e.params){const a=c(e);[{type:f.AttackReduction,reductionValue:Y(a[0]),chance:Y(a[3])},{type:f.DefenseReduction,reductionValue:Y(a[1]),chance:Y(a[4])},{type:f.RecoveryReduction,reductionValue:Y(a[2]),chance:Y(a[5])}].forEach(({type:e,reductionValue:a,chance:t})=>{0===a&&0===t||l.push({type:e,reductionValue:a,chance:t})}),F=Y(a[6]),g=Y(a[7]),u=Z(a.slice(8),8,t)}else[{type:f.AttackReduction,reductionValueKey:"inflict atk% debuff (2)",chanceKey:"inflict atk% debuff chance% (74)"},{type:f.DefenseReduction,reductionValueKey:"inflict def% debuff (4)",chanceKey:"inflict def% debuff chance% (75)"},{type:f.RecoveryReduction,reductionValueKey:"inflict rec% debuff (6)",chanceKey:"inflict rec% debuff chance% (76)"}].forEach(({type:a,reductionValueKey:t,chanceKey:i})=>{const s=Y(e[t]),n=Y(e[i]);0===s&&0===n||l.push({type:a,reductionValue:s,chance:n})}),F=Y(e["stat% debuff turns"]),g=Y(e["buff turns"]);const m=l.map(({type:e,reductionValue:a,chance:t})=>Object.assign({id:"proc:51:add to attack-"+e,originalId:i,sources:o,effectDelay:r,duration:g,value:{reductionValue:a,chance:t,debuffTurnDuration:F}},s));return 0===m.length&&(p(a,g,t)||p(a,F,t))&&m.push(Object.assign({id:G.TURN_DURATION_MODIFICATION,originalId:i,sources:o,value:{buffs:[f.AttackReduction,f.DefenseReduction,f.RecoveryReduction].map(e=>"proc:51:add to attack-"+e),duration:g,debuffTurnDuration:F}},s)),d(m,u,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("52",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"bb gauge fill rate% buff",effectTurnDurationKey:"buff turns (77)",buffId:"proc:52:bc efficacy",originalId:"52"})),e.set("53",(e,a,t)=>{const i="53",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),u=[f.Poison,f.Weak,f.Sick,f.Injury,f.Curse,f.Paralysis],F={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let g,m=0;if(e.params){let a,i;[F.poison,F.weak,F.sick,F.injury,F.curse,F.paralysis,a,...i]=c(e),m=Y(a),g=Z(i,7,t)}else{const a=Object.keys(e).filter(e=>e.startsWith("counter inflict"));u.forEach(t=>{const i=a.find(e=>e.includes(t));i&&(F[t]=e[i])}),m=Y(e["counter inflict ailment turns"])}const D=[];return u.forEach(e=>{const a=Y(F[e]);0!==a&&D.push(Object.assign({id:"proc:53:inflict on hit-"+e,originalId:i,sources:o,effectDelay:r,value:a,duration:m,conditions:{whenAttacked:!0}},s))}),0===D.length&&p(a,m,t)&&D.push(l({originalId:i,sources:o,buffs:u.map(e=>"proc:53:inflict on hit-"+e),duration:m,targetData:s})),d(D,g,{originalId:i,sources:o,targetData:s,effectDelay:r}),D}),e.set("54",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"crit multiplier%",effectTurnDurationKey:"buff turns (84)",parseParamValue:e=>100*Y(e),buffId:"proc:54:critical damage boost",originalId:"54"})),e.set("55",(e,a,t)=>{const s="55",{targetData:o,sources:r,effectDelay:f}=n(e,a,t);let u,F,g=0,m=0;if(e.params){const a=c(e);u=a.filter((e,a)=>"0"!==e&&a<6).map(e=>i[e]||W.Unknown),g=100*Y(a[6]),m=Y(a[7]),F=Z(a.slice(8),8,t)}else u=Object.values(i).filter(a=>!!e[a+" units do extra elemental weakness dmg"]),g=Y(e["elemental weakness multiplier%"]),m=Y(e["elemental weakness buff turns"]);let D=[];return 0!==g?(D=u.map(e=>Object.assign({id:"proc:55:elemental weakness damage-"+e,originalId:s,sources:r,effectDelay:f,duration:m,value:g},o)),0===D.length&&D.push(Object.assign({id:"proc:55:elemental weakness damage-unknown",originalId:s,sources:r,effectDelay:f,duration:m,value:g},o))):p(a,m,t)&&D.push(l({originalId:s,sources:r,buffs:Object.values(i).concat([W.Unknown]).map(e=>"proc:55:elemental weakness damage-"+e),duration:m,targetData:o})),d(D,F,{originalId:s,sources:r,targetData:o,effectDelay:f}),D}),e.set("56",(e,a,t)=>{const i="56",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0;if(e.params){const[a,i,s,...n]=c(e);u=Y(a),F=Y(i),g=Y(s),f=Z(n,3,t)}else u=Y(e["angel idol recover chance%"]),F=Y(e["angel idol recover hp%"]),g=Y(e["angel idol buff turns (91)"]);const m=[];return 0!==u?m.push(Object.assign({id:"proc:56:chance ko resistance",originalId:i,sources:o,effectDelay:r,duration:g,value:{"recoveredHp%":F,chance:u}},s)):p(a,g,t)&&m.push(l({originalId:i,sources:o,buffs:["proc:56:chance ko resistance"],duration:g,targetData:s})),d(m,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("57",(e,a,t)=>{const i="57",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0,m=0,D=0;if(e.params){const[a,i,s,n,o,...r]=c(e);u=Y(a),F=Y(i),g=Y(s),m=Y(n),D=Y(o),f=Z(r,5,t)}else u=Y(e["base bc drop% resist buff"]),F=Y(e["buffed bc drop% resist buff"]),D=Y(e["bc drop% resist buff turns (92)"]);const v=[];return 0!==u&&v.push(Object.assign({id:"proc:57:bc drop resistance-base",originalId:i,sources:o,effectDelay:r,duration:D,value:u},s)),0!==F&&v.push(Object.assign({id:"proc:57:bc drop resistance-buff",originalId:i,sources:o,effectDelay:r,duration:D,value:F},s)),0!==g&&v.push(Object.assign({id:"proc:57:hc drop resistance-base",originalId:i,sources:o,effectDelay:r,duration:D,value:g},s)),0!==m&&v.push(Object.assign({id:"proc:57:hc drop resistance-buff",originalId:i,sources:o,effectDelay:r,duration:D,value:m},s)),0===v.length&&p(a,D,t)&&v.push(l({originalId:i,sources:o,buffs:["proc:57:bc drop resistance-base","proc:57:bc drop resistance-buff","proc:57:hc drop resistance-base","proc:57:hc drop resistance-buff"],duration:D,targetData:s})),d(v,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),v}),e.set("58",(e,a,t)=>{const i="58",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0;if(e.params){const[a,i,s,...n]=c(e);u=Y(a),F=Y(i),g=Y(s),f=Z(n,3,t)}else u=Y(e["spark dmg% received"]),F=Y(e["spark dmg received apply%"]),g=Y(e["spark dmg received debuff turns (94)"]);const m=[];return 0!==F?m.push(Object.assign({id:"proc:58:spark vulnerability",originalId:i,sources:o,effectDelay:r,duration:g,value:{"sparkDamage%":u,chance:F}},s)):p(a,g,t)&&m.push(l({originalId:i,sources:o,buffs:["proc:58:spark vulnerability"],duration:g,targetData:s})),d(m,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("59",(e,a,t)=>{const i="59",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),[f,u,F,g,...m]=o(e),D=Y(f),v=Y(u),E=Y(F),B=Y(g),T=Z(m,4,t),U=[];return 0!==D&&U.push(Object.assign({id:"proc:59:attack reduction-bb",originalId:i,sources:c,effectDelay:r,duration:B,value:D},s)),0!==v&&U.push(Object.assign({id:"proc:59:attack reduction-sbb",originalId:i,sources:c,effectDelay:r,duration:B,value:v},s)),0!==E&&U.push(Object.assign({id:"proc:59:attack reduction-ubb",originalId:i,sources:c,effectDelay:r,duration:B,value:E},s)),0===U.length&&p(a,B,t)&&U.push(l({originalId:i,sources:c,buffs:["bb","sbb","ubb"].map(e=>"proc:59:attack reduction-"+e),duration:B,targetData:s})),d(U,T,{originalId:i,sources:c,targetData:s,effectDelay:r}),U}),e.set("61",(e,a,t)=>{const i="61",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),f={"baseAtk%":"0","maxAddedAtk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let F;if(e.params){let a,i;[f["baseAtk%"],i,f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...a]=c(e),f["maxAddedAtk%"]=Y(i),F=Z(a,7,t)}else f["baseAtk%"]=e["bb base atk%"],f["maxAddedAtk%"]=e["bb max atk% based on ally bb gauge and clear bb gauges"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const m=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{});let v;return v=0!==l||0!==p||Object.keys(m).length>0?[Object.assign({id:"proc:61:party bb gauge-scaled attack",originalId:i,sources:o,effectDelay:r,value:Object.assign(Object.assign({},m),{hits:l,distribution:p})},s),{id:"proc:61:party bc drain",originalId:i,sources:o,effectDelay:r,value:!0,targetArea:g.Aoe,targetType:D.Party}]:[],d(v,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),v}),e.set("62",(e,a,i)=>{const s="62",{targetData:o,sources:r,effectDelay:l}=n(e,a,i);let p,f,u=0,F=0,g=0;if(e.params){const[a,s,n,o,...r]=c(e);p=t[a]||W.Unknown,u=Y(s),F=Y(n),g=Y(o),f=Z(r,4,i)}else{const a=e["elemental barrier element"];p=a&&Object.values(t).find(e=>e===a)||W.Unknown,u=Y(e["elemental barrier hp"]),F=Y(e["elemental barrier def"]),g=Y(e["elemental barrier absorb dmg%"])}const m=[];return 0===u&&0===F&&0===g||m.push(Object.assign({id:"proc:62:barrier-"+p,originalId:s,sources:r,effectDelay:l,value:{hp:u,defense:F,"damageAbsorption%":g}},o)),d(m,f,{originalId:s,sources:r,targetData:o,effectDelay:l}),m}),e.set("64",(e,a,t)=>{const i="64",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),{hits:l,distribution:p}=u(a),f={"atk%":"0","addedAtkPerUse%":"0",maxIncreases:"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let F;if(e.params){let a;[f["atk%"],f["addedAtkPerUse%"],f.maxIncreases,f.flatAtk,f["crit%"],f["bc%"],f["hc%"],f["dmg%"],...a]=c(e),F=Z(a,8,t)}else f["atk%"]=e["bb atk%"],f["addedAtkPerUse%"]=e["bb atk% inc per use"],f.maxIncreases=e["bb atk% max number of inc"],f.flatAtk=e["bb flat atk"],f["crit%"]=e["bb crit%"],f["bc%"]=e["bb bc%"],f["hc%"]=e["bb hc%"],f["dmg%"]=e["bb dmg%"];const g=Object.entries(f).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),m=[];return(0!==l||0!==p||Object.keys(g).length>0)&&m.push(Object.assign({id:"proc:64:consecutive usage attack",originalId:i,sources:o,effectDelay:r,value:Object.assign(Object.assign({},g),{hits:l,distribution:p})},s)),d(m,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("65",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"atk% buff when enemy has ailment",effectTurnDurationKey:"atk% buff turns (110)",buffId:"proc:65:ailment attack boost",originalId:"65"})),e.set("66",(e,a,t)=>{const i="66",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0,f=0;if(e.params){const[a,i,...s]=c(e);p=Y(a),f=Y(i),l=Z(s,2,t)}else p=Y(e["revive unit hp%"]),f=Y(e["revive unit chance%"]);const u=[];return 0!==f&&u.push(Object.assign({id:"proc:66:chance revive",originalId:i,sources:o,effectDelay:r,value:{"reviveToHp%":p,chance:f}},s)),d(u,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),u}),e.set("67",(e,a,t)=>m({effect:e,context:a,injectionContext:t,originalId:"67",buffId:"proc:67:bc fill on spark",effectKeyLow:"bc fill on spark low",effectKeyHigh:"bc fill on spark high",effectKeyChance:"bc fill on spark%",effectTurnDurationKey:"bc fill on spark buff turns (111)",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>Y(e)/100})),e.set("68",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"guard increase mitigation%",effectTurnDurationKey:"guard increase mitigation buff turns (113)",buffId:"proc:68:guard mitigation",originalId:"68"})),e.set("69",(e,a,t)=>{const i="69",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0;if(e.params){const[a,i,s,...n]=c(e);u=Y(a)/100,F=Y(i),g=Y(s),f=Z(n,3,t)}else"bb bc fill on guard"in e&&(u=Y(e["bb bc fill on guard"])),"bb bc fill% on guard"in e&&(F=Y(e["bb bc fill% on guard"])),g=Y(e["bb bc fill on guard buff turns (114)"]);const m=[];return 0!==u&&m.push(Object.assign({id:"proc:69:bc fill on guard-flat",originalId:i,sources:o,effectDelay:r,duration:g,value:u,conditions:{onGuard:!0}},s)),0!==F&&m.push(Object.assign({id:"proc:69:bc fill on guard-percent",originalId:i,sources:o,effectDelay:r,duration:g,value:F,conditions:{onGuard:!0}},s)),0===m.length&&p(a,g,t)&&m.push(l({originalId:i,sources:o,buffs:["proc:69:bc fill on guard-flat","proc:69:bc fill on guard-percent"],duration:g,targetData:s})),d(m,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("71",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"bb fill inc%",effectTurnDurationKey:"bb fill inc buff turns (112)",buffId:"proc:71:bc efficacy reduction",originalId:"71"})),e.set("73",(e,a,t)=>{const i="73",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),u=[f.AttackReduction,f.DefenseReduction,f.RecoveryReduction],F={[f.AttackReduction]:"0",[f.DefenseReduction]:"0",[f.RecoveryReduction]:"0"};let g,m=0;if(e.params){let a,i;[F[f.AttackReduction],F[f.DefenseReduction],F[f.RecoveryReduction],a,...i]=c(e),m=Y(a),g=Z(i,4,t)}else{const a=Object.keys(e).filter(e=>e.includes("resist%"));u.forEach(t=>{const i=a.find(e=>e.includes(t));i&&(F[t]=e[i])}),m=Y(e["stat down immunity buff turns"])}const D=[];return u.forEach(e=>{const a=Y(F[e]);0!==a&&D.push(Object.assign({id:"proc:73:resist-"+e,originalId:i,sources:o,effectDelay:r,value:a,duration:m},s))}),0===D.length&&p(a,m,t)&&D.push(l({originalId:i,sources:o,buffs:u.map(e=>"proc:73:resist-"+e),duration:m,targetData:s})),d(D,g,{originalId:i,sources:o,targetData:s,effectDelay:r}),D}),e.set("75",(e,a,i)=>{const s="75",{targetData:o,sources:r,effectDelay:l}=n(e,a,i),{hits:p,distribution:f}=u(a),F={"baseAtk%":"0","addedAttackPerUnitWithMatchingElement%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"};let g,m;if(e.params){let a,s;[s,F["baseAtk%"],F["addedAttackPerUnitWithMatchingElement%"],F.flatAtk,F["crit%"],F["bc%"],F["hc%"],F["dmg%"],...a]=c(e),g=t[s]||W.Unknown,m=Z(a,8,i)}else{const a=e["counted element for buff multiplier"];g=a||W.Unknown,F["baseAtk%"]=e["atk% buff (1)"],F["addedAttackPerUnitWithMatchingElement%"]=e["def% buff (3)"],F.flatAtk=e["rec% buff (5)"],F["crit%"]=e["crit% buff (7)"],F["bc%"]=e["buff turns"]}const D=Object.entries(F).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),v=[];return(0!==p||0!==f||Object.keys(D).length>0)&&v.push(Object.assign({id:"proc:75:element squad-scaled attack",originalId:s,sources:r,effectDelay:l,value:Object.assign(Object.assign({},D),{elementToMatch:g,hits:p,distribution:f})},o)),d(v,m,{originalId:s,sources:r,targetData:o,effectDelay:l}),v}),e.set("76",(e,a,t)=>{const i="76",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0;if(e.params){const[a,i,s,...n]=c(e);u=Y(a),F=Y(i),g=Y(s),f=Z(n,3,t)}else u=Y(e["max number of extra actions"]),F=Y(e["chance% for extra action"]),g=Y(e["extra action buff turns (123)"]);const m=[];return 0!==F?m.push(Object.assign({id:"proc:76:extra action",originalId:i,sources:o,effectDelay:r,duration:g,value:{maxExtraActions:u,chance:F}},s)):p(a,g,t)&&m.push(l({originalId:i,sources:o,buffs:["proc:76:extra action"],duration:g,targetData:s})),d(m,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("78",(e,a,t)=>{const i="78",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),f={atk:"0",def:"0",rec:"0",crit:"0",turnDuration:"0"},u=["atk","def","rec","crit"];let F;if(e.params){let a;[f.atk,f.def,f.rec,f.crit,f.turnDuration,...a]=c(e),F=Z(a,5,t)}else u.forEach(a=>{const t=`self ${a}% buff`;t in e&&(f[a]=e[t])}),f.turnDuration=e["self stat buff turns"];u.concat(["turnDuration"]).forEach(e=>{f[e]=Y(f[e])});const g=u.some(e=>0!==f[e]),m=[];return g?u.forEach(e=>{const a=f[e];0!==a&&m.push(Object.assign({id:"proc:78:self stat boost-"+e,originalId:i,sources:o,effectDelay:r,duration:f.turnDuration,value:a},s))}):p(a,f.turnDuration,t)&&m.push(l({originalId:i,sources:o,buffs:u.map(e=>"proc:78:self stat boost-"+e),duration:f.turnDuration,targetData:s})),d(m,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("79",(e,a,t)=>{const i="79",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),[l,p="",...f]=o(e),u=Y(l),F=Y(p),g=Z(f,2,t),m=[];return 0!==u&&m.push(Object.assign({id:"proc:79:player exp boost",originalId:i,sources:c,effectDelay:r,value:{"expBoost%":u,durationInMinutes:F}},s)),d(m,g,{originalId:i,sources:c,targetData:s,effectDelay:r}),m}),e.set("82",(e,a,t)=>{const i="82",{targetData:s,sources:c,effectDelay:r}=n(e,a,t),[l,p,...f]=o(e),u=Y(p),F=Z(f,2,t),g=[];return l&&g.push(Object.assign({id:"proc:82:resummon",originalId:i,sources:c,effectDelay:r,value:{summonGroup:l,"startingHp%":u}},s)),d(g,F,{originalId:i,sources:c,targetData:s,effectDelay:r}),g}),e.set("83",(e,a,t)=>{const i="83",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0;if(e.params){const[a,i,s,...n]=c(e);u=Y(a),F=Y(i),g=Y(s),f=Z(n,3,t)}else u=Y(e["spark dmg inc chance%"]),F=Y(e["spark dmg inc% buff"]),g=Y(e["spark dmg inc buff turns (131)"]);const m=[];return 0!==F||0!==u?m.push(Object.assign({id:"proc:83:spark critical",originalId:i,sources:o,effectDelay:r,duration:g,value:{"sparkDamage%":F,chance:u}},s)):p(a,g,t)&&m.push(l({originalId:i,sources:o,buffs:["proc:83:spark critical"],duration:g,targetData:s})),d(m,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("84",(e,a,t)=>F({effect:e,context:a,injectionContext:t,effectValueKey:"od fill rate% buff",effectTurnDurationKey:"od fill rate buff turns (132)",buffId:"proc:84:od fill rate",originalId:"84"})),e.set("85",(e,a,t)=>m({effect:e,context:a,injectionContext:t,originalId:"85",buffId:"proc:85:heal on hit",effectKeyLow:"hp recover from dmg% low",effectKeyHigh:"hp recover from dmg% high",effectKeyChance:"hp recover from dmg chance",effectTurnDurationKey:"hp recover from dmg buff turns (133)",buffKeyLow:"healLow",buffKeyHigh:"healHigh",generateConditions:()=>({whenAttacked:!0})})),e.set("86",(e,a,t)=>m({effect:e,context:a,injectionContext:t,originalId:"86",buffId:"proc:86:hp absorb",effectKeyLow:"hp drain% low",effectKeyHigh:"hp drain% high",effectKeyChance:"hp drain chance%",effectTurnDurationKey:"hp drain buff turns (134)",buffKeyLow:"drainHealLow%",buffKeyHigh:"drainHealHigh%"})),e.set("87",(e,a,t)=>m({effect:e,context:a,injectionContext:t,originalId:"87",buffId:"proc:87:heal on spark",effectKeyLow:"spark recover hp low",effectKeyHigh:"spark recover hp high",effectKeyChance:"spark recover hp chance%",effectTurnDurationKey:"spark recover hp buff turns (135)",buffKeyLow:"healLow",buffKeyHigh:"healHigh"})),e.set("88",(e,a,t)=>{const i="88",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0;if(e.params){const a=c(e);u=Y(a[0]),F=Y(a[6]);f=Z(["0",...a.slice(1,6),"0",...a.slice(7)],0,t)}else u=Y(e["spark dmg inc%"]),F=Y(e["spark dmg inc% turns (136)"]);const g=[];return 0!==u?g.push(Object.assign({id:"proc:88:self spark damage",originalId:i,sources:o,effectDelay:r,duration:F,value:u},s)):p(a,F,t)&&g.push(l({originalId:i,sources:o,buffs:["proc:88:self spark damage"],duration:F,targetData:s})),d(g,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),g}),e.set("89",(e,a,t)=>{const i="89",{targetData:s,sources:o,effectDelay:r}=n(e,a,t),f=["atk","def","rec"],u={1:"atk",2:"def",3:"rec",4:"hp"},F={atk:"0",def:"0",rec:"0"};let g,m=0,D="unknown";if(e.params){let a,i,s;[i,F.atk,F.def,F.rec,s,...a]=c(e),D=u[i]||"unknown",m=Y(s),g=Z(a,5,t)}const v=[];return f.forEach(e=>{const a=Y(F[e]);0!==a&&v.push(Object.assign({id:"proc:89:self converted-"+e,originalId:i,sources:o,effectDelay:r,duration:m,value:{convertedStat:D,value:a}},s))}),0===v.length&&p(a,m,t)&&v.push(l({originalId:i,sources:o,buffs:f.map(e=>"proc:89:self converted-"+e),duration:m,targetData:s})),d(v,g,{originalId:i,sources:o,targetData:s,effectDelay:r}),v}),e.set("92",(e,a,t)=>{const i="92",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let l,p=0,f=0;if(e.params){const[a,i,...s]=c(e);p=Y(a),f=Y(i),l=Z(s,2,t)}const u=[];return 0!==p&&u.push(Object.assign({id:"proc:92:self max hp boost-flat",originalId:i,sources:o,effectDelay:r,value:p},s)),0!==f&&u.push(Object.assign({id:"proc:92:self max hp boost-percent",originalId:i,sources:o,effectDelay:r,value:f},s)),d(u,l,{originalId:i,sources:o,targetData:s,effectDelay:r}),u}),e.set("93",(e,a,t)=>{const i="93",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f;!function(e){e.CriticalDamage="critical damage",e.ElementDamage="element damage",e.SparkDamage="spark damage"}(f||(f={}));const u=[];let F,g=0;if(e.params){const[a,i,s,n,o,r,l,...d]=c(e);[{resistType:f.CriticalDamage,base:Y(a),buff:Y(i)},{resistType:f.ElementDamage,base:Y(s),buff:Y(n)},{resistType:f.SparkDamage,base:Y(o),buff:Y(r)}].forEach(({resistType:e,base:a,buff:t})=>{0===a&&0===t||u.push({resistType:e,base:a,buff:t})}),g=Y(l),F=Z(d,7,t)}else[{resistType:f.CriticalDamage,baseKey:"crit dmg base damage resist% (143)",buffKey:"crit dmg buffed damage resist% (143)"},{resistType:f.ElementDamage,baseKey:"strong base element damage resist% (144)",buffKey:"strong buffed element damage resist% (144)"},{resistType:f.SparkDamage,baseKey:"spark dmg base resist% (145)",buffKey:"spark dmg buffed resist% (145)"}].forEach(({resistType:a,baseKey:t,buffKey:i})=>{const s=Y(e[t]),n=Y(e[i]);0===s&&0===n||u.push({resistType:a,base:s,buff:n})}),g=Y(e["dmg resist turns"]);const m=[];if(u.forEach(({resistType:e,base:a,buff:t})=>{0!==a&&m.push(Object.assign({id:`proc:93:${e} resistance-base`,originalId:i,sources:o,effectDelay:r,duration:g,value:a},s)),0!==t&&m.push(Object.assign({id:`proc:93:${e} resistance-buff`,originalId:i,sources:o,effectDelay:r,duration:g,value:t},s))}),0===m.length&&p(a,g,t)){const e=[];[f.CriticalDamage,f.ElementDamage,f.SparkDamage].forEach(a=>{e.push(`proc:93:${a} resistance-base`,`proc:93:${a} resistance-buff`)}),m.push(l({originalId:i,sources:o,buffs:e,duration:g,targetData:s}))}return d(m,F,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("94",(e,a,t)=>{const i="94",{targetData:s,sources:o,effectDelay:r}=n(e,a,t);let f,u=0,F=0,g=0;if(e.params){const[a,i,s,...n]=c(e);u=Y(a),F=Y(i),g=Y(s),f=Z(n,3,t)}else u=Y(e["aoe atk inc%"]),F=Y(e["chance to aoe"]),g=Y(e["aoe atk turns (142)"]);const m=[];return 0!==F?m.push(Object.assign({id:"proc:94:aoe normal attack",originalId:i,sources:o,effectDelay:r,duration:g,value:{"damageModifier%":u,chance:F}},s)):p(a,g,t)&&m.push(l({originalId:i,sources:o,buffs:["proc:94:aoe normal attack"],duration:g,targetData:s})),d(m,f,{originalId:i,sources:o,targetData:s,effectDelay:r}),m}),e.set("95",(e,a,t)=>F({effect:e,context:a,injectionContext:t,buffId:"proc:95:sphere lock",originalId:"95"})),e.set("96",(e,a,t)=>F({effect:e,context:a,injectionContext:t,buffId:"proc:96:es lock",originalId:"96"})),e.set("97",(e,a,i)=>{const s="97",{targetData:o,sources:r,effectDelay:l}=n(e,a,i),p={[k.Fire]:k.Earth,[k.Water]:k.Fire,[k.Earth]:k.Thunder,[k.Thunder]:k.Water,[k.Light]:k.Dark,[k.Dark]:k.Light},f=e=>e&&Object.hasOwnProperty.call(p,e)?p[e]:W.Unknown,{hits:F,distribution:g}=u(a),m={"atk%":"0",flatAtk:"0","crit%":"0","bc%":"0","hc%":"0","dmg%":"0"},D=[f(a.sourceElement)];let v;if(e.params){let a,s;[s,m["atk%"],m.flatAtk,m["crit%"],m["bc%"],m["hc%"],m["dmg%"],...a]=c(e),s&&"0"!==s&&D.push(f(t[s])),v=Z(a,7,i)}else{const a=e["additional element used for attack check"];a&&"self only"!==a?D.push(f(a)):a||D.push(W.Unknown),m["atk%"]=e["bb atk%"],m.flatAtk=e["bb flat atk"],m["crit%"]=e["bb crit%"],m["bc%"]=e["bb bc%"],m["hc%"]=e["bb hc%"],m["dmg%"]=e["bb dmg%"]}const E=Object.entries(m).filter(([,e])=>e&&+e).reduce((e,[a,t])=>(e[a]=Y(t),e),{}),B=[];return(0!==F||0!==g||Object.keys(E).length>0)&&B.push(Object.assign({id:"proc:97:element specific attack",originalId:s,sources:r,effectDelay:l,value:Object.assign(Object.assign({},E),{hits:F,distribution:g}),conditions:{targetElements:D}},o)),d(B,v,{originalId:s,sources:r,targetData:o,effectDelay:l}),B})}(ee)),ee}function se(e,a){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!a||"object"!=typeof a)throw new TypeError("context parameter should be an object");const s=S(e)&&t(e),n=s&&ie(a.reloadMapping).get(s);return"function"==typeof n?n(e,a):function(e,a){const s=S(e)&&t(e)||i.Unknown;return[{id:G.UNKNOWN_PROC_EFFECT_ID,originalId:s,effectDelay:e["effect delay time(ms)/frame"],targetType:e["target type"],targetArea:e["target area"],sources:V(a)}]}(e,a)}function ne(e){return ae&&!e||(ae=new Map,function(e){const a={0:W.All,1:k.Fire,2:k.Water,3:k.Earth,4:k.Thunder,5:k.Light,6:k.Dark},t=(e,{originalId:a,sources:t,targetData:i})=>Object.assign({id:G.UNKNOWN_CONDITIONAL_BUFF_PARAMS,originalId:a,sources:t,value:e},i),i=(e,a,{originalId:i,sources:s,targetData:n})=>{0===e.length&&e.push(J({originalId:i,sources:s})),a&&e.push(t(a,{originalId:i,sources:s,targetData:n}))},s=()=>({targetType:D.Self,targetArea:g.Single}),n=(e,a,t)=>{const i=(t&&t.createSourcesFromContext||V)(a),n="string"==typeof e.params?e.params.split("&"):[];return{targetData:s(),sources:i,splitParams:n,turnDuration:Y(e.turnDuration)}},c=({effect:e,context:a,injectionContext:t,originalId:s,buffId:c,returnBuffWithValueOfZero:o=!1,parseParamValue:r=(e=>Y(e))})=>{const{targetData:l,sources:d,splitParams:p,turnDuration:f}=n(e,a,t),[u,...F]=p,g=r(u),m=Z(F,1,t),D=[];return(o||0!==g)&&D.push(Object.assign({id:c,originalId:s,sources:d,duration:f,value:g},l)),i(D,m,{originalId:s,sources:d,targetData:l}),D},o=({effect:e,context:a,injectionContext:t,originalId:s,baseResistanceBuffId:c,buffResistanceBuffId:o})=>{const{targetData:r,sources:l,splitParams:d,turnDuration:p}=n(e,a,t),[f,u,...F]=d,g=Y(f),m=Y(u),D=Z(F,2,t),v=[];return 0!==g&&v.push(Object.assign({id:c,originalId:s,sources:l,duration:p,value:g},r)),0!==m&&v.push(Object.assign({id:o,originalId:s,sources:l,duration:p,value:m},r)),i(v,D,{originalId:s,sources:l,targetData:r}),v};e.set("1",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"1",buffId:"conditional:1:attack buff"})),e.set("3",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"3",buffId:"conditional:3:defense buff"})),e.set("5",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"5",buffId:"conditional:5:recovery buff"})),e.set("7",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"7",buffId:"conditional:7:critical hit rate buff"})),e.set("8",(e,a,t)=>{const s="8",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,...u]=r,F=Y(d),g=Y(p),m=10*(1+Y(f)/100),D=Z(u,3,t),v=[];return 0===F&&0===g||v.push(Object.assign({id:"conditional:8:gradual heal",originalId:s,sources:o,duration:l,value:{healLow:F,healHigh:g,"addedRec%":m}},c)),i(v,D,{originalId:s,sources:o,targetData:c}),v}),e.set("12",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"12",buffId:"conditional:12:guaranteed ko resistance",returnBuffWithValueOfZero:!0})),e.set("13",(e,t,s)=>{const c="13",{targetData:o,sources:r,splitParams:l,turnDuration:d}=n(e,t,s),[p,f,...u]=l,F=a[p]||W.Unknown,g=Y(f),m=Z(u,2,s),D=[];return 0!==g&&D.push(Object.assign({id:"conditional:13:elemental attack buff",originalId:c,sources:r,duration:d,value:g,conditions:{targetElements:[F]}},o)),i(D,m,{originalId:c,sources:r,targetData:o}),D}),e.set("14",(e,t,s)=>{const c="14",{targetData:o,sources:r,splitParams:l,turnDuration:d}=n(e,t,s),[p,f,...u]=l,F=a[p]||W.Unknown,g=Y(f),m=Z(u,2,s),D=[];return 0!==g&&D.push(Object.assign({id:"conditional:14:elemental defense buff",originalId:c,sources:r,duration:d,value:g,conditions:{targetElements:[F]}},o)),i(D,m,{originalId:c,sources:r,targetData:o}),D}),e.set("21",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"21",buffId:"conditional:21:fire mitigation"})),e.set("22",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"22",buffId:"conditional:22:water mitigation"})),e.set("23",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"23",buffId:"conditional:23:earth mitigation"})),e.set("24",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"24",buffId:"conditional:24:thunder mitigation"})),e.set("25",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"25",buffId:"conditional:25:light mitigation"})),e.set("26",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"26",buffId:"conditional:26:dark mitigation"})),e.set("36",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"36",buffId:"conditional:36:mitigation"})),e.set("37",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"37",buffId:"conditional:37:gradual bc fill",parseParamValue:e=>Y(e)/100})),e.set("40",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"40",buffId:"conditional:40:spark damage"})),e.set("51",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"51",buffId:"conditional:51:add fire element",returnBuffWithValueOfZero:!0})),e.set("52",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"52",buffId:"conditional:52:add water element",returnBuffWithValueOfZero:!0})),e.set("53",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"53",buffId:"conditional:53:add earth element",returnBuffWithValueOfZero:!0})),e.set("54",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"54",buffId:"conditional:54:add thunder element",returnBuffWithValueOfZero:!0})),e.set("55",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"55",buffId:"conditional:55:add light element",returnBuffWithValueOfZero:!0})),e.set("56",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"56",buffId:"conditional:56:add dark element",returnBuffWithValueOfZero:!0})),e.set("72",(e,a,t)=>{const s="72",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,...u]=r,F=Y(d),g=Y(p),m=Y(f),D=Z(u,3,t),v=[];return 0!==F&&v.push(Object.assign({id:"conditional:72:attack boost-bb",originalId:s,sources:o,duration:l,value:F},c)),0!==g&&v.push(Object.assign({id:"conditional:72:attack boost-sbb",originalId:s,sources:o,duration:l,value:g},c)),0!==m&&v.push(Object.assign({id:"conditional:72:attack boost-ubb",originalId:s,sources:o,duration:l,value:m},c)),i(v,D,{originalId:s,sources:o,targetData:c}),v}),e.set("74",(e,a,t)=>{const s="74",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,...u]=r,F=Y(d),g=Y(p),m=Y(f),D=Z(u,3,t),v=[];return 0===F&&0===g&&0===m||v.push(Object.assign({id:"conditional:74:add atk down to attack",originalId:s,sources:o,duration:l,value:{reductionValue:F,chance:g,debuffTurnDuration:m}},c)),i(v,D,{originalId:s,sources:o,targetData:c}),v}),e.set("75",(e,a,t)=>{const s="75",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,...u]=r,F=Y(d),g=Y(p),m=Y(f),D=Z(u,3,t),v=[];return 0===F&&0===g&&0===m||v.push(Object.assign({id:"conditional:75:add def down to attack",originalId:s,sources:o,duration:l,value:{reductionValue:F,chance:g,debuffTurnDuration:m}},c)),i(v,D,{originalId:s,sources:o,targetData:c}),v}),e.set("84",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"84",buffId:"conditional:84:critical damage",parseParamValue:e=>100*Y(e)})),e.set("91",(e,a,t)=>{const s="91",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,...f]=r,u=Y(d),F=Y(p),g=Z(f,2,t),m=[];return 0!==u&&m.push(Object.assign({id:"conditional:91:chance ko resistance",originalId:s,sources:o,duration:l,value:{"hpRecover%":F,chance:u}},c)),i(m,g,{originalId:s,sources:o,targetData:c}),m}),e.set("98",(e,t,s)=>{const c="98",{targetData:o,sources:r,splitParams:l,turnDuration:d}=n(e,t,s),[p,f,...u]=l,F=a[p]||p||W.Unknown,g=Y(f),m=Z(u,2,s),D=[];return 0!==g&&D.push(Object.assign({id:"conditional:98:thunder barrier",originalId:c,sources:r,duration:d,value:{hp:g,parsedElement:F}},o)),i(D,m,{originalId:c,sources:r,targetData:o}),D}),e.set("99",(e,t,s)=>{const c="99",{targetData:o,sources:r,splitParams:l,turnDuration:d}=n(e,t,s),[p,f,...u]=l,F=a[p]||p||W.Unknown,g=Y(f),m=Z(u,2,s),D=[];return 0!==g&&D.push(Object.assign({id:"conditional:99:light barrier",originalId:c,sources:r,duration:d,value:{hp:g,parsedElement:F}},o)),i(D,m,{originalId:c,sources:r,targetData:o}),D}),e.set("111",(e,a,t)=>{const s="111",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,...u]=r,F=Y(d)/100,g=Y(p)/100,m=Y(f),D=Z(u,3,t),v=[];return 0===F&&0===g&&0===m||v.push(Object.assign({id:"conditional:111:bc fill on spark",originalId:s,sources:o,duration:l,value:{fillLow:F,fillHigh:g,chance:m}},c)),i(v,D,{originalId:s,sources:o,targetData:c}),v}),e.set("124",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"124",buffId:"conditional:124:self attack buff"})),e.set("125",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"125",buffId:"conditional:125:self defense buff"})),e.set("131",(e,a,t)=>{const s="131",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,...f]=r,u=Y(d),F=Y(p),g=Z(f,2,t),m=[];return 0===u&&0===F||m.push(Object.assign({id:"conditional:131:spark critical",originalId:s,sources:o,duration:l,value:{chance:u,"sparkDamage%":F}},c)),i(m,g,{originalId:s,sources:o,targetData:c}),m}),e.set("132",(e,a,t)=>c({effect:e,context:a,injectionContext:t,originalId:"132",buffId:"conditional:132:od fill rate"})),e.set("133",(e,a,t)=>{const s="133",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,...u]=r,F=Y(d),g=Y(p),m=Y(f),D=Z(u,3,t),v=[];return 0===F&&0===g&&0===m||v.push(Object.assign({id:"conditional:133:heal on hit",originalId:s,sources:o,duration:l,value:{healLow:F,healHigh:g,chance:m},conditions:{whenAttacked:!0}},c)),i(v,D,{originalId:s,sources:o,targetData:c}),v}),e.set("143",(e,a,t)=>o({effect:e,context:a,injectionContext:t,originalId:"143",baseResistanceBuffId:"conditional:143:critical damage reduction-base",buffResistanceBuffId:"conditional:143:critical damage reduction-buff"})),e.set("144",(e,a,t)=>o({effect:e,context:a,injectionContext:t,originalId:"144",baseResistanceBuffId:"conditional:144:spark damage reduction-base",buffResistanceBuffId:"conditional:144:spark damage reduction-buff"})),e.set("145",(e,a,t)=>o({effect:e,context:a,injectionContext:t,originalId:"145",baseResistanceBuffId:"conditional:145:elemental weakness damage reduction-base",buffResistanceBuffId:"conditional:145:elemental weakness damage reduction-buff"})),e.set("153",(e,a,t)=>{const s="153",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,...u]=r,F=Y(d),g=Y(p),m=Y(f),D=Z(u,3,t),v=[];return 0===F&&0===g||v.push(Object.assign({id:"conditional:153:chance inflict atk down on hit",originalId:s,sources:o,duration:l,value:{reductionValue:F,chance:g,debuffTurnDuration:m},conditions:{whenAttacked:!0}},c)),i(v,D,{originalId:s,sources:o,targetData:c}),v}),e.set("10001",(e,a,t)=>{const s="10001",{targetData:c,sources:o,splitParams:r,turnDuration:l}=n(e,a,t),[d,p,f,u,...F]=r,g={atk:Y(d),def:Y(p),rec:Y(u),crit:Y(f)},m=Z(F,4,t),D=()=>Object.assign({originalId:s,sources:o,duration:l},c),v=[Object.assign(Object.assign({},D()),{id:"conditional:10001:stealth",value:!0})];return["atk","def","crit","rec"].forEach(e=>{const a=g[e];0!==a&&v.push(Object.assign(Object.assign({},D()),{id:"conditional:10001:stealth-"+e,value:a}))}),i(v,m,{originalId:s,sources:o,targetData:c}),v}),e.set("10500",(e,t,s)=>{const c="10500",{targetData:o,sources:r,splitParams:l,turnDuration:d}=n(e,t,s),[p,f,u,...F]=l,g=a[p]||W.Unknown,m=Y(f),D=Y(u),v=Z(F,3,s),E=[];return 0===m&&0===D||E.push(Object.assign({id:"conditional:10500:shield-"+g,originalId:c,sources:r,duration:d,value:{hp:m,defense:D}},o)),i(E,v,{originalId:c,sources:r,targetData:o}),E})}(ae)),ae}function ce(e,a){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!a||"object"!=typeof a)throw new TypeError("context parameter should be an object");const t=ne(a.reloadMapping).get(e.id);return"function"==typeof t?t(e,a):function(e,a){const t=e.id||n.Unknown;return[{id:G.UNKNOWN_CONDITIONAL_EFFECT_ID,originalId:t,sources:V(a)}]}(e,a)}function oe(e){return te&&!e||(te=new Map,function(e){const a="unknown passive params",t={1:k.Fire,2:k.Water,3:k.Earth,4:k.Thunder,5:k.Light,6:k.Dark,X:W.OmniParadigm},i={1:_.Lord,2:_.Anima,3:_.Breaker,4:_.Guardian,5:_.Oracle,6:_.Rex},s={1:f.Poison,2:f.Weak,3:f.Sick,4:f.Injury,5:f.Curse,6:f.Paralysis,7:f.AttackReduction,8:f.DefenseReduction,9:f.RecoveryReduction},n={1:D.Party,2:D.Enemy,3:D.Self},c={1:g.Single,2:g.Aoe},o=["atk","def","rec","crit","hp"],r=[f.Poison,f.Weak,f.Sick,f.Injury,f.Curse,f.Paralysis],l=["bc","hc","item","zel","karma"],d=(e,a,t)=>({conditionInfo:(t&&t.processExtraSkillConditions||$)(e),targetData:(t&&t.getPassiveTargetData||X)(e,a),sources:(t&&t.createSourcesFromContext||V)(a)}),p=(e,a,t)=>(t&&t.convertConditionalEffectToBuffs||ce)(e,a),u=(e,a,t)=>(t&&t.convertProcEffectToBuffs||se)(e,a),F=e=>e.params.split(","),m=e=>{const t=e.params||e[a]||"";return F({params:t})},v=(e,{originalId:a,sources:t,targetData:i,conditionInfo:s})=>Object.assign({id:G.UNKNOWN_PASSIVE_BUFF_PARAMS,originalId:a,sources:t,value:e,conditions:Object.assign({},s)},i),E=(e,a,{originalId:t,sources:i,targetData:s,conditionInfo:n})=>{0===e.length&&e.push(J({originalId:t,sources:i})),a&&e.push(v(a,{originalId:t,sources:i,targetData:s,conditionInfo:n}))};let B;!function(e){e.Hp="hp",e.Bb="bb gauge",e.DamageTaken="damage taken",e.DamageDealt="damage dealt",e.BcReceived="bc receive count",e.HcReceived="hc receive count",e.SparkCount="spark count",e.ChanceGuard="on guard",e.ChanceCrit="on crit"}(B||(B={}));const T=(e,a,t)=>({threshold:Y(e),requireAbove:"1"===a,type:t}),U=(e,a,t="buff requirement")=>{let i,s,n=!0;a===B.DamageTaken?i="damage threshold activation":a===B.DamageDealt?i="damage dealt threshold activation":a===B.BcReceived?(i="bc receive count buff activation",s="bc receive count activation"):a===B.HcReceived?(i="hc receive count buff activation",s="hc receive count activation"):a===B.SparkCount?(i="spark count buff activation",s="spark count activation"):`${a} above % ${t}`in e?i=`${a} above % ${t}`:(i=`${a} below % ${t}`,n=!1);return{threshold:s?Y(e[i],Y(e[s])):Y(e[i]),requireAbove:n,type:a}},b=({threshold:e,requireAbove:a,type:t})=>{let i;return t===B.Hp?i=a?{hpGreaterThanOrEqualTo:e}:{hpLessThanOrEqualTo:e}:t===B.Bb?i=a?{bbGaugeGreaterThanOrEqualTo:e}:{bbGaugeLessThanOrEqualTo:e}:t===B.DamageTaken?i={damageTakenExceeds:e}:t===B.DamageDealt?i={damageDealtExceeds:e}:t===B.BcReceived?i={bcReceivedExceeds:e}:t===B.HcReceived?i={hcReceivedExceeds:e}:t===B.SparkCount?i={sparkCountExceeds:e}:t===B.ChanceGuard?i={onGuardChance:e}:t===B.ChanceCrit&&(i={onCriticalHitChance:e}),i},A=({effect:e,context:a,injectionContext:t,originalId:i,effectKey:s,buffId:n,parseParamValue:c=(e=>Y(e))})=>{const{conditionInfo:o,targetData:r,sources:l}=d(e,a,t),p=e,f=[];let u,g=0;if(p.params){const[e,...a]=F(p);g=c(e),u=Z(a,1,t)}else g=Y(p[s]);return 0!==g&&f.push(Object.assign({id:n,originalId:i,sources:l,value:g,conditions:Object.assign({},o)},r)),E(f,u,{originalId:i,sources:l,targetData:r,conditionInfo:o}),f},R=({effect:e,context:a,injectionContext:t,originalId:i,effectKeyLow:s,effectKeyHigh:n,effectKeyChance:c,buffKeyLow:o,buffKeyHigh:r,defaultEffectChance:l=0,parseParamValue:p=(e=>Y(e)),generateBaseConditions:f=(()=>({})),buffId:u})=>{const{conditionInfo:g,targetData:m,sources:D}=d(e,a,t),v=e;let B,T,U,b;if(v.params){const[e,a,i,...s]=F(v);B=p(e),T=p(a),U=Y(i),b=Z(s,3,t)}else B=Y(v[s]),T=Y(v[n]),U=Y(v[c],l);const k=[];return 0===B&&0===T&&0===U||k.push(Object.assign({id:u,originalId:i,sources:D,value:{[o]:B,[r]:T,chance:U},conditions:Object.assign(Object.assign({},g),f())},m)),E(k,b,{originalId:i,sources:D,targetData:m,conditionInfo:g}),k},I=({effect:e,context:a,injectionContext:t,originalId:i,buffId:s,thresholdType:n})=>{const{conditionInfo:c,targetData:o,sources:r}=d(e,a,t),l=e,f=[];let u;if(l.params){const e=F(l),d=p({id:e[0],params:e[1],turnDuration:Y(e[4])},a,t),g=Y(e[2]),m=T(e[3],"1",n);if(u=Z(e.slice(5),5,t),d.length>0){const e=b(m);f.push(Object.assign({id:s,originalId:i,sources:r,value:{triggeredBuffs:d,maxTriggerCount:g},conditions:Object.assign(Object.assign({},c),e)},o))}}return E(f,u,{originalId:i,sources:r,targetData:o,conditionInfo:c}),f},y=({effect:e,context:a,injectionContext:t,originalId:i,thresholdType:s,flatFillBuffId:n,percentFillBuffId:c,flatFillEffectKey:o})=>{const{conditionInfo:r,targetData:l,sources:p}=d(e,a,t),f=e;let u,g,m,D;if(f.params){const e=F(f);u=Y(e[0])/100,g=Y(e[1]),m=T(e[2],"1",s),D=Z(e.slice(3),3,t)}else u=Y(f[o]),g=0,m=U(f,s);const v=[];if(0!==u){const e=b(m);v.push(Object.assign({id:n,originalId:i,sources:p,value:u,conditions:Object.assign(Object.assign({},r),e)},l))}if(0!==g){const e=b(m);v.push(Object.assign({id:c,originalId:i,sources:p,value:g,conditions:Object.assign(Object.assign({},r),e)},l))}return E(v,D,{originalId:i,sources:p,targetData:l,conditionInfo:r}),v};e.set("1",(e,a,t)=>{const i="1",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),r=e,l=[],p={atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let f;if(r.params){let e;[p.atk,p.def,p.rec,p.crit,p.hp,...e]=F(r),f=Z(e,5,t)}else p.hp=r["hp% buff"],p.atk=r["atk% buff"],p.def=r["def% buff"],p.rec=r["rec% buff"],p.crit=r["crit% buff"];return o.forEach(e=>{const a=Y(p[e]);0!==a&&l.push(Object.assign({id:"passive:1:"+e,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n))}),E(l,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("2",(e,a,i)=>{const s="2",{conditionInfo:n,targetData:c,sources:r}=d(e,a,i),l=e,p=[],f={elements:[],atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let u;if(l.params){let e,a,s;[a,s,f.atk,f.def,f.rec,f.crit,f.hp,...e]=F(l),[a,s].forEach(e=>{e&&"0"!==e&&f.elements.push(t[e]||W.Unknown)}),u=Z(e,7,i)}else Array.isArray(l["elements buffed"])&&(f.elements=l["elements buffed"]),f.hp=l["hp% buff"],f.atk=l["atk% buff"],f.def=l["def% buff"],f.rec=l["rec% buff"],f.crit=l["crit% buff"];const g=e=>Object.assign({id:"passive:2:elemental-"+e,originalId:s,sources:r,value:Y(f[e])},c);return f.elements.length>0?f.elements.forEach(e=>{o.forEach(a=>{0!==Y(f[a])&&p.push(Object.assign(Object.assign({},g(a)),{conditions:Object.assign(Object.assign({},n),{targetElements:[e]})}))})}):o.forEach(e=>{0!==Y(f[e])&&p.push(Object.assign(Object.assign({},g(e)),{conditions:Object.assign(Object.assign({},n),{targetElements:[W.Unknown]})}))}),E(p,u,{originalId:s,sources:r,targetData:c,conditionInfo:n}),p}),e.set("3",(e,a,t)=>{const s="3",{conditionInfo:n,targetData:c,sources:r}=d(e,a,t),l=e,p=[],f={unitType:"",atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let u;if(l.params){let e,a;[a,f.atk,f.def,f.rec,f.crit,f.hp,...e]=F(l),a&&"0"!==a&&(f.unitType=i[a]||"unknown"),u=Z(e,6,t)}else f.unitType=l["unit type buffed"],f.hp=l["hp% buff"],f.atk=l["atk% buff"],f.def=l["def% buff"],f.rec=l["rec% buff"],f.crit=l["crit% buff"];const g=f.unitType||"unknown";return o.forEach(e=>{const a=Y(f[e]);0!==a&&p.push(Object.assign({id:"passive:3:type based-"+e,originalId:s,sources:r,value:+a,conditions:Object.assign(Object.assign({},n),{targetUnitType:g})},c))}),E(p,u,{originalId:s,sources:r,targetData:c,conditionInfo:n}),p}),e.set("4",(e,a,t)=>{const i="4",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,l=[],p={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let f;if(o.params){let e;[p.poison,p.weak,p.sick,p.injury,p.curse,p.paralysis,...e]=F(o),f=Z(e,6,t)}else r.forEach(e=>{const a="weak"!==e?e:"weaken";p[e]=o[a+" resist%"]});return r.forEach(e=>{const a=Y(p[e]);0!==a&&l.push(Object.assign({id:"passive:4:resist-"+e,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n))}),E(l,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("5",(e,a,i)=>{const s="5",{conditionInfo:n,targetData:c,sources:o}=d(e,a,i),r=e,l=[];let p,f,u="0";if(r.params){let e,a;[a,u,...e]=F(r),p=t[a]||W.Unknown,f=Z(e,2,i)}else p=Object.values(t).find(a=>a+" resist%"in e)||W.Unknown,p!==W.Unknown&&(u=r[p+" resist%"]);const g=Y(u);return 0!==g&&l.push(Object.assign({id:"passive:5:mitigate-"+p,originalId:s,sources:o,value:g,conditions:Object.assign({},n)},c)),E(l,f,{originalId:s,sources:o,targetData:c,conditionInfo:n}),l}),e.set("8",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"dmg% mitigation",buffId:"passive:8:mitigation",originalId:"8"})),e.set("9",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"bc fill per turn",buffId:"passive:9:gradual bc fill",originalId:"9"})),e.set("10",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"hc effectiveness%",buffId:"passive:10:hc efficacy",originalId:"10"})),e.set("11",(e,a,t)=>{const i="11",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),r=e,l=[],p={atk:"0",def:"0",rec:"0",crit:"0"};let f,u;if(r.params){let e,a,i;[p.atk,p.def,p.rec,p.crit,i,a,...e]=F(r),f=T(i,a,B.Hp),u=Z(e,6,t)}else p.atk=r["atk% buff"],p.def=r["def% buff"],p.rec=r["rec% buff"],p.crit=r["crit% buff"],f=U(r,B.Hp);const g=b(f);return o.forEach(e=>{const a=Y(p[e]);if("hp"!==e&&0!==a){const t=Object.assign({id:"passive:11:hp conditional-"+e,originalId:i,sources:c,value:a,conditions:Object.assign(Object.assign({},s),g)},n);l.push(t)}}),E(l,u,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("12",(e,a,t)=>{const i="12",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,r=[],p={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let f,u;if(o.params){let e,a,i;[p.bc,p.hc,p.item,p.zel,p.karma,i,a,...e]=F(o),f=T(i,a,B.Hp),u=Z(e,7,t)}else l.forEach(e=>{p[e]=o[e+" drop rate% buff"]}),f=U(o,B.Hp);const g=b(f);return l.forEach(e=>{const a=Y(p[e]);if(0!==a){const t=Object.assign({id:"passive:12:hp conditional drop boost-"+e,originalId:i,sources:c,value:a,conditions:Object.assign(Object.assign({},s),g)},n);r.push(t)}}),E(r,u,{originalId:i,sources:c,targetData:n,conditionInfo:s}),r}),e.set("13",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"13",effectKeyLow:"bc fill on enemy defeat low",effectKeyHigh:"bc fill on enemy defeat high",effectKeyChance:"bc fill on enemy defeat%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>Y(e)/100,generateBaseConditions:()=>({onEnemyDefeat:!0}),buffId:"passive:13:bc fill on enemy defeat"})),e.set("14",(e,a,t)=>{const i="14",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l,p;if(o.params){const[e,a,...i]=F(o);r=Y(e),l=Y(a),p=Z(i,2,t)}else r=Y(o["dmg reduction%"]),l=Y(o["dmg reduction chance%"]);const f=[];return 0===r&&0===l||f.push(Object.assign({id:"passive:14:chance mitigation",originalId:i,sources:c,value:{value:r,chance:l},conditions:Object.assign({},s)},n)),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("15",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"15",effectKeyLow:"hp% recover on enemy defeat low",effectKeyHigh:"hp% recover on enemy defeat high",effectKeyChance:"hp% recover on enemy defeat chance%",buffKeyLow:"healLow",buffKeyHigh:"healHigh",generateBaseConditions:()=>({onEnemyDefeat:!0}),defaultEffectChance:100,buffId:"passive:15:heal on enemy defeat"})),e.set("16",(e,a,t)=>{const i="16",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l,p;if(o.params){const[e,a,...i]=F(o);r=Y(e),l=Y(a),p=Z(i,2,t)}else r=Y(o["hp% recover on battle win low"]),l=Y(o["hp% recover on battle win high"]);const f=[];return 0===r&&0===l||f.push(Object.assign({id:"passive:16:heal on win",originalId:i,sources:c,value:{healLow:r,healHigh:l},conditions:Object.assign(Object.assign({},s),{onBattleWin:!0})},n)),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("17",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"17",effectKeyLow:"hp drain% low",effectKeyHigh:"hp drain% high",effectKeyChance:"hp drain chance%",buffKeyLow:"drainHealLow%",buffKeyHigh:"drainHealHigh%",buffId:"passive:17:hp absorb"})),e.set("19",(e,a,t)=>{const i="19",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,r=[],p={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let f;if(o.params){let e;[p.bc,p.hc,p.item,p.zel,p.karma,...e]=F(o),f=Z(e,5,t)}else l.forEach(e=>{p[e]=o[e+" drop rate% buff"]});return l.forEach(e=>{const a=Y(p[e]);0!==a&&r.push(Object.assign({id:"passive:19:drop boost-"+e,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n))}),E(r,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),r}),e.set("20",(e,a,t)=>{const i="20",{conditionInfo:n,targetData:c,sources:o}=d(e,a,t),r=[],l=e;let p;if(l.params){let e=F(l);e.length%2!=0&&"0"!==e[e.length-1]&&(p=Z(e.slice(-1),e.length-1,t),e=e.slice(0,e.length-1));const a=e.length;for(let t=0;t<a;t+=2){const a=e[t],i=Y(e[t+1]);if("0"!==a||0!==i){const e=s[a]||f.Unknown;r.push({ailment:e,chance:i})}}}else Object.values(s).forEach(a=>{let t;t=a===f.Weak?"weaken%":a===f.AttackReduction||a===f.DefenseReduction||a===f.RecoveryReduction?a:a+"%",t in e&&r.push({ailment:a,chance:Y(l[t])})});const u=[];return r.forEach(({ailment:e,chance:a})=>{0!==a&&u.push(Object.assign({id:"passive:20:chance inflict-"+e,originalId:i,sources:o,value:a,conditions:Object.assign({},n)},c))}),E(u,p,{originalId:i,sources:o,targetData:c,conditionInfo:n}),u}),e.set("21",(e,a,t)=>{const i="21",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),r=e,l=[],p={atk:"0",def:"0",rec:"0",crit:"0"};let f,u=0;if(r.params){let e,a;[p.atk,p.def,p.rec,p.crit,e,...a]=F(r),u=Y(e),f=Z(a,5,t)}else p.atk=r["first x turns atk% (1)"],p.def=r["first x turns def% (3)"],p.rec=r["first x turns rec% (5)"],p.crit=r["first x turns crit% (7)"],u=Y(r["first x turns"]);return o.forEach(e=>{const a=Y(p[e]);if("hp"!==e&&0!==a){const t=Object.assign({id:"passive:21:first turn-"+e,originalId:i,sources:c,value:a,duration:u,conditions:Object.assign({},s)},n);l.push(t)}}),E(l,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("23",(e,a,t)=>{const i="23",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l,p;if(o.params){const[e,a,...i]=F(o);r=Y(e)/100,l=Y(a)/100,p=Z(i,2,t)}else r=Y(o["battle end bc fill low"]),l=Y(o["battle end bc fill high"]);const f=[];return 0===r&&0===l||f.push(Object.assign({id:"passive:23:bc fill on win",originalId:i,sources:c,value:{fillLow:r,fillHigh:l},conditions:Object.assign(Object.assign({},s),{onBattleWin:!0})},n)),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("24",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"24",effectKeyLow:"dmg% to hp when attacked low",effectKeyHigh:"dmg% to hp when attacked high",effectKeyChance:"dmg% to hp when attacked chance%",buffKeyLow:"healLow",buffKeyHigh:"healHigh",generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:24:heal on hit"})),e.set("25",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"25",effectKeyLow:"bc fill when attacked low",effectKeyHigh:"bc fill when attacked high",effectKeyChance:"bc fill when attacked%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>Y(e)/100,generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:25:bc fill on hit"})),e.set("26",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"26",effectKeyLow:"dmg% reflect low",effectKeyHigh:"dmg% reflect high",effectKeyChance:"dmg% reflect chance%",buffKeyLow:"damageReflectLow",buffKeyHigh:"damageReflectHigh",generateBaseConditions:()=>({whenAttacked:!0}),buffId:"passive:26:chance damage reflect"})),e.set("27",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"target% chance",buffId:"passive:27:target chance change",originalId:"27"})),e.set("28",(e,a,t)=>{const i="28",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l,p=0;if(o.params){const[e,a,i,...s]=F(o);p=Y(e),r=T(a,i,B.Hp),l=Z(s,3,t)}else p=Y(o["target% chance"]),r=U(o,B.Hp,"passive requirement");const f=[];if(0!==p){const e=b(r),a=Object.assign({id:"passive:28:hp conditional target chance change",originalId:i,sources:c,value:p,conditions:Object.assign(Object.assign({},s),e)},n);f.push(a)}return E(f,l,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("29",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"ignore def%",buffId:"passive:29:chance def ignore",originalId:"29"})),e.set("30",(e,a,t)=>{const i="30",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),r=e,l=[],p={atk:"0",def:"0",rec:"0",crit:"0"};let f,u;if(r.params){let e,a,i;[p.atk,p.def,p.rec,p.crit,i,a,...e]=F(r),f=T(i,a,B.Bb),u=Z(e,6,t)}else p.atk=r["atk% buff"],p.def=r["def% buff"],p.rec=r["rec% buff"],p.crit=r["crit% buff"],f=U(r,B.Bb);const g=b(f);return o.forEach(e=>{const a=Y(p[e]);if("hp"!==e&&0!==a){const t=Object.assign({id:"passive:30:bb gauge conditional-"+e,originalId:i,sources:c,value:a,conditions:Object.assign(Object.assign({},s),g)},n);l.push(t)}}),E(l,u,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("31",(e,a,t)=>{const i="31",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,r={bc:"0",hc:"0",item:"0",zel:"0",karma:"0"};let p,f=0;if(o.params){let e,a;[a,r.bc,r.hc,r.item,r.zel,r.karma,...e]=F(o),f=Y(a),p=Z(e,6,t)}else f=Y(o["damage% for spark"]),l.forEach(e=>{r[e]=o[e+" drop% for spark"]});const u=[];return 0!==f&&u.push(Object.assign({id:"passive:31:spark-damage",originalId:i,sources:c,value:f,conditions:Object.assign({},s)},n)),l.forEach(e=>{const a=Y(r[e]);0!==a&&u.push(Object.assign({id:"passive:31:spark-"+e,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n))}),E(u,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),u}),e.set("32",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"bb gauge fill rate%",buffId:"passive:32:bc efficacy",originalId:"32"})),e.set("33",(e,a,t)=>{const i="33",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l,p,f;if(o.params){const[e,a,i,...s]=F(o);r=Y(e),l=Y(a),p=10*(1+Y(i)/100),f=Z(s,3,t)}else r=Y(o["turn heal low"]),l=Y(o["turn heal high"]),p=Y(o["rec% added (turn heal)"]);const u=[];return 0===r&&0===l||u.push(Object.assign({id:"passive:33:gradual heal",originalId:i,sources:c,value:{healLow:r,healHigh:l,"addedRec%":p},conditions:Object.assign({},s)},n)),E(u,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),u}),e.set("34",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"crit multiplier%",buffId:"passive:34:critical damage",originalId:"34",parseParamValue:e=>100*Y(e)})),e.set("35",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"35",effectKeyLow:"bc fill when attacking low",effectKeyHigh:"bc fill when attacking high",effectKeyChance:"bc fill when attacking%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>Y(e)/100,generateBaseConditions:()=>({onNormalAttack:!0}),buffId:"passive:35:bc fill on normal attack"})),e.set("36",(e,a,t)=>{const i="36",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0,f=0;if(o.params){const[e,a,i,...s]=F(o);l=Y(e),p=Y(a),f=Y(i),r=Z(s,3,t)}else l=Y(o["additional actions"]);const u=[];return 0===l&&0===p&&0===f||u.push(Object.assign({id:"passive:36:extra action",originalId:i,sources:c,value:{additionalActions:l,damageModifier:p,chance:f},conditions:Object.assign({},s)},n)),E(u,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),u}),e.set("37",(e,a,t)=>{const i="37",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0;if(o.params){const e=F(o);l=Y(e[0]),p=Y(e[2]);r=Z(["0",e[1],"0",...e.slice(3)],0,t)}else l=Y(o["hit increase/hit"]),p=Y(o["extra hits dmg%"]);const f=[];return 0===l&&0===p||f.push(Object.assign({id:"passive:37:hit count boost",originalId:i,sources:c,value:{hitIncreasePerHit:l,extraHitDamage:p},conditions:Object.assign({},s)},n)),E(f,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("40",(e,a,t)=>{const i="40",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,r=["atk","def","rec"],l={1:"atk",2:"def",3:"rec",4:"hp"},p={attack:"atk",defense:"def",recovery:"rec",hp:"hp"},f={atk:"0",def:"0",rec:"0"};let u,g="unknown";if(o.params){let e,a;[a,f.atk,f.def,f.rec,...e]=F(o),g=l[a]||"unknown",u=Z(e,4,t)}else{const e=o["converted attribute"];g=e in p?p[e]:"unknown",r.forEach(e=>{const a=e+"% buff";a in o&&(f[e]=o[a])})}const m=[];return r.forEach(e=>{const a=Y(f[e]);0!==a&&m.push(Object.assign({id:"passive:40:converted-"+e,originalId:i,sources:c,value:{convertedStat:g,value:a},conditions:Object.assign({},s)},n))}),E(m,u,{originalId:i,sources:c,targetData:n,conditionInfo:s}),m}),e.set("41",(e,a,t)=>{const i="41",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),r=e,l=[],p={minimumElements:"0",atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let f;if(r.params){let e;[p.minimumElements,p.atk,p.def,p.rec,p.crit,p.hp,...e]=F(r),f=Z(e,6,t)}else p.minimumElements=r["unique elements required"],p.hp=r["hp% buff"],p.atk=r["atk% buff"],p.def=r["def% buff"],p.rec=r["rec% buff"],p.crit=r["crit% buff"];const u=Y(p.minimumElements);return o.forEach(e=>{const a=Y(p[e]);0!==a&&l.push(Object.assign({id:"passive:41:unique element count-"+e,originalId:i,sources:c,value:+a,conditions:Object.assign(Object.assign({},s),{minimumUniqueElements:u})},n))}),E(l,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("42",(e,a,t)=>{const i="42",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),r={0:h.Other,1:h.Male,2:h.Female},l=e,p=[],f={gender:"",atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let u;if(l.params){let e,a;[a,f.atk,f.def,f.rec,f.crit,f.hp,...e]=F(l),f.gender=r[a]||"unknown",u=Z(e,6,t)}else f.gender=l["gender required"],f.hp=l["hp% buff"],f.atk=l["atk% buff"],f.def=l["def% buff"],f.rec=l["rec% buff"],f.crit=l["crit% buff"];const g=f.gender||"unknown";return o.forEach(e=>{const a=Y(f[e]);0!==a&&p.push(Object.assign({id:"passive:42:gender-"+e,originalId:i,sources:c,value:+a,conditions:Object.assign(Object.assign({},s),{targetGender:g})},n))}),E(p,u,{originalId:i,sources:c,targetData:n,conditionInfo:s}),p}),e.set("43",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"take 1 dmg%",buffId:"passive:43:chance damage to one",originalId:"43"})),e.set("44",(e,a,t)=>{const i="44",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),r=e,l=[],p={atk:"0",def:"0",rec:"0",crit:"0",hp:"0"};let f;if(r.params){let e;[p.atk,p.def,p.rec,p.crit,p.hp,...e]=F(r),f=Z(e,5,t)}else p.hp=r["hp buff"],p.atk=r["atk buff"],p.def=r["def buff"],p.rec=r["rec buff"],p.crit=r["crit buff"];return o.forEach(e=>{const a=Y(p[e]);0!==a&&l.push(Object.assign({id:"passive:44:flat-"+e,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n))}),E(l,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("45",(e,a,t)=>{const i="45",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0;if(o.params){const[e,a,...i]=F(o);l=Y(e),p=Y(a),r=Z(i,2,t)}else l=Y(o["base crit% resist"]),p=Y(o["buff crit% resist"]);const f=[];return 0!==l&&f.push(Object.assign({id:"passive:45:critical damage reduction-base",originalId:i,sources:c,value:l,conditions:Object.assign({},s)},n)),0!==p&&f.push(Object.assign({id:"passive:45:critical damage reduction-buff",originalId:i,sources:c,value:p,conditions:Object.assign({},s)},n)),E(f,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("46",(e,a,t)=>{const i="46",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=["atk","def","rec"],r=[];let l="unknown";const p=e;let f;if(p.params){const e=F(p);o.forEach((a,t)=>{const i=Y(e[2*t]),s=Y(e[2*t+1]);0===i&&0===s||r.push({stat:a,baseValue:i,addedValue:s})}),l="1"===e[6]?"lost":"remaining",f=Z(e.slice(7),7,t)}else o.forEach(e=>{const a=Y(p[e+"% base buff"]),t=Y(p[e+"% extra buff based on hp"]);0===a&&0===t||r.push({stat:e,baseValue:a,addedValue:t})}),l=p["buff proportional to hp"]||"unknown";const u=r.map(({stat:e,baseValue:a,addedValue:t})=>Object.assign({id:"passive:46:hp scaled-"+e,originalId:i,sources:c,value:{baseValue:a,addedValue:t,proportionalMode:l},conditions:Object.assign({},s)},n));return E(u,f,{originalId:i,sources:c,targetData:n,conditionInfo:s}),u}),e.set("47",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"47",effectKeyLow:"bc fill on spark low",effectKeyHigh:"bc fill on spark high",effectKeyChance:"bc fill on spark%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>Y(e)/100,buffId:"passive:47:bc fill on spark"})),e.set("48",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"reduced bb bc cost%",buffId:"passive:48:bc cost reduction",originalId:"48"})),e.set("49",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"49",effectKeyLow:"reduced bb bc use% low",effectKeyHigh:"reduced bb bc use% high",effectKeyChance:"reduced bb bc use chance%",buffKeyLow:"reducedUseLow%",buffKeyHigh:"reducedUseHigh%",buffId:"passive:49:bb gauge consumption reduction"})),e.set("50",(e,a,i)=>{const s="50",{conditionInfo:n,targetData:c,sources:o}=d(e,a,i),r=e;let l,p,f=0;if(r.params){const e=F(r);l=e.filter((e,a)=>"0"!==e&&a<6).map(e=>t[e]||W.Unknown),f=100*Y(e[6]),p=Z(e.slice(7),7,i)}else l=Object.values(t).filter(e=>!!r[e+" units do extra elemental weakness dmg"]),f=Y(r["elemental weakness multiplier%"]);let u=[];return 0!==f&&(u=l.map(e=>Object.assign({id:"passive:50:elemental weakness damage-"+e,originalId:s,sources:o,value:f,conditions:Object.assign({},n)},c)),0===u.length&&u.push(Object.assign({id:"passive:50:elemental weakness damage-unknown",originalId:s,sources:o,value:f,conditions:Object.assign({},n)},c))),E(u,p,{originalId:s,sources:o,targetData:c,conditionInfo:n}),u}),e.set("53",(e,a,t)=>{const i="53",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r;!function(e){e.CriticalDamage="critical damage",e.ElementDamage="element damage",e.CriticalHitRate="critical rate"}(r||(r={}));const l=[];let p;if(o.params){const[e,a,i,s,n,c,...d]=F(o);[{resistType:r.CriticalDamage,base:Y(e),buff:Y(a)},{resistType:r.ElementDamage,base:Y(i),buff:Y(s)},{resistType:r.CriticalHitRate,base:Y(n),buff:Y(c)}].forEach(({resistType:e,base:a,buff:t})=>{0===a&&0===t||l.push({resistType:e,base:a,buff:t})}),p=Z(d,6,t)}else[{resistType:r.CriticalDamage,baseKey:"crit dmg base damage resist%",buffKey:"crit dmg buffed damage resist%"},{resistType:r.ElementDamage,baseKey:"strong base element damage resist%",buffKey:"strong buffed element damage resist%"},{resistType:r.CriticalHitRate,baseKey:"crit chance base resist%",buffKey:"crit chance buffed resist%"}].forEach(({resistType:e,baseKey:a,buffKey:t})=>{const i=Y(o[a]),s=Y(o[t]);0===i&&0===s||l.push({resistType:e,base:i,buff:s})});const f=[];return l.forEach(({resistType:e,base:a,buff:t})=>{0!==a&&f.push(Object.assign({id:`passive:53:${e}-base`,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n)),0!==t&&f.push(Object.assign({id:`passive:53:${e}-buff`,originalId:i,sources:c,value:t,conditions:Object.assign({},s)},n))}),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("55",(e,a,t)=>{const i="55",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,r=[];let l;if(o.params){const e=F(o),d=p({id:e[0],params:e[1],turnDuration:Y(e[5])},a,t),f=Y(e[2]),u=T(e[3],e[4],B.Hp);if(l=Z(e.slice(6),6,t),d.length>0){const e=b(u);r.push(Object.assign({id:"passive:55:hp conditional",originalId:i,sources:c,value:{triggeredBuffs:d,maxTriggerCount:f},conditions:Object.assign(Object.assign({},s),e)},n))}}return E(r,l,{originalId:i,sources:c,targetData:n,conditionInfo:s}),r}),e.set("58",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"guard increase mitigation%",buffId:"passive:58:guard mitigation",originalId:"58"})),e.set("59",(e,a,t)=>{const i="59",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l,p;if(o.params){const[e,a,...i]=F(o);r=Y(e),l=Y(a)/100,p=Z(i,2,t)}else r=Y(o["bb gauge% filled when attacked while guarded"]),l=Y(o["bc filled when attacked while guarded"]);const f=[];return 0!==r&&f.push(Object.assign({id:"passive:59:bc fill when attacked on guard-percent",originalId:i,sources:c,value:r,conditions:Object.assign(Object.assign({},s),{whenAttacked:!0,onGuard:!0})},n)),0!==l&&f.push(Object.assign({id:"passive:59:bc fill when attacked on guard-flat",originalId:i,sources:c,value:l,conditions:Object.assign(Object.assign({},s),{whenAttacked:!0,onGuard:!0})},n)),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("61",(e,a,t)=>{const i="61",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l,p;if(o.params){const[e,a,...i]=F(o);r=Y(e),l=Y(a)/100,p=Z(i,2,t)}else r=Y(o["bb gauge% filled on guard"]),l=Y(o["bc filled on guard"]);const f=[];return 0!==r&&f.push(Object.assign({id:"passive:61:bc fill on guard-percent",originalId:i,sources:c,value:r,conditions:Object.assign(Object.assign({},s),{onGuard:!0})},n)),0!==l&&f.push(Object.assign({id:"passive:61:bc fill on guard-flat",originalId:i,sources:c,value:l,conditions:Object.assign(Object.assign({},s),{onGuard:!0})},n)),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("62",(e,a,i)=>{const s="62",{conditionInfo:n,targetData:c,sources:o}=d(e,a,i),r=e;let l,p,f=0;if(r.params){const e=F(r);l=e.filter((e,a)=>"0"!==e&&a<6).map(e=>t[e]||W.Unknown),f=Y(e[6]),p=Z(e.slice(7),7,i)}else l=Object.values(t).filter(e=>!!r[`mitigate ${e} attacks`]),f=Y(r["dmg% mitigation for elemental attacks"]);let u=[];return 0!==f&&(u=l.map(e=>Object.assign({id:"passive:62:mitigate-"+e,originalId:s,sources:o,value:f,conditions:Object.assign({},n)},c)),0===u.length&&u.push(Object.assign({id:"passive:62:mitigate-unknown",originalId:s,sources:o,value:f,conditions:Object.assign({},n)},c))),E(u,p,{originalId:s,sources:o,targetData:c,conditionInfo:n}),u}),e.set("63",(e,a,i)=>{const s="63",{conditionInfo:n,targetData:c,sources:o}=d(e,a,i),r=e;let l,p,f=0,u=0;if(r.params){const e=F(r);l=e.filter((e,a)=>"0"!==e&&a<6).map(e=>t[e]||W.Unknown),f=Y(e[6]),u=Y(e[7]),p=Z(e.slice(8),8,i)}else l=Object.values(t).filter(e=>!!r[`mitigate ${e} attacks`]),f=Y(r["dmg% mitigation for elemental attacks"]),u=Y(r["dmg% mitigation for elemental attacks buff for first x turns"]);let g=[];return 0!==f&&(g=l.map(e=>Object.assign({id:"passive:63:first turn mitigate-"+e,originalId:s,sources:o,duration:u,value:f,conditions:Object.assign({},n)},c)),0===g.length&&g.push(Object.assign({id:"passive:63:first turn mitigate-unknown",originalId:s,sources:o,duration:u,value:f,conditions:Object.assign({},n)},c))),E(g,p,{originalId:s,sources:o,targetData:c,conditionInfo:n}),g}),e.set("64",(e,a,t)=>{const i="64",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0,f=0;if(o.params){const[e,a,i,...s]=F(o);l=Y(e),p=Y(a),f=Y(i),r=Z(s,3,t)}else l=Y(o["bb atk% buff"]),p=Y(o["sbb atk% buff"]),f=Y(o["ubb atk% buff"]);const u=[];return 0!==l&&u.push(Object.assign({id:"passive:64:attack boost-bb",originalId:i,sources:c,conditions:Object.assign({},s),value:l},n)),0!==p&&u.push(Object.assign({id:"passive:64:attack boost-sbb",originalId:i,sources:c,conditions:Object.assign({},s),value:p},n)),0!==f&&u.push(Object.assign({id:"passive:64:attack boost-ubb",originalId:i,sources:c,conditions:Object.assign({},s),value:f},n)),E(u,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),u}),e.set("65",(e,a,t)=>R({effect:e,context:a,injectionContext:t,originalId:"65",effectKeyLow:"bc fill on crit min",effectKeyHigh:"bc fill on crit max",effectKeyChance:"bc fill on crit%",buffKeyLow:"fillLow",buffKeyHigh:"fillHigh",parseParamValue:e=>Y(e)/100,generateBaseConditions:()=>({onCriticalHit:!0}),buffId:"passive:65:bc fill on crit"})),e.set("66",(e,a,t)=>{const i="66",{conditionInfo:s,targetData:o,sources:r}=d(e,a,t),l=e;let p,f=[],g=!1,m=!1,D=!1;if(l.params){const[e,i="",s="",o="",r="",d,v,E,...B]=F(l),T=e.split("~"),U=i.split("~"),b=s.split("~"),k=o.split("~"),h=r.split("~"),A=16+2/3;T.forEach((e,i)=>{const s=(U[i]||"").replace(/&/g,","),o=b[i],r=k[i],l=Y(h[i]),d={"proc id":e,params:s,"effect delay time(ms)/frame":`${(l*A).toFixed(1)}/${l}`,"target area":c[r]||r||"unknown target area","target type":n[o]||o||"unknown target type"},p=u(d,a,t);f=f.concat(p)}),g="1"===d,m="1"===v,D="1"===E,p=Z(B,8,t)}else{const e=l["triggered effect"];Array.isArray(e)&&e.forEach(e=>{const i=u(e,a,t);f=f.concat(i)}),g=!!l["trigger on bb"],m=!!l["trigger on sbb"],D=!!l["trigger on ubb"]}const v=[];if((g||m||D)&&f.length>0){const e=e=>{v.push(Object.assign({id:"passive:66:add effect to skill-"+e,originalId:i,sources:r,value:f,conditions:Object.assign({},s)},o))};g&&e("bb"),m&&e("sbb"),D&&e("ubb")}return E(v,p,{originalId:i,sources:r,targetData:o,conditionInfo:s}),v}),e.set("69",(e,a,t)=>{const i="69",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0,f=0,u=0;if(o.params){const[e,a,i,s,...n]=F(o);l=Y(e),p=Y(a),f=Y(i),u=Y(s),r=Z(n,4,t)}else l=Y(o["angel idol recover hp%"]),p=Y(o["angel idol recover counts"]),f=Y(o["angel idol recover chance% low"]),u=Y(o["angel idol recover chance% high"]);const g=[];return 0===f&&0===u||g.push(Object.assign({id:"passive:69:chance ko resistance",originalId:i,sources:c,value:{"recoveredHp%":l,maxCount:p,chanceLow:f,chanceHigh:u},conditions:Object.assign({},s)},n)),E(g,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),g}),e.set("70",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"od fill rate%",buffId:"passive:70:od fill rate",originalId:"70"})),e.set("71",(e,a,t)=>{const i="71",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,l={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let p;if(o.params){let e;[l.poison,l.weak,l.sick,l.injury,l.curse,l.paralysis,...e]=F(o),p=Z(e,6,t)}else{const a=Object.keys(e).filter(e=>e.startsWith("counter inflict"));r.forEach(e=>{const t=a.find(a=>a.includes(e));t&&(l[e]=o[t])})}const f=[];return r.forEach(e=>{const a=Y(l[e]);0!==a&&f.push(Object.assign({id:"passive:71:inflict on hit-"+e,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n))}),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("72",(e,a,t)=>{const i="72",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),[o,r,...l]=m(e),p="1"===o,f="1"===r,u=Z(l,2,t),F=[];return p&&F.push(Object.assign({id:"passive:72:effect at turn start-hp",originalId:i,sources:c,value:!0,conditions:Object.assign({},s)},n)),f&&F.push(Object.assign({id:"passive:72:effect at turn start-bc",originalId:i,sources:c,value:!0,conditions:Object.assign({},s)},n)),E(F,u,{originalId:i,sources:c,targetData:n,conditionInfo:s}),F}),e.set("73",(e,a,t)=>{const i="73",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,r=[f.Poison,f.Weak,f.Sick,f.Injury,f.Curse,f.Paralysis,f.AttackReduction,f.DefenseReduction,f.RecoveryReduction],l=[],p={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0","atk down":"0","def down":"0","rec down":"0"};let u;if(o.params){let e;[p.poison,p.weak,p.sick,p.injury,p.curse,p.paralysis,p["atk down"],p["def down"],p["rec down"],...e]=F(o),u=Z(e,9,t)}else r.forEach(e=>{const a="weak"!==e?e:"weaken";p[e]=o[a+" resist%"]});return r.forEach(e=>{const a=Y(p[e]);0!==a&&l.push(Object.assign({id:"passive:73:resist-"+e,originalId:i,sources:c,value:a,conditions:Object.assign({},s)},n))}),E(l,u,{originalId:i,sources:c,targetData:n,conditionInfo:s}),l}),e.set("74",(e,a,t)=>{const i="74",{conditionInfo:n,targetData:c,sources:o}=d(e,a,t),l=e;let p,u,g=0;if(l.params){const[e,a,...i]=F(l);p=e.split("&").filter(e=>"0"!==e).map(e=>s[e]||f.Unknown),g=Y(a),u=Z(i,2,t)}else{const e=Object.keys(l).filter(e=>!0===l[e]&&e.startsWith("atk% buff when enemy has"));p=r.filter(a=>e.find(e=>e.includes(a))),g=Y(l["atk% buff when enemy has ailment"])}const m=[];return 0!==g&&m.push(Object.assign({id:"passive:74:ailment attack boost",originalId:i,sources:o,value:g,conditions:Object.assign(Object.assign({},n),{targetHasAnyOfGivenAilments:p})},c)),E(m,u,{originalId:i,sources:o,targetData:c,conditionInfo:n}),m}),e.set("75",(e,a,t)=>{const i="75",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0,f=0;if(o.params){const[e,a,i,...s]=F(o);l=Y(e),p=Y(a),f=Y(i),r=Z(s,3,t)}else l=Y(o["spark debuff%"]),p=Y(o["spark debuff chance%"]),f=Y(o["spark debuff turns"]);const u=[];return 0!==p&&u.push(Object.assign({id:"passive:75:spark vulnerability",originalId:i,sources:c,duration:f,value:{"sparkDamage%":l,chance:p},conditions:Object.assign({},s)},n)),E(u,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),u}),e.set("77",(e,a,t)=>{const i="77",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0;if(o.params){const[e,a,...i]=F(o);l=Y(e),p=Y(a),r=Z(i,2,t)}else l=Y(o["base spark dmg% resist"]),p=Y(o["buff spark dmg% resist"]);const f=[];return 0!==l&&f.push(Object.assign({id:"passive:77:spark damage reduction-base",originalId:i,sources:c,value:l,conditions:Object.assign({},s)},n)),0!==p&&f.push(Object.assign({id:"passive:77:spark damage reduction-buff",originalId:i,sources:c,value:p,conditions:Object.assign({},s)},n)),E(f,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("78",(e,a,t)=>I({effect:e,context:a,injectionContext:t,originalId:"78",buffId:"passive:78:damage taken conditional",thresholdType:B.DamageTaken})),e.set("79",(e,a,t)=>y({effect:e,context:a,injectionContext:t,originalId:"79",thresholdType:B.DamageTaken,flatFillBuffId:"passive:79:bc fill after damage taken conditional-flat",percentFillBuffId:"passive:79:bc fill after damage taken conditional-percent",flatFillEffectKey:"increase bb gauge"})),e.set("80",(e,a,t)=>I({effect:e,context:a,injectionContext:t,originalId:"80",buffId:"passive:80:damage dealt conditional",thresholdType:B.DamageDealt})),e.set("81",(e,a,t)=>y({effect:e,context:a,injectionContext:t,originalId:"81",thresholdType:B.DamageDealt,flatFillBuffId:"passive:81:bc fill after damage dealt conditional-flat",percentFillBuffId:"passive:81:bc fill after damage dealt conditional-percent",flatFillEffectKey:"increase bb gauge"})),e.set("82",(e,a,t)=>I({effect:e,context:a,injectionContext:t,originalId:"82",buffId:"passive:82:bc received conditional",thresholdType:B.BcReceived})),e.set("83",(e,a,t)=>y({effect:e,context:a,injectionContext:t,originalId:"83",thresholdType:B.BcReceived,flatFillBuffId:"passive:83:bc fill after bc received conditional-flat",percentFillBuffId:"passive:83:bc fill after bc received conditional-percent",flatFillEffectKey:"increase bb gauge"})),e.set("84",(e,a,t)=>I({effect:e,context:a,injectionContext:t,originalId:"84",buffId:"passive:84:hc received conditional",thresholdType:B.HcReceived})),e.set("85",(e,a,t)=>y({effect:e,context:a,injectionContext:t,originalId:"85",thresholdType:B.HcReceived,flatFillBuffId:"passive:85:bc fill after hc received conditional-flat",percentFillBuffId:"passive:85:bc fill after hc received conditional-percent",flatFillEffectKey:"increase bb gauge"})),e.set("86",(e,a,t)=>I({effect:e,context:a,injectionContext:t,originalId:"86",buffId:"passive:86:spark count conditional",thresholdType:B.SparkCount})),e.set("87",(e,a,t)=>y({effect:e,context:a,injectionContext:t,originalId:"87",thresholdType:B.SparkCount,flatFillBuffId:"passive:87:bc fill after spark count conditional-flat",percentFillBuffId:"passive:87:bc fill after spark count conditional-percent",flatFillEffectKey:"increase bb gauge"})),e.set("88",(e,a,t)=>I({effect:e,context:a,injectionContext:t,originalId:"88",buffId:"passive:88:on guard conditional",thresholdType:B.ChanceGuard})),e.set("89",(e,a,t)=>I({effect:e,context:a,injectionContext:t,originalId:"89",buffId:"passive:89:on critical hit conditional",thresholdType:B.ChanceCrit})),e.set("90",(e,a,t)=>{const i="90",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e,l={poison:"0",weak:"0",sick:"0",injury:"0",curse:"0",paralysis:"0"};let p;if(o.params){let e;[l.poison,l.weak,l.sick,l.injury,l.curse,l.paralysis,...e]=F(o),p=Z(e,6,t)}else{const a=Object.keys(e).filter(e=>e.startsWith("inflict"));r.forEach(e=>{const t=a.find(a=>a.includes(e));t&&(l[e]=o[t])})}const f=[];return r.forEach(e=>{const a=Y(l[e]);0!==a&&f.push(Object.assign({id:"passive:90:inflict on crit-"+e,originalId:i,sources:c,value:a,conditions:Object.assign(Object.assign({},s),{onCriticalHit:!0})},n))}),E(f,p,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("91",(e,a,t)=>{const i="91",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0;if(o.params){const[e,a,i,...s]=F(o);l=Y(a),p=Y(i),r=Z([e,"0","0"].concat(s),0,t)}let f=[];return 0!==l&&f.push(Object.assign({id:"passive:91:first turn spark",originalId:i,sources:c,duration:p,value:l,conditions:Object.assign({},s)},n)),E(f,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f}),e.set("92",(e,a,t)=>A({effect:e,context:a,injectionContext:t,effectKey:"ignore def resist chance%",buffId:"passive:92:negate defense ignore",originalId:"92"})),e.set("93",(e,a,i)=>{const s="93",{conditionInfo:n,targetData:c,sources:o}=d(e,a,i),r=e;let l,p=[];if(r.params){const e=F(r);p=e.filter((e,a)=>"0"!==e&&a<6).map(e=>t[e]||W.Unknown),l=Z(e.slice(6),6,i)}const f=p.map(e=>Object.assign({id:"passive:93:add element-"+e,originalId:s,sources:o,value:!0,conditions:Object.assign({},n)},c));return E(f,l,{originalId:s,sources:o,targetData:c,conditionInfo:n}),f}),e.set("96",(e,a,t)=>{const i="96",{conditionInfo:s,targetData:n,sources:c}=d(e,a,t),o=e;let r,l=0,p=0;if(o.params){const[e,a,...i]=F(o);l=Y(e),p=Y(a),r=Z(i,2,t)}else l=Y(o["aoe atk inc%"]),p=Y(o["chance to aoe"]);const f=[];return 0!==p&&f.push(Object.assign({id:"passive:96:aoe normal attack",originalId:i,sources:c,value:{"damageModifier%":l,chance:p},conditions:Object.assign({},s)},n)),E(f,r,{originalId:i,sources:c,targetData:n,conditionInfo:s}),f})}(te)),te}!function(e){e.Active="active",e.Passive="passive",e.ConditionalTimed="conditionalTimed",e.Singleton="singleton",e.Burst="burst",e.Attack="attack",e.Unknown="unknown"}(K||(K={})),function(e){e.BraveBurst="bb",e.SuperBraveBurst="sbb",e.UltimateBraveBurst="ubb",e.DualBraveBurst="dbb",e.BondedBraveBurst="bbb",e.BondedSuperBraveBurst="dsbb",e.SpEnhancement="sp",e.Item="item",e.LeaderSkill="ls",e.ExtraSkill="es",e.OmniParadigm="omniParadigm",e.UnitTypeBonus="unitTypeBonus",e.Quest="quest"}(L||(L={})),function(e){e.Unknown="unknown",e.OmniParadigm="omniParadigm",e.All="all"}(W||(W={})),function(e){e.hp="hp",e.atk="atk",e.def="def",e.rec="rec",e.crit="crit",e.hpRecovery="hpRecovery",e.bbGauge="bbGauge",e.odGauge="odGauge",e.bcDropRate="bcDropRate",e.hcDropRate="hcDropRate",e.itemDropRate="itemDropRate",e.zelDropRate="zelDropRate",e.karmaDropRate="karmaDropRate",e.bcEfficacy="bcEfficacy",e.hcEfficacy="hcEfficacy",e.bcCostReduction="bcCostReduction",e.bbGaugeConsumptionReduction="bbGaugeConsumptionReduction",e.ailmentAttackBoost="ailmentAttackBoost",e.poisonResist="poisonResist",e.weakResist="weakResist",e.sickResist="sickResist",e.injuryResist="injuryResist",e.curseResist="curseResist",e.paralysisResist="paralysisResist",e.poisonInflict="poisonInflict",e.weakInflict="weakInflict",e.sickInflict="sickInflict",e.injuryInflict="injuryInflict",e.curseInflict="curseInflict",e.paralysisInflict="paralysisInflict",e.poisonCounter="poisonCounter",e.weakCounter="weakCounter",e.sickCounter="sickCounter",e.injuryCounter="injuryCounter",e.curseCounter="curseCounter",e.paralysisCounter="paralysisCounter",e.atkDownResist="atkDownResist",e.defDownResist="defDownResist",e.recDownResist="recDownResist",e.atkDownInflict="atkDownInflict",e.defDownInflict="defDownInflict",e.recDownInflict="recDownInflict",e.atkDownCounter="atkDownCounter",e.defDownCounter="defDownCounter",e.recDownCounter="recDownCounter",e.mitigation="mitigation",e.fireMitigation="fireMitigation",e.waterMitigation="waterMitigation",e.earthMitigation="earthMitigation",e.thunderMitigation="thunderMitigation",e.lightMitigation="lightMitigation",e.darkMitigation="darkMitigation",e.reduceDamageToOne="reduceDamageToOne",e.guardMitigation="guardMitigation",e.barrier="barrier",e.fireElementalDamage="fireElementalDamage",e.waterElementalDamage="waterElementalDamage",e.earthElementalDamage="earthElementalDamage",e.thunderElementalDamage="thunderElementalDamage",e.lightElementalDamage="lightElementalDamage",e.darkElementalDamage="darkElementalDamage",e.elementalWeaknessDamageMitigation="elementalWeaknessDamageMitigation",e.turnDurationModification="turnDurationModification",e.koResistance="koResistance",e.revive="revive",e.defenseIgnore="defenseIgnore",e.defenseIgnoreMitigation="defenseIgnoreMitigation",e.criticalDamage="criticalDamage",e.criticalDamageMitigation="criticalDamageMitigation",e.sparkDamage="sparkDamage",e.sparkDamageMitigation="sparkDamageMitigation",e.bbAtk="bbAtk",e.hitCountModification="hitCountModification",e.damageReflect="damageReflect",e.targetingModification="targetingModification",e.elementModification="elementModification",e.buffStabilityModification="buffStabilityModification",e.extraAction="extraAction",e.damageOverTime="damageOverTime",e.effectOccurrenceShift="effectOccurrenceShift",e.expModification="expModification",e.shield="shield",e.aoeNormalAttack="aoeNormalAttack"}(j||(j={})),function(e){e.UNKNOWN="UNKNOWN",e.TURN_DURATION_UP="TURN_DURATION_UP",e.TURN_DURATION_DOWN="TURN_DURATION_DOWN",e.CONDITIONALBUFF_HPTHRESH="CONDITIONALBUFF_HPTHRESH",e.CONDITIONALBUFF_DAMAGETAKENTHRESH="CONDITIONALBUFF_DAMAGETAKENTHRESH",e.CONDITIONALBUFF_DAMAGEDEALTTHRESH="CONDITIONALBUFF_DAMAGEDEALTTHRESH",e.CONDITIONALBUFF_BCRECEIVEDTHRESH="CONDITIONALBUFF_BCRECEIVEDTHRESH",e.CONDITIONALBUFF_HCRECEIVEDTHRESH="CONDITIONALBUFF_HCRECEIVEDTHRESH",e.CONDITIONALBUFF_SPARKCOUNTTHRESH="CONDITIONALBUFF_SPARKCOUNTTHRESH",e.CONDITIONALBUFF_GUARD="CONDITIONALBUFF_GUARD",e.CONDITIONALBUFF_CRIT="CONDITIONALBUFF_CRIT",e.BUFF_ADDTO_BB="BUFF_ADDTO_BB",e.BUFF_ADDTO_SBB="BUFF_ADDTO_SBB",e.BUFF_ADDTO_UBB="BUFF_ADDTO_UBB",e.BUFF_HPUP="BUFF_HPUP",e.BUFF_HPDOWN="BUFF_HPDOWN",e.BUFF_ATKUP="BUFF_ATKUP",e.BUFF_ATKDOWN="BUFF_ATKDOWN",e.BUFF_DEFUP="BUFF_DEFUP",e.BUFF_DEFDOWN="BUFF_DEFDOWN",e.BUFF_RECUP="BUFF_RECUP",e.BUFF_RECDOWN="BUFF_RECDOWN",e.BUFF_CRTRATEUP="BUFF_CRTRATEUP",e.BUFF_CRTRATEDOWN="BUFF_CRTRATEDOWN",e.BUFF_SELFHPUP="BUFF_SELFHPUP",e.BUFF_HPTHRESHATKUP="BUFF_HPTHRESHATKUP",e.BUFF_HPTHRESHATKDOWN="BUFF_HPTHRESHATKDOWN",e.BUFF_HPTHRESHDEFUP="BUFF_HPTHRESHDEFUP",e.BUFF_HPTHRESHDEFDOWN="BUFF_HPTHRESHDEFDOWN",e.BUFF_HPTHRESHRECUP="BUFF_HPTHRESHRECUP",e.BUFF_HPTHRESHRECDOWN="BUFF_HPTHRESHRECDOWN",e.BUFF_HPTHRESHCRTRATEUP="BUFF_HPTHRESHCRTRATEUP",e.BUFF_HPTHRESHCRTRATEDOWN="BUFF_HPTHRESHCRTRATEDOWN",e.BUFF_BBGAUGETHRESHATKUP="BUFF_BBGAUGETHRESHATKUP",e.BUFF_BBGAUGETHRESHATKDOWN="BUFF_BBGAUGETHRESHATKDOWN",e.BUFF_BBGAUGETHRESHDEFUP="BUFF_BBGAUGETHRESHDEFUP",e.BUFF_BBGAUGETHRESHDEFDOWN="BUFF_BBGAUGETHRESHDEFDOWN",e.BUFF_BBGAUGETHRESHRECUP="BUFF_BBGAUGETHRESHRECUP",e.BUFF_BBGAUGETHRESHRECDOWN="BUFF_BBGAUGETHRESHRECDOWN",e.BUFF_BBGAUGETHRESHCRTRATEUP="BUFF_BBGAUGETHRESHCRTRATEUP",e.BUFF_BBGAUGETHRESHCRTRATEDOWN="BUFF_BBGAUGETHRESHCRTRATEDOWN",e.BUFF_HPREC="BUFF_HPREC",e.BUFF_BBREC="BUFF_BBREC",e.BUFF_DAMAGEBB="BUFF_DAMAGEBB",e.BUFF_BEENATK_HPREC="BUFF_BEENATK_HPREC",e.BUFF_FIREHPUP="BUFF_FIREHPUP",e.BUFF_FIREHPDOWN="BUFF_FIREHPDOWN",e.BUFF_FIREATKUP="BUFF_FIREATKUP",e.BUFF_FIREATKDOWN="BUFF_FIREATKDOWN",e.BUFF_FIREDEFUP="BUFF_FIREDEFUP",e.BUFF_FIREDEFDOWN="BUFF_FIREDEFDOWN",e.BUFF_FIRERECUP="BUFF_FIRERECUP",e.BUFF_FIRERECDOWN="BUFF_FIRERECDOWN",e.BUFF_FIRECRTRATEUP="BUFF_FIRECRTRATEUP",e.BUFF_FIRECRTRATEDOWN="BUFF_FIRECRTRATEDOWN",e.BUFF_WATERHPUP="BUFF_WATERHPUP",e.BUFF_WATERHPDOWN="BUFF_WATERHPDOWN",e.BUFF_WATERATKUP="BUFF_WATERATKUP",e.BUFF_WATERATKDOWN="BUFF_WATERATKDOWN",e.BUFF_WATERDEFUP="BUFF_WATERDEFUP",e.BUFF_WATERDEFDOWN="BUFF_WATERDEFDOWN",e.BUFF_WATERRECUP="BUFF_WATERRECUP",e.BUFF_WATERRECDOWN="BUFF_WATERRECDOWN",e.BUFF_WATERCRTRATEUP="BUFF_WATERCRTRATEUP",e.BUFF_WATERCRTRATEDOWN="BUFF_WATERCRTRATEDOWN",e.BUFF_EARTHHPUP="BUFF_EARTHHPUP",e.BUFF_EARTHHPDOWN="BUFF_EARTHHPDOWN",e.BUFF_EARTHATKUP="BUFF_EARTHATKUP",e.BUFF_EARTHATKDOWN="BUFF_EARTHATKDOWN",e.BUFF_EARTHDEFUP="BUFF_EARTHDEFUP",e.BUFF_EARTHDEFDOWN="BUFF_EARTHDEFDOWN",e.BUFF_EARTHRECUP="BUFF_EARTHRECUP",e.BUFF_EARTHRECDOWN="BUFF_EARTHRECDOWN",e.BUFF_EARTHCRTRATEUP="BUFF_EARTHCRTRATEUP",e.BUFF_EARTHCRTRATEDOWN="BUFF_EARTHCRTRATEDOWN",e.BUFF_THUNDERHPUP="BUFF_THUNDERHPUP",e.BUFF_THUNDERHPDOWN="BUFF_THUNDERHPDOWN",e.BUFF_THUNDERATKUP="BUFF_THUNDERATKUP",e.BUFF_THUNDERATKDOWN="BUFF_THUNDERATKDOWN",e.BUFF_THUNDERDEFUP="BUFF_THUNDERDEFUP",e.BUFF_THUNDERDEFDOWN="BUFF_THUNDERDEFDOWN",e.BUFF_THUNDERRECUP="BUFF_THUNDERRECUP",e.BUFF_THUNDERRECDOWN="BUFF_THUNDERRECDOWN",e.BUFF_THUNDERCRTRATEUP="BUFF_THUNDERCRTRATEUP",e.BUFF_THUNDERCRTRATEDOWN="BUFF_THUNDERCRTRATEDOWN",e.BUFF_LIGHTHPUP="BUFF_LIGHTHPUP",e.BUFF_LIGHTHPDOWN="BUFF_LIGHTHPDOWN",e.BUFF_LIGHTATKUP="BUFF_LIGHTATKUP",e.BUFF_LIGHTATKDOWN="BUFF_LIGHTATKDOWN",e.BUFF_LIGHTDEFUP="BUFF_LIGHTDEFUP",e.BUFF_LIGHTDEFDOWN="BUFF_LIGHTDEFDOWN",e.BUFF_LIGHTRECUP="BUFF_LIGHTRECUP",e.BUFF_LIGHTRECDOWN="BUFF_LIGHTRECDOWN",e.BUFF_LIGHTCRTRATEUP="BUFF_LIGHTCRTRATEUP",e.BUFF_LIGHTCRTRATEDOWN="BUFF_LIGHTCRTRATEDOWN",e.BUFF_DARKHPUP="BUFF_DARKHPUP",e.BUFF_DARKHPDOWN="BUFF_DARKHPDOWN",e.BUFF_DARKATKUP="BUFF_DARKATKUP",e.BUFF_DARKATKDOWN="BUFF_DARKATKDOWN",e.BUFF_DARKDEFUP="BUFF_DARKDEFUP",e.BUFF_DARKDEFDOWN="BUFF_DARKDEFDOWN",e.BUFF_DARKRECUP="BUFF_DARKRECUP",e.BUFF_DARKRECDOWN="BUFF_DARKRECDOWN",e.BUFF_DARKCRTRATEUP="BUFF_DARKCRTRATEUP",e.BUFF_DARKCRTRATEDOWN="BUFF_DARKCRTRATEDOWN",e.BUFF_ELEMENTHPUP="BUFF_ELEMENTHPUP",e.BUFF_ELEMENTHPDOWN="BUFF_ELEMENTHPDOWN",e.BUFF_ELEMENTATKUP="BUFF_ELEMENTATKUP",e.BUFF_ELEMENTATKDOWN="BUFF_ELEMENTATKDOWN",e.BUFF_ELEMENTDEFUP="BUFF_ELEMENTDEFUP",e.BUFF_ELEMENTDEFDOWN="BUFF_ELEMENTDEFDOWN",e.BUFF_ELEMENTRECUP="BUFF_ELEMENTRECUP",e.BUFF_ELEMENTRECDOWN="BUFF_ELEMENTRECDOWN",e.BUFF_ELEMENTCRTRATEUP="BUFF_ELEMENTCRTRATEUP",e.BUFF_ELEMENTCRTRATEDOWN="BUFF_ELEMENTCRTRATEDOWN",e.BUFF_LORDHPUP="BUFF_LORDHPUP",e.BUFF_LORDHPDOWN="BUFF_LORDHPDOWN",e.BUFF_LORDATKUP="BUFF_LORDATKUP",e.BUFF_LORDATKDOWN="BUFF_LORDATKDOWN",e.BUFF_LORDDEFUP="BUFF_LORDDEFUP",e.BUFF_LORDDEFDOWN="BUFF_LORDDEFDOWN",e.BUFF_LORDRECUP="BUFF_LORDRECUP",e.BUFF_LORDRECDOWN="BUFF_LORDRECDOWN",e.BUFF_LORDCRTRATEUP="BUFF_LORDCRTRATEUP",e.BUFF_LORDCRTRATEDOWN="BUFF_LORDCRTRATEDOWN",e.BUFF_ANIMAHPUP="BUFF_ANIMAHPUP",e.BUFF_ANIMAHPDOWN="BUFF_ANIMAHPDOWN",e.BUFF_ANIMAATKUP="BUFF_ANIMAATKUP",e.BUFF_ANIMAATKDOWN="BUFF_ANIMAATKDOWN",e.BUFF_ANIMADEFUP="BUFF_ANIMADEFUP",e.BUFF_ANIMADEFDOWN="BUFF_ANIMADEFDOWN",e.BUFF_ANIMARECUP="BUFF_ANIMARECUP",e.BUFF_ANIMARECDOWN="BUFF_ANIMARECDOWN",e.BUFF_ANIMACRTRATEUP="BUFF_ANIMACRTRATEUP",e.BUFF_ANIMACRTRATEDOWN="BUFF_ANIMACRTRATEDOWN",e.BUFF_BREAKERHPUP="BUFF_BREAKERHPUP",e.BUFF_BREAKERHPDOWN="BUFF_BREAKERHPDOWN",e.BUFF_BREAKERATKUP="BUFF_BREAKERATKUP",e.BUFF_BREAKERATKDOWN="BUFF_BREAKERATKDOWN",e.BUFF_BREAKERDEFUP="BUFF_BREAKERDEFUP",e.BUFF_BREAKERDEFDOWN="BUFF_BREAKERDEFDOWN",e.BUFF_BREAKERRECUP="BUFF_BREAKERRECUP",e.BUFF_BREAKERRECDOWN="BUFF_BREAKERRECDOWN",e.BUFF_BREAKERCRTRATEUP="BUFF_BREAKERCRTRATEUP",e.BUFF_BREAKERCRTRATEDOWN="BUFF_BREAKERCRTRATEDOWN",e.BUFF_GUARDIANHPUP="BUFF_GUARDIANHPUP",e.BUFF_GUARDIANHPDOWN="BUFF_GUARDIANHPDOWN",e.BUFF_GUARDIANATKUP="BUFF_GUARDIANATKUP",e.BUFF_GUARDIANATKDOWN="BUFF_GUARDIANATKDOWN",e.BUFF_GUARDIANDEFUP="BUFF_GUARDIANDEFUP",e.BUFF_GUARDIANDEFDOWN="BUFF_GUARDIANDEFDOWN",e.BUFF_GUARDIANRECUP="BUFF_GUARDIANRECUP",e.BUFF_GUARDIANRECDOWN="BUFF_GUARDIANRECDOWN",e.BUFF_GUARDIANCRTRATEUP="BUFF_GUARDIANCRTRATEUP",e.BUFF_GUARDIANCRTRATEDOWN="BUFF_GUARDIANCRTRATEDOWN",e.BUFF_ORACLEHPUP="BUFF_ORACLEHPUP",e.BUFF_ORACLEHPDOWN="BUFF_ORACLEHPDOWN",e.BUFF_ORACLEATKUP="BUFF_ORACLEATKUP",e.BUFF_ORACLEATKDOWN="BUFF_ORACLEATKDOWN",e.BUFF_ORACLEDEFUP="BUFF_ORACLEDEFUP",e.BUFF_ORACLEDEFDOWN="BUFF_ORACLEDEFDOWN",e.BUFF_ORACLERECUP="BUFF_ORACLERECUP",e.BUFF_ORACLERECDOWN="BUFF_ORACLERECDOWN",e.BUFF_ORACLECRTRATEUP="BUFF_ORACLECRTRATEUP",e.BUFF_ORACLECRTRATEDOWN="BUFF_ORACLECRTRATEDOWN",e.BUFF_REXHPUP="BUFF_REXHPUP",e.BUFF_REXHPDOWN="BUFF_REXHPDOWN",e.BUFF_REXATKUP="BUFF_REXATKUP",e.BUFF_REXATKDOWN="BUFF_REXATKDOWN",e.BUFF_REXDEFUP="BUFF_REXDEFUP",e.BUFF_REXDEFDOWN="BUFF_REXDEFDOWN",e.BUFF_REXRECUP="BUFF_REXRECUP",e.BUFF_REXRECDOWN="BUFF_REXRECDOWN",e.BUFF_REXCRTRATEUP="BUFF_REXCRTRATEUP",e.BUFF_REXCRTRATEDOWN="BUFF_REXCRTRATEDOWN",e.BUFF_UNITTYPEHPUP="BUFF_UNITTYPEHPUP",e.BUFF_UNITTYPEHPDOWN="BUFF_UNITTYPEHPDOWN",e.BUFF_UNITTYPEATKUP="BUFF_UNITTYPEATKUP",e.BUFF_UNITTYPEATKDOWN="BUFF_UNITTYPEATKDOWN",e.BUFF_UNITTYPEDEFUP="BUFF_UNITTYPEDEFUP",e.BUFF_UNITTYPEDEFDOWN="BUFF_UNITTYPEDEFDOWN",e.BUFF_UNITTYPERECUP="BUFF_UNITTYPERECUP",e.BUFF_UNITTYPERECDOWN="BUFF_UNITTYPERECDOWN",e.BUFF_UNITTYPECRTRATEUP="BUFF_UNITTYPECRTRATEUP",e.BUFF_UNITTYPECRTRATEDOWN="BUFF_UNITTYPECRTRATEDOWN",e.BUFF_UNIQUEELEMENTHPUP="BUFF_UNIQUEELEMENTHPUP",e.BUFF_UNIQUEELEMENTHPDOWN="BUFF_UNIQUEELEMENTHPDOWN",e.BUFF_UNIQUEELEMENTATKUP="BUFF_UNIQUEELEMENTATKUP",e.BUFF_UNIQUEELEMENTATKDOWN="BUFF_UNIQUEELEMENTATKDOWN",e.BUFF_UNIQUEELEMENTDEFUP="BUFF_UNIQUEELEMENTDEFUP",e.BUFF_UNIQUEELEMENTDEFDOWN="BUFF_UNIQUEELEMENTDEFDOWN",e.BUFF_UNIQUEELEMENTRECUP="BUFF_UNIQUEELEMENTRECUP",e.BUFF_UNIQUEELEMENTRECDOWN="BUFF_UNIQUEELEMENTRECDOWN",e.BUFF_UNIQUEELEMENTCRTRATEUP="BUFF_UNIQUEELEMENTCRTRATEUP",e.BUFF_UNIQUEELEMENTCRTRATEDOWN="BUFF_UNIQUEELEMENTCRTRATEDOWN",e.BUFF_MALEHPUP="BUFF_MALEHPUP",e.BUFF_MALEHPDOWN="BUFF_MALEHPDOWN",e.BUFF_MALEATKUP="BUFF_MALEATKUP",e.BUFF_MALEATKDOWN="BUFF_MALEATKDOWN",e.BUFF_MALEDEFUP="BUFF_MALEDEFUP",e.BUFF_MALEDEFDOWN="BUFF_MALEDEFDOWN",e.BUFF_MALERECUP="BUFF_MALERECUP",e.BUFF_MALERECDOWN="BUFF_MALERECDOWN",e.BUFF_MALECRTRATEUP="BUFF_MALECRTRATEUP",e.BUFF_MALECRTRATEDOWN="BUFF_MALECRTRATEDOWN",e.BUFF_FEMALEHPUP="BUFF_FEMALEHPUP",e.BUFF_FEMALEHPDOWN="BUFF_FEMALEHPDOWN",e.BUFF_FEMALEATKUP="BUFF_FEMALEATKUP",e.BUFF_FEMALEATKDOWN="BUFF_FEMALEATKDOWN",e.BUFF_FEMALEDEFUP="BUFF_FEMALEDEFUP",e.BUFF_FEMALEDEFDOWN="BUFF_FEMALEDEFDOWN",e.BUFF_FEMALERECUP="BUFF_FEMALERECUP",e.BUFF_FEMALERECDOWN="BUFF_FEMALERECDOWN",e.BUFF_FEMALECRTRATEUP="BUFF_FEMALECRTRATEUP",e.BUFF_FEMALECRTRATEDOWN="BUFF_FEMALECRTRATEDOWN",e.BUFF_OTHERHPUP="BUFF_OTHERHPUP",e.BUFF_OTHERHPDOWN="BUFF_OTHERHPDOWN",e.BUFF_OTHERATKUP="BUFF_OTHERATKUP",e.BUFF_OTHERATKDOWN="BUFF_OTHERATKDOWN",e.BUFF_OTHERDEFUP="BUFF_OTHERDEFUP",e.BUFF_OTHERDEFDOWN="BUFF_OTHERDEFDOWN",e.BUFF_OTHERRECUP="BUFF_OTHERRECUP",e.BUFF_OTHERRECDOWN="BUFF_OTHERRECDOWN",e.BUFF_OTHERCRTRATEUP="BUFF_OTHERCRTRATEUP",e.BUFF_OTHERCRTRATEDOWN="BUFF_OTHERCRTRATEDOWN",e.BUFF_GENDERHPUP="BUFF_GENDERHPUP",e.BUFF_GENDERHPDOWN="BUFF_GENDERHPDOWN",e.BUFF_GENDERATKUP="BUFF_GENDERATKUP",e.BUFF_GENDERATKDOWN="BUFF_GENDERATKDOWN",e.BUFF_GENDERDEFUP="BUFF_GENDERDEFUP",e.BUFF_GENDERDEFDOWN="BUFF_GENDERDEFDOWN",e.BUFF_GENDERRECUP="BUFF_GENDERRECUP",e.BUFF_GENDERRECDOWN="BUFF_GENDERRECDOWN",e.BUFF_GENDERCRTRATEUP="BUFF_GENDERCRTRATEUP",e.BUFF_GENDERCRTRATEDOWN="BUFF_GENDERCRTRATEDOWN",e.BUFF_CONVERTATKUP="BUFF_CONVERTATKUP",e.BUFF_CONVERTATKDOWN="BUFF_CONVERTATKDOWN",e.BUFF_CONVERTDEFUP="BUFF_CONVERTDEFUP",e.BUFF_CONVERTDEFDOWN="BUFF_CONVERTDEFDOWN",e.BUFF_CONVERTRECUP="BUFF_CONVERTRECUP",e.BUFF_CONVERTRECDOWN="BUFF_CONVERTRECDOWN",e.BUFF_SELFCONVERTATKUP="BUFF_SELFCONVERTATKUP",e.BUFF_SELFCONVERTATKDOWN="BUFF_SELFCONVERTATKDOWN",e.BUFF_SELFCONVERTDEFUP="BUFF_SELFCONVERTDEFUP",e.BUFF_SELFCONVERTDEFDOWN="BUFF_SELFCONVERTDEFDOWN",e.BUFF_SELFCONVERTRECUP="BUFF_SELFCONVERTRECUP",e.BUFF_SELFCONVERTRECDOWN="BUFF_SELFCONVERTRECDOWN",e.BUFF_HPSCALEDATKUP="BUFF_HPSCALEDATKUP",e.BUFF_HPSCALEDATKDOWN="BUFF_HPSCALEDATKDOWN",e.BUFF_HPSCALEDDEFUP="BUFF_HPSCALEDDEFUP",e.BUFF_HPSCALEDDEFDOWN="BUFF_HPSCALEDDEFDOWN",e.BUFF_HPSCALEDRECUP="BUFF_HPSCALEDRECUP",e.BUFF_HPSCALEDRECDOWN="BUFF_HPSCALEDRECDOWN",e.BUFF_SELFATKUP="BUFF_SELFATKUP",e.BUFF_ATKDOWNLOCK="BUFF_ATKDOWNLOCK",e.BUFF_SELFDEFUP="BUFF_SELFDEFUP",e.BUFF_DEFDOWNLOCK="BUFF_DEFDOWNLOCK",e.BUFF_SELFRECUP="BUFF_SELFRECUP",e.BUFF_RECDOWNLOCK="BUFF_RECDOWNLOCK",e.BUFF_SELFCRTRATEUP="BUFF_SELFCRTRATEUP",e.BUFF_CRTRATEDOWNLOCK="BUFF_CRTRATEDOWNLOCK",e.BUFF_POISONBLK="BUFF_POISONBLK",e.BUFF_WEAKBLK="BUFF_WEAKBLK",e.BUFF_SICKBLK="BUFF_SICKBLK",e.BUFF_INJURYBLK="BUFF_INJURYBLK",e.BUFF_CURSEBLK="BUFF_CURSEBLK",e.BUFF_PARALYSISBLK="BUFF_PARALYSISBLK",e.BUFF_RESISTATKDOWN="BUFF_RESISTATKDOWN",e.BUFF_RESISTDEFDOWN="BUFF_RESISTDEFDOWN",e.BUFF_RESISTRECDOWN="BUFF_RESISTRECDOWN",e.BUFF_AILMENTBLK="BUFF_AILMENTBLK",e.DEBUFF_POISON="DEBUFF_POISON",e.DEBUFF_WEAK="DEBUFF_WEAK",e.DEBUFF_SICK="DEBUFF_SICK",e.DEBUFF_INJURY="DEBUFF_INJURY",e.DEBUFF_CURSE="DEBUFF_CURSE",e.DEBUFF_PARALYSIS="DEBUFF_PARALYSIS",e.DEBUFF_AILMENT="DEBUFF_AILMENT",e.BUFF_ADDPOISON="BUFF_ADDPOISON",e.BUFF_ADDWEAK="BUFF_ADDWEAK",e.BUFF_ADDSICK="BUFF_ADDSICK",e.BUFF_ADDINJURY="BUFF_ADDINJURY",e.BUFF_ADDCURSE="BUFF_ADDCURSE",e.BUFF_ADDPARA="BUFF_ADDPARA",e.BUFF_ADDAILMENT="BUFF_ADDAILMENT",e.BUFF_ADDATKDOWN="BUFF_ADDATKDOWN",e.BUFF_ADDDEFDOWN="BUFF_ADDDEFDOWN",e.BUFF_ADDRECDOWN="BUFF_ADDRECDOWN",e.BUFF_POISONCOUNTER="BUFF_POISONCOUNTER",e.BUFF_POISIONCOUNTER="BUFF_POISONCOUNTER",e.BUFF_WEAKCOUNTER="BUFF_WEAKCOUNTER",e.BUFF_SICKCOUNTER="BUFF_SICKCOUNTER",e.BUFF_INJCONTER="BUFF_INJCONTER",e.BUFF_CURSECOUNTER="BUFF_CURSECOUNTER",e.BUFF_PARALYCOUNTER="BUFF_PARALYCOUNTER",e.BUFF_PROB_ATKREDUC="BUFF_PROB_ATKREDUC",e.BUFF_PROB_DEFREDUC="BUFF_PROB_DEFREDUC",e.BUFF_PROB_RECREDUC="BUFF_PROB_RECREDUC",e.BUFF_DAMAGECUT="BUFF_DAMAGECUT",e.BUFF_DAMAGECUTTOONE="BUFF_DAMAGECUTTOONE",e.BUFF_FIREDMGDOWN="BUFF_FIREDMGDOWN",e.BUFF_WATERDMGDOWN="BUFF_WATERDMGDOWN",e.BUFF_EARTHDMGDOWN="BUFF_EARTHDMGDOWN",e.BUFF_THUNDERDMGDOWN="BUFF_THUNDERDMGDOWN",e.BUFF_LIGHTDMGDOWN="BUFF_LIGHTDMGDOWN",e.BUFF_DARKDMGDOWN="BUFF_DARKDMGDOWN",e.BUFF_ELEMENTDMGDOWN="BUFF_ELEMENTDMGDOWN",e.BUFF_FIREDMGUP="BUFF_FIREDMGUP",e.BUFF_WATERDMGUP="BUFF_WATERDMGUP",e.BUFF_WATERMDGUP="BUFF_WATERDMGUP",e.BUFF_EARTHDMGUP="BUFF_EARTHDMGUP",e.BUFF_THUNDERDMGUP="BUFF_THUNDERDMGUP",e.BUFF_LIGHTDMGUP="BUFF_LIGHTDMGUP",e.BUFF_DARKDMGUP="BUFF_DARKDMGUP",e.BUFF_ELEMENTDMGUP="BUFF_ELEMENTDMGUP",e.BUFF_HCDROP="BUFF_HCDROP",e.BUFF_HCDOWN="BUFF_HCDOWN",e.BUFF_BCDROP="BUFF_BCDROP",e.BUFF_BCDOWN="BUFF_BCDOWN",e.BUFF_ITEMDROP="BUFF_ITEMDROP",e.BUFF_ITEMDOWN="BUFF_ITEMDOWN",e.BUFF_ZELDROP="BUFF_ZELDROP",e.BUFF_ZELDOWN="BUFF_ZELDOWN",e.BUFF_KARMADROP="BUFF_KARMADROP",e.BUFF_KARMADOWN="BUFF_KARMADOWN",e.BUFF_HPTHRESHHCDROP="BUFF_HPTHRESHHCDROP",e.BUFF_HPTHRESHHCDOWN="BUFF_HPTHRESHHCDOWN",e.BUFF_HPTHRESHBCDROP="BUFF_HPTHRESHBCDROP",e.BUFF_HPTHRESHBCDOWN="BUFF_HPTHRESHBCDOWN",e.BUFF_HPTHRESHITEMDROP="BUFF_HPTHRESHITEMDROP",e.BUFF_HPTHRESHITEMDOWN="BUFF_HPTHRESHITEMDOWN",e.BUFF_HPTHRESHZELDROP="BUFF_HPTHRESHZELDROP",e.BUFF_HPTHRESHZELDOWN="BUFF_HPTHRESHZELDOWN",e.BUFF_HPTHRESHKARMADROP="BUFF_HPTHRESHKARMADROP",e.BUFF_HPTHRESHKARMADOWN="BUFF_HPTHRESHKARMADOWN",e.BUFF_BBFILL="BUFF_BBFILL",e.BUFF_BBFILLDOWN="BUFF_BBFILLDOWN",e.BUFF_HCREC="BUFF_HCREC",e.BUFF_KOBLK="BUFF_KOBLK",e.BUFF_KO="BUFF_KO",e.BUFF_KOBLOCK="BUFF_KOBLOCK",e.BUFF_HPABS="BUFF_HPABS",e.BUFF_IGNOREDEF="BUFF_IGNOREDEF",e.BUFF_IGNOREDEFBLK="BUFF_IGNOREDEFBLK",e.BUFF_CRTUP="BUFF_CRTUP",e.BUFF_CRTDOWN="BUFF_CRTDOWN",e.BUFF_ELEMENTDOWN="BUFF_ELEMENTDOWN",e.BUFF_SPARKUP="BUFF_SPARKUP",e.BUFF_SPARKDOWN="BUFF_SPARKDOWN",e.BUFF_SPARKDMGUP="BUFF_SPARKDMGUP",e.BUFF_SPARKDMGDOWN="BUFF_SPARKDMGDOWN",e.BUFF_SPARKDMGUP2="BUFF_SPARKDMGUP2",e.BUFF_SPARKDMGDOWN2="BUFF_SPARKDMGDOWN2",e.BUFF_SPARKHC="BUFF_SPARKHC",e.BUFF_SPARKBC="BUFF_SPARKBC",e.BUFF_SPARKITEM="BUFF_SPARKITEM",e.BUFF_SPARKZEL="BUFF_SPARKZEL",e.BUFF_SPARKKARMA="BUFF_SPARKKARMA",e.BUFF_SPARKBBUP="BUFF_SPARKBBUP",e.BUFF_HITUP="BUFF_HITUP",e.BUFF_COUNTERDAMAGE="BUFF_COUNTERDAMAGE",e.BUFF_GETENEATT="BUFF_GETENEATT",e.BUFF_REPENEATT="BUFF_REPENEATT",e.BUFF_HPTHRESHGETENEATT="BUFF_HPTHRESHGETENEATT",e.BUFF_HPTHRESHREPENEATT="BUFF_HPTHRESHREPENEATT",e.BUFF_ADDFIRE="BUFF_ADDFIRE",e.BUFF_ADDWATER="BUFF_ADDWATER",e.BUFF_ADDEARTH="BUFF_ADDEARTH",e.BUFF_ADDTHUNDER="BUFF_ADDTHUNDER",e.BUFF_ADDLIGHT="BUFF_ADDLIGHT",e.BUFF_ADDDARK="BUFF_ADDDARK",e.BUFF_ADDELEMENT="BUFF_ADDELEMENT",e.BUFF_SHIFTFIRE="BUFF_SHIFTFIRE",e.BUFF_SHIFTWATER="BUFF_SHIFTWATER",e.BUFF_SHIFTEARTH="BUFF_SHIFTEARTH",e.BUFF_SHIFTTHUNDER="BUFF_SHIFTTHUNDER",e.BUFF_SHIFTLIGHT="BUFF_SHIFTLIGHT",e.BUFF_SHIFTDARK="BUFF_SHIFTDARK",e.BUFF_SHIFTELEMENT="BUFF_SHIFTELEMENT",e.BUFF_REMOVEBUFF="BUFF_REMOVEBUFF",e.BUFF_DISABLELS="BUFF_DISABLELS",e.BUFF_NULLSPHERE="BUFF_NULLSPHERE",e.BUFF_NULLES="BUFF_NULLES",e.BUFF_SUMMONUNIT="BUFF_SUMMONUNIT",e.BUFF_DBLSTRIKE="BUFF_DBLSTRIKE",e.BUFF_OVERDRIVEUP="BUFF_OVERDRIVEUP",e.BUFF_ODFILLBOOST="BUFF_ODFILLBOOST",e.BUFF_TURNDMG="BUFF_TURNDMG",e.BUFF_BBATKUP="BUFF_BBATKUP",e.BUFF_SBBATKUP="BUFF_SBBATKUP",e.BUFF_UBBATKUP="BUFF_UBBATKUP",e.BUFF_BBATKDOWN="BUFF_BBATKDOWN",e.BUFF_SBBATKDOWN="BUFF_SBBATKDOWN",e.BUFF_UBBATKDOWN="BUFF_UBBATKDOWN",e.BUFF_BBCOST_REDUCTION="BUFF_BBCOST_REDUCTION",e.BUFF_GUARDCUT="BUFF_GUARDCUT",e.BUFF_GUARDBBUP="BUFF_GUARDBBUP",e.BUFF_FIRESHIELD="BUFF_FIRESHIELD",e.BUFF_WATERSHIELD="BUFF_WATERSHIELD",e.BUFF_EARTHSHIELD="BUFF_EARTHSHIELD",e.BUFF_THUNDERSHIELD="BUFF_THUNDERSHIELD",e.BUFF_LIGHTSHIELD="BUFF_LIGHTSHIELD",e.BUFF_DARKSHIELD="BUFF_DARKSHIELD",e.BUFF_ELEMENTSHIELD="BUFF_ELEMENTSHIELD",e.BUFF_AILDMGUP="BUFF_AILDMGUP",e.BUFF_HPTURNSTART="BUFF_HPTURNSTART",e.BUFF_BCTURNSTART="BUFF_BCTURNSTART",e.BUFF_PLAYEREXP="BUFF_PLAYEREXP",e.BUFF_SPARKCRTACTIVATED="BUFF_SPARKCRTACTIVATED",e.BUFF_SPARK_HPREC="BUFF_SPARK_HPREC",e.BUFF_AOEATK="BUFF_AOEATK",e.SG_BUFF_ALL="SG_BUFF_ALL",e.SG_BUFF_FIRE="SG_BUFF_FIRE",e.SG_BUFF_WATER="SG_BUFF_WATER",e.SG_BUFF_EARTH="SG_BUFF_EARTH",e.SG_BUFF_THUNDER="SG_BUFF_THUNDER",e.SG_BUFF_LIGHT="SG_BUFF_LIGHT",e.SG_BUFF_DARK="SG_BUFF_DARK",e.SG_BUFF_UNKNOWN="SG_BUFF_UNKNOWN",e.SG_BUFF_STEALTH="SG_BUFF_STEALTH",e.ATK_ST="ATK_ST",e.ATK_AOE="ATK_AOE",e.ATK_RT="ATK_RT",e.ATK_ST_HPREC="ATK_ST_HPREC",e.ATK_AOE_HPREC="ATK_AOE_HPREC",e.ATK_ST_PROPORTIONAL="ATK_ST_PROPORTIONAL",e.ATK_AOE_PROPORTIONAL="ATK_AOE_PROPORTIONAL",e.ATK_ST_PIERCING_PROPORTIONAL="ATK_ST_PIERCING_PROPORTIONAL",e.ATK_AOE_PIERCING_PROPORTIONAL="ATK_AOE_PIERCING_PROPORTIONAL",e.ATK_ST_FIXED="ATK_ST_FIXED",e.ATK_AOE_FIXED="ATK_AOE_FIXED",e.ATK_ST_PIERCING_FIXED="ATK_ST_PIERCING_FIXED",e.ATK_AOE_PIERCING_FIXED="ATK_AOE_PIERCING_FIXED",e.ATK_ST_MULTIELEMENT="ATK_ST_MULTIELEMENT",e.ATK_AOE_MULTIELEMENT="ATK_AOE_MULTIELEMENT",e.ATK_ST_SACRIFICIAL="ATK_ST_SACRIFICIAL",e.ATK_AOE_SACRIFICIAL="ATK_AOE_SACRIFICIAL",e.ATK_ST_HPSCALED="ATK_ST_HPSCALED",e.ATK_AOE_HPSCALED="ATK_AOE_HPSCALED",e.ATK_ST_BBGAUGESCALED="ATK_ST_BBGAUGESCALED",e.ATK_AOE_BBGAUGESCALED="ATK_AOE_BBGAUGESCALED",e.ATK_ST_USAGESCALED="ATK_ST_USAGESCALED",e.ATK_AOE_USAGESCALED="ATK_AOE_USAGESCALED",e.ATK_ST_ELEMENTSCALED="ATK_ST_ELEMENTSCALED",e.ATK_AOE_ELEMENTSCALED="ATK_AOE_ELEMENTSCALED"}(M||(M={})),function(e){e.TURN_DURATION_MODIFICATION="TURN_DURATION_MODIFICATION",e.NO_PARAMS_SPECIFIED="NO_PARAMS_SPECIFIED",e.UNKNOWN_PASSIVE_EFFECT_ID="UNKNOWN_PASSIVE_EFFECT_ID",e.UNKNOWN_PASSIVE_BUFF_PARAMS="UNKNOWN_PASSIVE_BUFF_PARAMS",e["passive:1:hp"]="passive:1:hp",e["passive:1:atk"]="passive:1:atk",e["passive:1:def"]="passive:1:def",e["passive:1:rec"]="passive:1:rec",e["passive:1:crit"]="passive:1:crit",e["passive:2:elemental-hp"]="passive:2:elemental-hp",e["passive:2:elemental-atk"]="passive:2:elemental-atk",e["passive:2:elemental-def"]="passive:2:elemental-def",e["passive:2:elemental-rec"]="passive:2:elemental-rec",e["passive:2:elemental-crit"]="passive:2:elemental-crit",e["passive:3:type based-hp"]="passive:3:type based-hp",e["passive:3:type based-atk"]="passive:3:type based-atk",e["passive:3:type based-def"]="passive:3:type based-def",e["passive:3:type based-rec"]="passive:3:type based-rec",e["passive:3:type based-crit"]="passive:3:type based-crit",e["passive:4:resist-poison"]="passive:4:resist-poison",e["passive:4:resist-weak"]="passive:4:resist-weak",e["passive:4:resist-sick"]="passive:4:resist-sick",e["passive:4:resist-injury"]="passive:4:resist-injury",e["passive:4:resist-curse"]="passive:4:resist-curse",e["passive:4:resist-paralysis"]="passive:4:resist-paralysis",e["passive:5:mitigate-fire"]="passive:5:mitigate-fire",e["passive:5:mitigate-water"]="passive:5:mitigate-water",e["passive:5:mitigate-earth"]="passive:5:mitigate-earth",e["passive:5:mitigate-thunder"]="passive:5:mitigate-thunder",e["passive:5:mitigate-light"]="passive:5:mitigate-light",e["passive:5:mitigate-dark"]="passive:5:mitigate-dark",e["passive:5:mitigate-unknown"]="passive:5:mitigate-unknown",e["passive:8:mitigation"]="passive:8:mitigation",e["passive:9:gradual bc fill"]="passive:9:gradual bc fill",e["passive:10:hc efficacy"]="passive:10:hc efficacy",e["passive:11:hp conditional-atk"]="passive:11:hp conditional-atk",e["passive:11:hp conditional-def"]="passive:11:hp conditional-def",e["passive:11:hp conditional-rec"]="passive:11:hp conditional-rec",e["passive:11:hp conditional-crit"]="passive:11:hp conditional-crit",e["passive:12:hp conditional drop boost-bc"]="passive:12:hp conditional drop boost-bc",e["passive:12:hp conditional drop boost-hc"]="passive:12:hp conditional drop boost-hc",e["passive:12:hp conditional drop boost-item"]="passive:12:hp conditional drop boost-item",e["passive:12:hp conditional drop boost-zel"]="passive:12:hp conditional drop boost-zel",e["passive:12:hp conditional drop boost-karma"]="passive:12:hp conditional drop boost-karma",e["passive:13:bc fill on enemy defeat"]="passive:13:bc fill on enemy defeat",e["passive:14:chance mitigation"]="passive:14:chance mitigation",e["passive:15:heal on enemy defeat"]="passive:15:heal on enemy defeat",e["passive:16:heal on win"]="passive:16:heal on win",e["passive:17:hp absorb"]="passive:17:hp absorb",e["passive:19:drop boost-bc"]="passive:19:drop boost-bc",e["passive:19:drop boost-hc"]="passive:19:drop boost-hc",e["passive:19:drop boost-item"]="passive:19:drop boost-item",e["passive:19:drop boost-zel"]="passive:19:drop boost-zel",e["passive:19:drop boost-karma"]="passive:19:drop boost-karma",e["passive:20:chance inflict-poison"]="passive:20:chance inflict-poison",e["passive:20:chance inflict-weak"]="passive:20:chance inflict-weak",e["passive:20:chance inflict-sick"]="passive:20:chance inflict-sick",e["passive:20:chance inflict-injury"]="passive:20:chance inflict-injury",e["passive:20:chance inflict-curse"]="passive:20:chance inflict-curse",e["passive:20:chance inflict-paralysis"]="passive:20:chance inflict-paralysis",e["passive:20:chance inflict-atk down"]="passive:20:chance inflict-atk down",e["passive:20:chance inflict-def down"]="passive:20:chance inflict-def down",e["passive:20:chance inflict-rec down"]="passive:20:chance inflict-rec down",e["passive:20:chance inflict-unknown"]="passive:20:chance inflict-unknown",e["passive:21:first turn-atk"]="passive:21:first turn-atk",e["passive:21:first turn-def"]="passive:21:first turn-def",e["passive:21:first turn-rec"]="passive:21:first turn-rec",e["passive:21:first turn-crit"]="passive:21:first turn-crit",e["passive:23:bc fill on win"]="passive:23:bc fill on win",e["passive:24:heal on hit"]="passive:24:heal on hit",e["passive:25:bc fill on hit"]="passive:25:bc fill on hit",e["passive:26:chance damage reflect"]="passive:26:chance damage reflect",e["passive:27:target chance change"]="passive:27:target chance change",e["passive:28:hp conditional target chance change"]="passive:28:hp conditional target chance change",e["passive:29:chance def ignore"]="passive:29:chance def ignore",e["passive:30:bb gauge conditional-atk"]="passive:30:bb gauge conditional-atk",e["passive:30:bb gauge conditional-def"]="passive:30:bb gauge conditional-def",e["passive:30:bb gauge conditional-rec"]="passive:30:bb gauge conditional-rec",e["passive:30:bb gauge conditional-crit"]="passive:30:bb gauge conditional-crit",e["passive:31:spark-damage"]="passive:31:spark-damage",e["passive:31:spark-bc"]="passive:31:spark-bc",e["passive:31:spark-hc"]="passive:31:spark-hc",e["passive:31:spark-item"]="passive:31:spark-item",e["passive:31:spark-zel"]="passive:31:spark-zel",e["passive:31:spark-karma"]="passive:31:spark-karma",e["passive:32:bc efficacy"]="passive:32:bc efficacy",e["passive:33:gradual heal"]="passive:33:gradual heal",e["passive:34:critical damage"]="passive:34:critical damage",e["passive:35:bc fill on normal attack"]="passive:35:bc fill on normal attack",e["passive:36:extra action"]="passive:36:extra action",e["passive:37:hit count boost"]="passive:37:hit count boost",e["passive:40:converted-atk"]="passive:40:converted-atk",e["passive:40:converted-def"]="passive:40:converted-def",e["passive:40:converted-rec"]="passive:40:converted-rec",e["passive:41:unique element count-hp"]="passive:41:unique element count-hp",e["passive:41:unique element count-atk"]="passive:41:unique element count-atk",e["passive:41:unique element count-def"]="passive:41:unique element count-def",e["passive:41:unique element count-rec"]="passive:41:unique element count-rec",e["passive:41:unique element count-crit"]="passive:41:unique element count-crit",e["passive:42:gender-hp"]="passive:42:gender-hp",e["passive:42:gender-atk"]="passive:42:gender-atk",e["passive:42:gender-def"]="passive:42:gender-def",e["passive:42:gender-rec"]="passive:42:gender-rec",e["passive:42:gender-crit"]="passive:42:gender-crit",e["passive:43:chance damage to one"]="passive:43:chance damage to one",e["passive:44:flat-hp"]="passive:44:flat-hp",e["passive:44:flat-atk"]="passive:44:flat-atk",e["passive:44:flat-def"]="passive:44:flat-def",e["passive:44:flat-rec"]="passive:44:flat-rec",e["passive:44:flat-crit"]="passive:44:flat-crit",e["passive:45:critical damage reduction-base"]="passive:45:critical damage reduction-base",e["passive:45:critical damage reduction-buff"]="passive:45:critical damage reduction-buff",e["passive:46:hp scaled-atk"]="passive:46:hp scaled-atk",e["passive:46:hp scaled-def"]="passive:46:hp scaled-def",e["passive:46:hp scaled-rec"]="passive:46:hp scaled-rec",e["passive:47:bc fill on spark"]="passive:47:bc fill on spark",e["passive:48:bc cost reduction"]="passive:48:bc cost reduction",e["passive:49:bb gauge consumption reduction"]="passive:49:bb gauge consumption reduction",e["passive:50:elemental weakness damage-fire"]="passive:50:elemental weakness damage-fire",e["passive:50:elemental weakness damage-water"]="passive:50:elemental weakness damage-water",e["passive:50:elemental weakness damage-earth"]="passive:50:elemental weakness damage-earth",e["passive:50:elemental weakness damage-thunder"]="passive:50:elemental weakness damage-thunder",e["passive:50:elemental weakness damage-light"]="passive:50:elemental weakness damage-light",e["passive:50:elemental weakness damage-dark"]="passive:50:elemental weakness damage-dark",e["passive:50:elemental weakness damage-unknown"]="passive:50:elemental weakness damage-unknown",e["passive:53:critical damage-base"]="passive:53:critical damage-base",e["passive:53:critical damage-buff"]="passive:53:critical damage-buff",e["passive:53:element damage-base"]="passive:53:element damage-base",e["passive:53:element damage-buff"]="passive:53:element damage-buff",e["passive:53:critical rate-base"]="passive:53:critical rate-base",e["passive:53:critical rate-buff"]="passive:53:critical rate-buff",e["passive:55:hp conditional"]="passive:55:hp conditional",e["passive:58:guard mitigation"]="passive:58:guard mitigation",e["passive:59:bc fill when attacked on guard-percent"]="passive:59:bc fill when attacked on guard-percent",e["passive:59:bc fill when attacked on guard-flat"]="passive:59:bc fill when attacked on guard-flat",e["passive:61:bc fill on guard-percent"]="passive:61:bc fill on guard-percent",e["passive:61:bc fill on guard-flat"]="passive:61:bc fill on guard-flat",e["passive:62:mitigate-fire"]="passive:62:mitigate-fire",e["passive:62:mitigate-water"]="passive:62:mitigate-water",e["passive:62:mitigate-earth"]="passive:62:mitigate-earth",e["passive:62:mitigate-thunder"]="passive:62:mitigate-thunder",e["passive:62:mitigate-light"]="passive:62:mitigate-light",e["passive:62:mitigate-dark"]="passive:62:mitigate-dark",e["passive:62:mitigate-unknown"]="passive:62:mitigate-unknown",e["passive:63:first turn mitigate-fire"]="passive:63:first turn mitigate-fire",e["passive:63:first turn mitigate-water"]="passive:63:first turn mitigate-water",e["passive:63:first turn mitigate-earth"]="passive:63:first turn mitigate-earth",e["passive:63:first turn mitigate-thunder"]="passive:63:first turn mitigate-thunder",e["passive:63:first turn mitigate-light"]="passive:63:first turn mitigate-light",e["passive:63:first turn mitigate-dark"]="passive:63:first turn mitigate-dark",e["passive:63:first turn mitigate-unknown"]="passive:63:first turn mitigate-unknown",e["passive:64:attack boost-bb"]="passive:64:attack boost-bb",e["passive:64:attack boost-sbb"]="passive:64:attack boost-sbb",e["passive:64:attack boost-ubb"]="passive:64:attack boost-ubb",e["passive:65:bc fill on crit"]="passive:65:bc fill on crit",e["passive:66:add effect to skill-bb"]="passive:66:add effect to skill-bb",e["passive:66:add effect to skill-sbb"]="passive:66:add effect to skill-sbb",e["passive:66:add effect to skill-ubb"]="passive:66:add effect to skill-ubb",e["passive:69:chance ko resistance"]="passive:69:chance ko resistance",e["passive:70:od fill rate"]="passive:70:od fill rate",e["passive:71:inflict on hit-poison"]="passive:71:inflict on hit-poison",e["passive:71:inflict on hit-weak"]="passive:71:inflict on hit-weak",e["passive:71:inflict on hit-sick"]="passive:71:inflict on hit-sick",e["passive:71:inflict on hit-injury"]="passive:71:inflict on hit-injury",e["passive:71:inflict on hit-curse"]="passive:71:inflict on hit-curse",e["passive:71:inflict on hit-paralysis"]="passive:71:inflict on hit-paralysis",e["passive:72:effect at turn start-hp"]="passive:72:effect at turn start-hp",e["passive:72:effect at turn start-bc"]="passive:72:effect at turn start-bc",e["passive:73:resist-poison"]="passive:73:resist-poison",e["passive:73:resist-weak"]="passive:73:resist-weak",e["passive:73:resist-sick"]="passive:73:resist-sick",e["passive:73:resist-injury"]="passive:73:resist-injury",e["passive:73:resist-curse"]="passive:73:resist-curse",e["passive:73:resist-paralysis"]="passive:73:resist-paralysis",e["passive:73:resist-atk down"]="passive:73:resist-atk down",e["passive:73:resist-def down"]="passive:73:resist-def down",e["passive:73:resist-rec down"]="passive:73:resist-rec down",e["passive:74:ailment attack boost"]="passive:74:ailment attack boost",e["passive:75:spark vulnerability"]="passive:75:spark vulnerability",e["passive:77:spark damage reduction-base"]="passive:77:spark damage reduction-base",e["passive:77:spark damage reduction-buff"]="passive:77:spark damage reduction-buff",e["passive:78:damage taken conditional"]="passive:78:damage taken conditional",e["passive:79:bc fill after damage taken conditional-flat"]="passive:79:bc fill after damage taken conditional-flat",e["passive:79:bc fill after damage taken conditional-percent"]="passive:79:bc fill after damage taken conditional-percent",e["passive:80:damage dealt conditional"]="passive:80:damage dealt conditional",e["passive:81:bc fill after damage dealt conditional-flat"]="passive:81:bc fill after damage dealt conditional-flat",e["passive:81:bc fill after damage dealt conditional-percent"]="passive:81:bc fill after damage dealt conditional-percent",e["passive:82:bc received conditional"]="passive:82:bc received conditional",e["passive:83:bc fill after bc received conditional-flat"]="passive:83:bc fill after bc received conditional-flat",e["passive:83:bc fill after bc received conditional-percent"]="passive:83:bc fill after bc received conditional-percent",e["passive:84:hc received conditional"]="passive:84:hc received conditional",e["passive:85:bc fill after hc received conditional-flat"]="passive:85:bc fill after hc received conditional-flat",e["passive:85:bc fill after hc received conditional-percent"]="passive:85:bc fill after hc received conditional-percent",e["passive:86:spark count conditional"]="passive:86:spark count conditional",e["passive:87:bc fill after spark count conditional-flat"]="passive:87:bc fill after spark count conditional-flat",e["passive:87:bc fill after spark count conditional-percent"]="passive:87:bc fill after spark count conditional-percent",e["passive:88:on guard conditional"]="passive:88:on guard conditional",e["passive:89:on critical hit conditional"]="passive:89:on critical hit conditional",e["passive:90:inflict on crit-poison"]="passive:90:inflict on crit-poison",e["passive:90:inflict on crit-weak"]="passive:90:inflict on crit-weak",e["passive:90:inflict on crit-sick"]="passive:90:inflict on crit-sick",e["passive:90:inflict on crit-injury"]="passive:90:inflict on crit-injury",e["passive:90:inflict on crit-curse"]="passive:90:inflict on crit-curse",e["passive:90:inflict on crit-paralysis"]="passive:90:inflict on crit-paralysis",e["passive:91:first turn spark"]="passive:91:first turn spark",e["passive:92:negate defense ignore"]="passive:92:negate defense ignore",e["passive:93:add element-fire"]="passive:93:add element-fire",e["passive:93:add element-water"]="passive:93:add element-water",e["passive:93:add element-earth"]="passive:93:add element-earth",e["passive:93:add element-thunder"]="passive:93:add element-thunder",e["passive:93:add element-light"]="passive:93:add element-light",e["passive:93:add element-dark"]="passive:93:add element-dark",e["passive:93:add element-unknown"]="passive:93:add element-unknown",e["passive:96:aoe normal attack"]="passive:96:aoe normal attack",e.UNKNOWN_PROC_EFFECT_ID="UNKNOWN_PROC_EFFECT_ID",e.UNKNOWN_PROC_BUFF_PARAMS="UNKNOWN_PROC_BUFF_PARAMS",e["proc:1:attack"]="proc:1:attack",e["proc:2:burst heal"]="proc:2:burst heal",e["proc:3:gradual heal"]="proc:3:gradual heal",e["proc:4:bc fill-flat"]="proc:4:bc fill-flat",e["proc:4:bc fill-percent"]="proc:4:bc fill-percent",e["proc:5:regular or elemental-atk"]="proc:5:regular or elemental-atk",e["proc:5:regular or elemental-def"]="proc:5:regular or elemental-def",e["proc:5:regular or elemental-rec"]="proc:5:regular or elemental-rec",e["proc:5:regular or elemental-crit"]="proc:5:regular or elemental-crit",e["proc:6:drop boost-bc"]="proc:6:drop boost-bc",e["proc:6:drop boost-hc"]="proc:6:drop boost-hc",e["proc:6:drop boost-item"]="proc:6:drop boost-item",e["proc:7:guaranteed ko resistance"]="proc:7:guaranteed ko resistance",e["proc:8:max hp boost-flat"]="proc:8:max hp boost-flat",e["proc:8:max hp boost-percent"]="proc:8:max hp boost-percent",e["proc:9:regular or elemental reduction-atk"]="proc:9:regular or elemental reduction-atk",e["proc:9:regular or elemental reduction-def"]="proc:9:regular or elemental reduction-def",e["proc:9:regular or elemental reduction-rec"]="proc:9:regular or elemental reduction-rec",e["proc:9:regular or elemental reduction-unknown"]="proc:9:regular or elemental reduction-unknown",e["proc:10:cleanse-poison"]="proc:10:cleanse-poison",e["proc:10:cleanse-weak"]="proc:10:cleanse-weak",e["proc:10:cleanse-sick"]="proc:10:cleanse-sick",e["proc:10:cleanse-injury"]="proc:10:cleanse-injury",e["proc:10:cleanse-curse"]="proc:10:cleanse-curse",e["proc:10:cleanse-paralysis"]="proc:10:cleanse-paralysis",e["proc:10:cleanse-atk down"]="proc:10:cleanse-atk down",e["proc:10:cleanse-def down"]="proc:10:cleanse-def down",e["proc:10:cleanse-rec down"]="proc:10:cleanse-rec down",e["proc:10:cleanse-unknown"]="proc:10:cleanse-unknown",e["proc:11:chance inflict-poison"]="proc:11:chance inflict-poison",e["proc:11:chance inflict-weak"]="proc:11:chance inflict-weak",e["proc:11:chance inflict-sick"]="proc:11:chance inflict-sick",e["proc:11:chance inflict-injury"]="proc:11:chance inflict-injury",e["proc:11:chance inflict-curse"]="proc:11:chance inflict-curse",e["proc:11:chance inflict-paralysis"]="proc:11:chance inflict-paralysis",e["proc:11:chance inflict-atk down"]="proc:11:chance inflict-atk down",e["proc:11:chance inflict-def down"]="proc:11:chance inflict-def down",e["proc:11:chance inflict-rec down"]="proc:11:chance inflict-rec down",e["proc:11:chance inflict-unknown"]="proc:11:chance inflict-unknown",e["proc:12:guaranteed revive"]="proc:12:guaranteed revive",e["proc:13:random attack"]="proc:13:random attack",e["proc:14:hp absorb attack"]="proc:14:hp absorb attack",e["proc:16:mitigate-fire"]="proc:16:mitigate-fire",e["proc:16:mitigate-water"]="proc:16:mitigate-water",e["proc:16:mitigate-earth"]="proc:16:mitigate-earth",e["proc:16:mitigate-thunder"]="proc:16:mitigate-thunder",e["proc:16:mitigate-light"]="proc:16:mitigate-light",e["proc:16:mitigate-dark"]="proc:16:mitigate-dark",e["proc:16:mitigate-all"]="proc:16:mitigate-all",e["proc:16:mitigate-unknown"]="proc:16:mitigate-unknown",e["proc:17:resist-poison"]="proc:17:resist-poison",e["proc:17:resist-weak"]="proc:17:resist-weak",e["proc:17:resist-sick"]="proc:17:resist-sick",e["proc:17:resist-injury"]="proc:17:resist-injury",e["proc:17:resist-curse"]="proc:17:resist-curse",e["proc:17:resist-paralysis"]="proc:17:resist-paralysis",e["proc:18:mitigation"]="proc:18:mitigation",e["proc:19:gradual bc fill"]="proc:19:gradual bc fill",e["proc:20:bc fill on hit"]="proc:20:bc fill on hit",e["proc:22:defense ignore"]="proc:22:defense ignore",e["proc:23:spark damage"]="proc:23:spark damage",e["proc:24:converted-atk"]="proc:24:converted-atk",e["proc:24:converted-def"]="proc:24:converted-def",e["proc:24:converted-rec"]="proc:24:converted-rec",e["proc:26:hit count boost"]="proc:26:hit count boost",e["proc:27:proportional attack"]="proc:27:proportional attack",e["proc:28:fixed attack"]="proc:28:fixed attack",e["proc:29:multi-element attack"]="proc:29:multi-element attack",e["proc:30:add element-fire"]="proc:30:add element-fire",e["proc:30:add element-water"]="proc:30:add element-water",e["proc:30:add element-earth"]="proc:30:add element-earth",e["proc:30:add element-thunder"]="proc:30:add element-thunder",e["proc:30:add element-light"]="proc:30:add element-light",e["proc:30:add element-dark"]="proc:30:add element-dark",e["proc:30:add element-unknown"]="proc:30:add element-unknown",e["proc:31:bc fill-flat"]="proc:31:bc fill-flat",e["proc:31:bc fill-percent"]="proc:31:bc fill-percent",e["proc:32:element shift-fire"]="proc:32:element shift-fire",e["proc:32:element shift-water"]="proc:32:element shift-water",e["proc:32:element shift-earth"]="proc:32:element shift-earth",e["proc:32:element shift-thunder"]="proc:32:element shift-thunder",e["proc:32:element shift-light"]="proc:32:element shift-light",e["proc:32:element shift-dark"]="proc:32:element shift-dark",e["proc:32:element shift-unknown"]="proc:32:element shift-unknown",e["proc:33:buff wipe"]="proc:33:buff wipe",e["proc:34:bc drain-flat"]="proc:34:bc drain-flat",e["proc:34:bc drain-percent"]="proc:34:bc drain-percent",e["proc:36:ls lock"]="proc:36:ls lock",e["proc:37:summon"]="proc:37:summon",e["proc:38:cleanse-poison"]="proc:38:cleanse-poison",e["proc:38:cleanse-weak"]="proc:38:cleanse-weak",e["proc:38:cleanse-sick"]="proc:38:cleanse-sick",e["proc:38:cleanse-injury"]="proc:38:cleanse-injury",e["proc:38:cleanse-curse"]="proc:38:cleanse-curse",e["proc:38:cleanse-paralysis"]="proc:38:cleanse-paralysis",e["proc:38:cleanse-atk down"]="proc:38:cleanse-atk down",e["proc:38:cleanse-def down"]="proc:38:cleanse-def down",e["proc:38:cleanse-rec down"]="proc:38:cleanse-rec down",e["proc:38:cleanse-unknown"]="proc:38:cleanse-unknown",e["proc:39:mitigate-fire"]="proc:39:mitigate-fire",e["proc:39:mitigate-water"]="proc:39:mitigate-water",e["proc:39:mitigate-earth"]="proc:39:mitigate-earth",e["proc:39:mitigate-thunder"]="proc:39:mitigate-thunder",e["proc:39:mitigate-light"]="proc:39:mitigate-light",e["proc:39:mitigate-dark"]="proc:39:mitigate-dark",e["proc:39:mitigate-unknown"]="proc:39:mitigate-unknown",e["proc:40:add ailment-poison"]="proc:40:add ailment-poison",e["proc:40:add ailment-weak"]="proc:40:add ailment-weak",e["proc:40:add ailment-sick"]="proc:40:add ailment-sick",e["proc:40:add ailment-injury"]="proc:40:add ailment-injury",e["proc:40:add ailment-curse"]="proc:40:add ailment-curse",e["proc:40:add ailment-paralysis"]="proc:40:add ailment-paralysis",e["proc:40:add ailment-atk down"]="proc:40:add ailment-atk down",e["proc:40:add ailment-def down"]="proc:40:add ailment-def down",e["proc:40:add ailment-rec down"]="proc:40:add ailment-rec down",e["proc:40:add ailment-unknown"]="proc:40:add ailment-unknown",e["proc:42:sacrificial attack"]="proc:42:sacrificial attack",e["proc:42:instant death"]="proc:42:instant death",e["proc:43:burst od fill"]="proc:43:burst od fill",e["proc:44:damage over time"]="proc:44:damage over time",e["proc:45:attack boost-bb"]="proc:45:attack boost-bb",e["proc:45:attack boost-sbb"]="proc:45:attack boost-sbb",e["proc:45:attack boost-ubb"]="proc:45:attack boost-ubb",e["proc:46:non-lethal proportional attack"]="proc:46:non-lethal proportional attack",e["proc:47:hp scaled attack"]="proc:47:hp scaled attack",e["proc:48:piercing attack-base"]="proc:48:piercing attack-base",e["proc:48:piercing attack-current"]="proc:48:piercing attack-current",e["proc:48:piercing attack-fixed"]="proc:48:piercing attack-fixed",e["proc:48:piercing attack-unknown"]="proc:48:piercing attack-unknown",e["proc:49:chance instant death"]="proc:49:chance instant death",e["proc:50:chance damage reflect"]="proc:50:chance damage reflect",e["proc:51:add to attack-atk down"]="proc:51:add to attack-atk down",e["proc:51:add to attack-def down"]="proc:51:add to attack-def down",e["proc:51:add to attack-rec down"]="proc:51:add to attack-rec down",e["proc:52:bc efficacy"]="proc:52:bc efficacy",e["proc:53:inflict on hit-poison"]="proc:53:inflict on hit-poison",e["proc:53:inflict on hit-weak"]="proc:53:inflict on hit-weak",e["proc:53:inflict on hit-sick"]="proc:53:inflict on hit-sick",e["proc:53:inflict on hit-injury"]="proc:53:inflict on hit-injury",e["proc:53:inflict on hit-curse"]="proc:53:inflict on hit-curse",e["proc:53:inflict on hit-paralysis"]="proc:53:inflict on hit-paralysis",e["proc:54:critical damage boost"]="proc:54:critical damage boost",e["proc:55:elemental weakness damage-fire"]="proc:55:elemental weakness damage-fire",e["proc:55:elemental weakness damage-water"]="proc:55:elemental weakness damage-water",e["proc:55:elemental weakness damage-earth"]="proc:55:elemental weakness damage-earth",e["proc:55:elemental weakness damage-thunder"]="proc:55:elemental weakness damage-thunder",e["proc:55:elemental weakness damage-light"]="proc:55:elemental weakness damage-light",e["proc:55:elemental weakness damage-dark"]="proc:55:elemental weakness damage-dark",e["proc:55:elemental weakness damage-unknown"]="proc:55:elemental weakness damage-unknown",e["proc:56:chance ko resistance"]="proc:56:chance ko resistance",e["proc:57:bc drop resistance-base"]="proc:57:bc drop resistance-base",e["proc:57:bc drop resistance-buff"]="proc:57:bc drop resistance-buff",e["proc:57:hc drop resistance-base"]="proc:57:hc drop resistance-base",e["proc:57:hc drop resistance-buff"]="proc:57:hc drop resistance-buff",e["proc:58:spark vulnerability"]="proc:58:spark vulnerability",e["proc:59:attack reduction-bb"]="proc:59:attack reduction-bb",e["proc:59:attack reduction-sbb"]="proc:59:attack reduction-sbb",e["proc:59:attack reduction-ubb"]="proc:59:attack reduction-ubb",e["proc:61:party bb gauge-scaled attack"]="proc:61:party bb gauge-scaled attack",e["proc:61:party bc drain"]="proc:61:party bc drain",e["proc:62:barrier-all"]="proc:62:barrier-all",e["proc:62:barrier-fire"]="proc:62:barrier-fire",e["proc:62:barrier-water"]="proc:62:barrier-water",e["proc:62:barrier-earth"]="proc:62:barrier-earth",e["proc:62:barrier-thunder"]="proc:62:barrier-thunder",e["proc:62:barrier-light"]="proc:62:barrier-light",e["proc:62:barrier-dark"]="proc:62:barrier-dark",e["proc:62:barrier-unknown"]="proc:62:barrier-unknown",e["proc:64:consecutive usage attack"]="proc:64:consecutive usage attack",e["proc:65:ailment attack boost"]="proc:65:ailment attack boost",e["proc:66:chance revive"]="proc:66:chance revive",e["proc:67:bc fill on spark"]="proc:67:bc fill on spark",e["proc:68:guard mitigation"]="proc:68:guard mitigation",e["proc:69:bc fill on guard-flat"]="proc:69:bc fill on guard-flat",e["proc:69:bc fill on guard-percent"]="proc:69:bc fill on guard-percent",e["proc:71:bc efficacy reduction"]="proc:71:bc efficacy reduction",e["proc:73:resist-atk down"]="proc:73:resist-atk down",e["proc:73:resist-def down"]="proc:73:resist-def down",e["proc:73:resist-rec down"]="proc:73:resist-rec down",e["proc:75:element squad-scaled attack"]="proc:75:element squad-scaled attack",e["proc:76:extra action"]="proc:76:extra action",e["proc:78:self stat boost-atk"]="proc:78:self stat boost-atk",e["proc:78:self stat boost-def"]="proc:78:self stat boost-def",e["proc:78:self stat boost-rec"]="proc:78:self stat boost-rec",e["proc:78:self stat boost-crit"]="proc:78:self stat boost-crit",e["proc:79:player exp boost"]="proc:79:player exp boost",e["proc:82:resummon"]="proc:82:resummon",e["proc:83:spark critical"]="proc:83:spark critical",e["proc:84:od fill rate"]="proc:84:od fill rate",e["proc:85:heal on hit"]="proc:85:heal on hit",e["proc:86:hp absorb"]="proc:86:hp absorb",e["proc:87:heal on spark"]="proc:87:heal on spark",e["proc:88:self spark damage"]="proc:88:self spark damage",e["proc:89:self converted-atk"]="proc:89:self converted-atk",e["proc:89:self converted-def"]="proc:89:self converted-def",e["proc:89:self converted-rec"]="proc:89:self converted-rec",e["proc:92:self max hp boost-flat"]="proc:92:self max hp boost-flat",e["proc:92:self max hp boost-percent"]="proc:92:self max hp boost-percent",e["proc:93:critical damage resistance-base"]="proc:93:critical damage resistance-base",e["proc:93:critical damage resistance-buff"]="proc:93:critical damage resistance-buff",e["proc:93:element damage resistance-base"]="proc:93:element damage resistance-base",e["proc:93:element damage resistance-buff"]="proc:93:element damage resistance-buff",e["proc:93:spark damage resistance-base"]="proc:93:spark damage resistance-base",e["proc:93:spark damage resistance-buff"]="proc:93:spark damage resistance-buff",e["proc:94:aoe normal attack"]="proc:94:aoe normal attack",e["proc:95:sphere lock"]="proc:95:sphere lock",e["proc:96:es lock"]="proc:96:es lock",e["proc:97:element specific attack"]="proc:97:element specific attack",e.UNKNOWN_CONDITIONAL_EFFECT_ID="UNKNOWN_CONDITIONAL_EFFECT_ID",e.UNKNOWN_CONDITIONAL_BUFF_PARAMS="UNKNOWN_CONDITIONAL_BUFF_PARAMS",e["conditional:1:attack buff"]="conditional:1:attack buff",e["conditional:3:defense buff"]="conditional:3:defense buff",e["conditional:5:recovery buff"]="conditional:5:recovery buff",e["conditional:7:critical hit rate buff"]="conditional:7:critical hit rate buff",e["conditional:8:gradual heal"]="conditional:8:gradual heal",e["conditional:12:guaranteed ko resistance"]="conditional:12:guaranteed ko resistance",e["conditional:13:elemental attack buff"]="conditional:13:elemental attack buff",e["conditional:14:elemental defense buff"]="conditional:14:elemental defense buff",e["conditional:21:fire mitigation"]="conditional:21:fire mitigation",e["conditional:22:water mitigation"]="conditional:22:water mitigation",e["conditional:23:earth mitigation"]="conditional:23:earth mitigation",e["conditional:24:thunder mitigation"]="conditional:24:thunder mitigation",e["conditional:25:light mitigation"]="conditional:25:light mitigation",e["conditional:26:dark mitigation"]="conditional:26:dark mitigation",e["conditional:36:mitigation"]="conditional:36:mitigation",e["conditional:37:gradual bc fill"]="conditional:37:gradual bc fill",e["conditional:40:spark damage"]="conditional:40:spark damage",e["conditional:51:add fire element"]="conditional:51:add fire element",e["conditional:52:add water element"]="conditional:52:add water element",e["conditional:53:add earth element"]="conditional:53:add earth element",e["conditional:54:add thunder element"]="conditional:54:add thunder element",e["conditional:55:add light element"]="conditional:55:add light element",e["conditional:56:add dark element"]="conditional:56:add dark element",e["conditional:72:attack boost-bb"]="conditional:72:attack boost-bb",e["conditional:72:attack boost-sbb"]="conditional:72:attack boost-sbb",e["conditional:72:attack boost-ubb"]="conditional:72:attack boost-ubb",e["conditional:74:add atk down to attack"]="conditional:74:add atk down to attack",e["conditional:75:add def down to attack"]="conditional:75:add def down to attack",e["conditional:84:critical damage"]="conditional:84:critical damage",e["conditional:91:chance ko resistance"]="conditional:91:chance ko resistance",e["conditional:98:thunder barrier"]="conditional:98:thunder barrier",e["conditional:99:light barrier"]="conditional:99:light barrier",e["conditional:111:bc fill on spark"]="conditional:111:bc fill on spark",e["conditional:124:self attack buff"]="conditional:124:self attack buff",e["conditional:125:self defense buff"]="conditional:125:self defense buff",e["conditional:131:spark critical"]="conditional:131:spark critical",e["conditional:132:od fill rate"]="conditional:132:od fill rate",e["conditional:133:heal on hit"]="conditional:133:heal on hit",e["conditional:143:critical damage reduction-base"]="conditional:143:critical damage reduction-base",e["conditional:143:critical damage reduction-buff"]="conditional:143:critical damage reduction-buff",e["conditional:144:spark damage reduction-base"]="conditional:144:spark damage reduction-base",e["conditional:144:spark damage reduction-buff"]="conditional:144:spark damage reduction-buff",e["conditional:145:elemental weakness damage reduction-base"]="conditional:145:elemental weakness damage reduction-base",e["conditional:145:elemental weakness damage reduction-buff"]="conditional:145:elemental weakness damage reduction-buff",e["conditional:153:chance inflict atk down on hit"]="conditional:153:chance inflict atk down on hit",e["conditional:10001:stealth"]="conditional:10001:stealth",e["conditional:10001:stealth-atk"]="conditional:10001:stealth-atk",e["conditional:10001:stealth-def"]="conditional:10001:stealth-def",e["conditional:10001:stealth-rec"]="conditional:10001:stealth-rec",e["conditional:10001:stealth-crit"]="conditional:10001:stealth-crit",e["conditional:10500:shield-all"]="conditional:10500:shield-all",e["conditional:10500:shield-fire"]="conditional:10500:shield-fire",e["conditional:10500:shield-water"]="conditional:10500:shield-water",e["conditional:10500:shield-earth"]="conditional:10500:shield-earth",e["conditional:10500:shield-thunder"]="conditional:10500:shield-thunder",e["conditional:10500:shield-light"]="conditional:10500:shield-light",e["conditional:10500:shield-dark"]="conditional:10500:shield-dark",e["conditional:10500:shield-unknown"]="conditional:10500:shield-unknown"}(G||(G={}));const re=Object.freeze(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({TURN_DURATION_MODIFICATION:{id:G.TURN_DURATION_MODIFICATION,name:"Passive Turn Duration Modification",stat:j.turnDurationModification,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.duration&&e.value.duration<0?M.TURN_DURATION_DOWN:M.TURN_DURATION_UP]},NO_PARAMS_SPECIFIED:{id:G.NO_PARAMS_SPECIFIED,name:"No Parameters Specified",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PASSIVE_EFFECT_ID:{id:G.UNKNOWN_PASSIVE_EFFECT_ID,name:"Unknown Passive Effect",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PASSIVE_BUFF_PARAMS:{id:G.UNKNOWN_PASSIVE_BUFF_PARAMS,name:"Unknown Passive Buff Parameters",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},"passive:1:hp":{id:G["passive:1:hp"],name:"Passive HP Boost",stat:j.hp,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPDOWN:M.BUFF_HPUP]},"passive:1:atk":{id:G["passive:1:atk"],name:"Passive Attack Boost",stat:j.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:1:def":{id:G["passive:1:def"],name:"Passive Defense Boost",stat:j.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:1:rec":{id:G["passive:1:rec"],name:"Passive Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:1:crit":{id:G["passive:1:crit"],name:"Passive Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]}},(()=>{const e=e=>a=>{let t="",i="UP";a&&(a.value&&a.value<0&&(i="DOWN"),a.conditions&&a.conditions.targetElements&&(t=a.conditions.targetElements[0])),"string"!=typeof t&&(t="");let s=`BUFF_${t.toUpperCase()}${e}${i}`;return t&&s in M||(s=`BUFF_ELEMENT${e}${i}`),[M[s]]};return{"passive:2:elemental-hp":{id:G["passive:2:elemental-hp"],name:"Passive Elemental HP Boost",stat:j.hp,stackType:K.Passive,icons:e("HP")},"passive:2:elemental-atk":{id:G["passive:2:elemental-atk"],name:"Passive Elemental Attack Boost",stat:j.atk,stackType:K.Passive,icons:e("ATK")},"passive:2:elemental-def":{id:G["passive:2:elemental-def"],name:"Passive Elemental Defense Boost",stat:j.def,stackType:K.Passive,icons:e("DEF")},"passive:2:elemental-rec":{id:G["passive:2:elemental-rec"],name:"Passive Elemental Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e("REC")},"passive:2:elemental-crit":{id:G["passive:2:elemental-crit"],name:"Passive Elemental Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e("CRTRATE")}}})()),(()=>{const e=e=>a=>{let t="",i="UP";a&&(a.value&&a.value<0&&(i="DOWN"),a.conditions&&(t=a.conditions.targetUnitType||"")),"string"==typeof t&&t||(t="unknown");let s=`BUFF_${t.toUpperCase()}${e}${i}`;return t&&s in M||(s=`BUFF_UNITTYPE${e}${i}`),[M[s]]};return{"passive:3:type based-hp":{id:G["passive:3:type based-hp"],name:"Passive Type-Based HP Boost",stat:j.hp,stackType:K.Passive,icons:e("HP")},"passive:3:type based-atk":{id:G["passive:3:type based-atk"],name:"Passive Type-Based Attack Boost",stat:j.atk,stackType:K.Passive,icons:e("ATK")},"passive:3:type based-def":{id:G["passive:3:type based-def"],name:"Passive Type-Based Defense Boost",stat:j.def,stackType:K.Passive,icons:e("DEF")},"passive:3:type based-rec":{id:G["passive:3:type based-rec"],name:"Passive Type-Based Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e("REC")},"passive:3:type based-crit":{id:G["passive:3:type based-crit"],name:"Passive Type-Based Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e("CRTRATE")}}})()),{"passive:4:resist-poison":{id:G["passive:4:resist-poison"],name:"Passive Poison Resistance",stat:j.poisonResist,stackType:K.Passive,icons:()=>[M.BUFF_POISONBLK]},"passive:4:resist-weak":{id:G["passive:4:resist-weak"],name:"Passive Weak Resistance",stat:j.weakResist,stackType:K.Passive,icons:()=>[M.BUFF_WEAKBLK]},"passive:4:resist-sick":{id:G["passive:4:resist-sick"],name:"Passive Sick Resistance",stat:j.sickResist,stackType:K.Passive,icons:()=>[M.BUFF_SICKBLK]},"passive:4:resist-injury":{id:G["passive:4:resist-injury"],name:"Passive Injury Resistance",stat:j.injuryResist,stackType:K.Passive,icons:()=>[M.BUFF_INJURYBLK]},"passive:4:resist-curse":{id:G["passive:4:resist-curse"],name:"Passive Curse Resistance",stat:j.curseResist,stackType:K.Passive,icons:()=>[M.BUFF_CURSEBLK]},"passive:4:resist-paralysis":{id:G["passive:4:resist-paralysis"],name:"Passive Paralysis Resistance",stat:j.paralysisResist,stackType:K.Passive,icons:()=>[M.BUFF_PARALYSISBLK]},"passive:5:mitigate-fire":{id:G["passive:5:mitigate-fire"],name:"Passive Fire Damage Reduction",stat:j.fireMitigation,stackType:K.Passive,icons:()=>[M.BUFF_FIREDMGDOWN]},"passive:5:mitigate-water":{id:G["passive:5:mitigate-water"],name:"Passive Water Damage Reduction",stat:j.waterMitigation,stackType:K.Passive,icons:()=>[M.BUFF_WATERDMGDOWN]},"passive:5:mitigate-earth":{id:G["passive:5:mitigate-earth"],name:"Passive Earth Damage Reduction",stat:j.earthMitigation,stackType:K.Passive,icons:()=>[M.BUFF_EARTHDMGDOWN]},"passive:5:mitigate-thunder":{id:G["passive:5:mitigate-thunder"],name:"Passive Thunder Damage Reduction",stat:j.thunderMitigation,stackType:K.Passive,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"passive:5:mitigate-light":{id:G["passive:5:mitigate-light"],name:"Passive Light Damage Reduction",stat:j.lightMitigation,stackType:K.Passive,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"passive:5:mitigate-dark":{id:G["passive:5:mitigate-dark"],name:"Passive Dark Damage Reduction",stat:j.darkMitigation,stackType:K.Passive,icons:()=>[M.BUFF_DARKDMGDOWN]},"passive:5:mitigate-unknown":{id:G["passive:5:mitigate-unknown"],name:"Passive Elemental Damage Reduction (Unspecified Element)",stat:j.mitigation,stackType:K.Passive,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"passive:8:mitigation":{id:G["passive:8:mitigation"],name:"Passive Damage Reduction",stat:j.mitigation,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGECUT]},"passive:9:gradual bc fill":{id:G["passive:9:gradual bc fill"],name:"Passive Gradual BC Fill",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:10:hc efficacy":{id:G["passive:10:hc efficacy"],name:"Passive HC Efficacy",stat:j.hcEfficacy,stackType:K.Passive,icons:()=>[M.BUFF_HCREC]},"passive:11:hp conditional-atk":{id:G["passive:11:hp conditional-atk"],name:"Passive HP-Conditional Attack Boost",stat:j.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHATKDOWN:M.BUFF_HPTHRESHATKUP]},"passive:11:hp conditional-def":{id:G["passive:11:hp conditional-def"],name:"Passive HP-Conditional Defense Boost",stat:j.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHDEFDOWN:M.BUFF_HPTHRESHDEFUP]},"passive:11:hp conditional-rec":{id:G["passive:11:hp conditional-rec"],name:"Passive HP-Conditional Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHRECDOWN:M.BUFF_HPTHRESHRECUP]},"passive:11:hp conditional-crit":{id:G["passive:11:hp conditional-crit"],name:"Passive HP-Conditional Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHCRTRATEDOWN:M.BUFF_HPTHRESHCRTRATEUP]},"passive:12:hp conditional drop boost-bc":{id:G["passive:12:hp conditional drop boost-bc"],name:"Passive HP-Conditional Battle Crystal Drop Rate Boost",stat:j.bcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHBCDOWN:M.BUFF_HPTHRESHBCDROP]},"passive:12:hp conditional drop boost-hc":{id:G["passive:12:hp conditional drop boost-hc"],name:"Passive HP-Conditional Heart Crystal Drop Rate Boost",stat:j.hcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHHCDOWN:M.BUFF_HPTHRESHHCDROP]},"passive:12:hp conditional drop boost-item":{id:G["passive:12:hp conditional drop boost-item"],name:"Passive HP-Conditional Item Drop Rate Boost",stat:j.itemDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHITEMDOWN:M.BUFF_HPTHRESHITEMDROP]},"passive:12:hp conditional drop boost-zel":{id:G["passive:12:hp conditional drop boost-zel"],name:"Passive HP-Conditional Zel Drop Rate Boost",stat:j.zelDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHZELDOWN:M.BUFF_HPTHRESHZELDROP]},"passive:12:hp conditional drop boost-karma":{id:G["passive:12:hp conditional drop boost-karma"],name:"Passive HP-Conditional Karma Drop Rate Boost",stat:j.karmaDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHKARMADOWN:M.BUFF_HPTHRESHKARMADROP]},"passive:13:bc fill on enemy defeat":{id:G["passive:13:bc fill on enemy defeat"],name:"Passive BC Fill on Enemy Defeat",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:14:chance mitigation":{id:G["passive:14:chance mitigation"],name:"Passive Damage Reduction (Chance)",stat:j.mitigation,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGECUT]},"passive:15:heal on enemy defeat":{id:G["passive:15:heal on enemy defeat"],name:"Passive Heal on Enemy Defeat",stat:j.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_HPREC]},"passive:16:heal on win":{id:G["passive:16:heal on win"],name:"Passive Heal on Battle Win",stat:j.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_HPREC]},"passive:17:hp absorb":{id:G["passive:17:hp absorb"],name:"Passive HP Absorption",stat:j.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_HPABS]},"passive:19:drop boost-bc":{id:G["passive:19:drop boost-bc"],name:"Passive Battle Crystal Drop Rate Boost",stat:j.bcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_BCDROP]},"passive:19:drop boost-hc":{id:G["passive:19:drop boost-hc"],name:"Passive Heart Crystal Drop Rate Boost",stat:j.hcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_HCDROP]},"passive:19:drop boost-item":{id:G["passive:19:drop boost-item"],name:"Passive Item Drop Rate Boost",stat:j.itemDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_ITEMDROP]},"passive:19:drop boost-zel":{id:G["passive:19:drop boost-zel"],name:"Passive Zel Drop Rate Boost",stat:j.zelDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ZELDOWN:M.BUFF_ZELDROP]},"passive:19:drop boost-karma":{id:G["passive:19:drop boost-karma"],name:"Passive Karma Drop Rate Boost",stat:j.karmaDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_KARMADOWN:M.BUFF_KARMADROP]},"passive:20:chance inflict-poison":{id:G["passive:20:chance inflict-poison"],name:"Passive Poison Infliction",stat:j.poisonInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDPOISON]},"passive:20:chance inflict-weak":{id:G["passive:20:chance inflict-weak"],name:"Passive Weak Infliction",stat:j.weakInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDWEAK]},"passive:20:chance inflict-sick":{id:G["passive:20:chance inflict-sick"],name:"Passive Sick Infliction",stat:j.sickInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDSICK]},"passive:20:chance inflict-injury":{id:G["passive:20:chance inflict-injury"],name:"Passive Injury Infliction",stat:j.injuryInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDINJURY]},"passive:20:chance inflict-curse":{id:G["passive:20:chance inflict-curse"],name:"Passive Curse Infliction",stat:j.curseInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDCURSE]},"passive:20:chance inflict-paralysis":{id:G["passive:20:chance inflict-paralysis"],name:"Passive Paralysis Infliction",stat:j.paralysisInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDPARA]},"passive:20:chance inflict-atk down":{id:G["passive:20:chance inflict-atk down"],name:"Passive Attack Reduction Infliction",stat:j.atkDownInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDATKDOWN]},"passive:20:chance inflict-def down":{id:G["passive:20:chance inflict-def down"],name:"Passive Defense Reduction Infliction",stat:j.defDownInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDDEFDOWN]},"passive:20:chance inflict-rec down":{id:G["passive:20:chance inflict-rec down"],name:"Passive Recovery Reduction Infliction",stat:j.recDownInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDRECDOWN]},"passive:20:chance inflict-unknown":{id:G["passive:20:chance inflict-unknown"],name:"Passive Unknown Ailment Infliction",stackType:K.Unknown,icons:()=>[M.BUFF_ADDAILMENT]},"passive:21:first turn-atk":{id:G["passive:21:first turn-atk"],name:"Attack Boost for X Turns",stat:j.atk,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:21:first turn-def":{id:G["passive:21:first turn-def"],name:"Defense Boost for X Turns",stat:j.def,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:21:first turn-rec":{id:G["passive:21:first turn-rec"],name:"Recovery Boost for X Turns",stat:j.rec,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:21:first turn-crit":{id:G["passive:21:first turn-crit"],name:"Critical Hit Rate Boost for X Turns",stat:j.crit,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]},"passive:23:bc fill on win":{id:G["passive:23:bc fill on win"],name:"Passive BC Fill on Battle Win",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:24:heal on hit":{id:G["passive:24:heal on hit"],name:"Passive Heal when Attacked (Chance)",stat:j.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_BEENATK_HPREC]},"passive:25:bc fill on hit":{id:G["passive:25:bc fill on hit"],name:"Passive BC Fill when Attacked",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGEBB]},"passive:26:chance damage reflect":{id:G["passive:26:chance damage reflect"],name:"Passive Damage Counter (Chance)",stat:j.damageReflect,stackType:K.Passive,icons:()=>[M.BUFF_COUNTERDAMAGE]},"passive:27:target chance change":{id:G["passive:27:target chance change"],name:"Passive Target Chance Modification",stat:j.targetingModification,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_REPENEATT:M.BUFF_GETENEATT]},"passive:28:hp conditional target chance change":{id:G["passive:28:hp conditional target chance change"],name:"Passive HP-Conditional Target Chance Modification",stat:j.targetingModification,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPTHRESHREPENEATT:M.BUFF_HPTHRESHGETENEATT]},"passive:29:chance def ignore":{id:G["passive:29:chance def ignore"],name:"Passive Defense Ignore (Chance)",stat:j.defenseIgnore,stackType:K.Passive,icons:()=>[M.BUFF_IGNOREDEF]},"passive:30:bb gauge conditional-atk":{id:G["passive:30:bb gauge conditional-atk"],name:"Passive BB Gauge Conditional Attack Boost",stat:j.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHATKDOWN:M.BUFF_BBGAUGETHRESHATKUP]},"passive:30:bb gauge conditional-def":{id:G["passive:30:bb gauge conditional-def"],name:"Passive BB Gauge Conditional Defense Boost",stat:j.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHDEFDOWN:M.BUFF_BBGAUGETHRESHDEFUP]},"passive:30:bb gauge conditional-rec":{id:G["passive:30:bb gauge conditional-rec"],name:"Passive BB Gauge Conditional Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHRECDOWN:M.BUFF_BBGAUGETHRESHRECUP]},"passive:30:bb gauge conditional-crit":{id:G["passive:30:bb gauge conditional-crit"],name:"Passive BB Gauge Conditional Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BBGAUGETHRESHCRTRATEDOWN:M.BUFF_BBGAUGETHRESHCRTRATEUP]},"passive:31:spark-damage":{id:G["passive:31:spark-damage"],name:"Passive Spark Damage Boost",stat:j.sparkDamage,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_SPARKDOWN:M.BUFF_SPARKUP]},"passive:31:spark-bc":{id:G["passive:31:spark-bc"],name:"Passive Battle Crystal Drop Rate Boost during Spark",stat:j.bcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_SPARKBC]},"passive:31:spark-hc":{id:G["passive:31:spark-hc"],name:"Passive Heart Crystal Drop Rate Boost during Spark",stat:j.hcDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_SPARKHC]},"passive:31:spark-item":{id:G["passive:31:spark-item"],name:"Passive Item Drop Rate Boost during Spark",stat:j.itemDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_SPARKITEM]},"passive:31:spark-zel":{id:G["passive:31:spark-zel"],name:"Passive Zel Drop Rate Boost during Spark",stat:j.zelDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ZELDOWN:M.BUFF_SPARKZEL]},"passive:31:spark-karma":{id:G["passive:31:spark-karma"],name:"Passive Karma Drop Rate Boost during Spark",stat:j.karmaDropRate,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_KARMADOWN:M.BUFF_SPARKKARMA]},"passive:32:bc efficacy":{id:G["passive:32:bc efficacy"],name:"Passive BC Efficacy",stat:j.bcEfficacy,stackType:K.Passive,icons:()=>[M.BUFF_BBFILL]},"passive:33:gradual heal":{id:G["passive:33:gradual heal"],name:"Passive Gradual Heal",stat:j.hpRecovery,stackType:K.Passive,icons:()=>[M.BUFF_HPREC]},"passive:34:critical damage":{id:G["passive:34:critical damage"],name:"Passive Critical Damage Boost",stat:j.criticalDamage,stackType:K.Passive,icons:()=>[M.BUFF_CRTUP]},"passive:35:bc fill on normal attack":{id:G["passive:35:bc fill on normal attack"],name:"Passive BC Fill when Normal Attacking",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:36:extra action":{id:G["passive:36:extra action"],name:"Passive Extra Action",stat:j.extraAction,stackType:K.Passive,icons:()=>[M.BUFF_DBLSTRIKE]},"passive:37:hit count boost":{id:G["passive:37:hit count boost"],name:"Passive Hit Count Boost",stat:j.hitCountModification,stackType:K.Passive,icons:()=>[M.BUFF_HITUP]},"passive:40:converted-atk":{id:G["passive:40:converted-atk"],name:"Passive Converted Attack Boost",stat:j.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTATKDOWN:M.BUFF_CONVERTATKUP]},"passive:40:converted-def":{id:G["passive:40:converted-def"],name:"Passive Converted Defense Boost",stat:j.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTDEFDOWN:M.BUFF_CONVERTDEFUP]},"passive:40:converted-rec":{id:G["passive:40:converted-rec"],name:"Passive Converted Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTRECDOWN:M.BUFF_CONVERTRECUP]},"passive:41:unique element count-hp":{id:G["passive:41:unique element count-hp"],name:"Passive Element Squad-based HP Boost",stat:j.hp,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_UNIQUEELEMENTHPDOWN:M.BUFF_UNIQUEELEMENTHPUP]},"passive:41:unique element count-atk":{id:G["passive:41:unique element count-atk"],name:"Passive Element Squad-based Attack Boost",stat:j.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_UNIQUEELEMENTATKDOWN:M.BUFF_UNIQUEELEMENTATKUP]},"passive:41:unique element count-def":{id:G["passive:41:unique element count-def"],name:"Passive Element Squad-based Defense Boost",stat:j.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_UNIQUEELEMENTDEFDOWN:M.BUFF_UNIQUEELEMENTDEFUP]},"passive:41:unique element count-rec":{id:G["passive:41:unique element count-rec"],name:"Passive Element Squad-based Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_UNIQUEELEMENTRECDOWN:M.BUFF_UNIQUEELEMENTRECUP]},"passive:41:unique element count-crit":{id:G["passive:41:unique element count-crit"],name:"Passive Element Squad-based Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_UNIQUEELEMENTCRTRATEDOWN:M.BUFF_UNIQUEELEMENTCRTRATEUP]}}),(()=>{const e=e=>a=>{let t="",i="UP";a&&(a.value&&a.value<0&&(i="DOWN"),a.conditions&&(t=a.conditions.targetGender||"")),"string"==typeof t&&t||(t="unknown");let s=`BUFF_${t.toUpperCase()}${e}${i}`;return t&&s in M||(s=`BUFF_GENDER${e}${i}`),[M[s]]};return{"passive:42:gender-hp":{id:G["passive:42:gender-hp"],name:"Passive Gender-Based HP Boost",stat:j.hp,stackType:K.Passive,icons:e("HP")},"passive:42:gender-atk":{id:G["passive:42:gender-atk"],name:"Passive Gender-Based Attack Boost",stat:j.atk,stackType:K.Passive,icons:e("ATK")},"passive:42:gender-def":{id:G["passive:42:gender-def"],name:"Passive Gender-Based Defense Boost",stat:j.def,stackType:K.Passive,icons:e("DEF")},"passive:42:gender-rec":{id:G["passive:42:gender-rec"],name:"Passive Gender-Based Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e("REC")},"passive:42:gender-crit":{id:G["passive:42:gender-crit"],name:"Passive Gender-Based Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e("CRTRATE")}}})()),{"passive:43:chance damage to one":{id:G["passive:43:chance damage to one"],name:"Passive Damage Reduction To One (Chance)",stat:j.reduceDamageToOne,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGECUTTOONE]},"passive:44:flat-hp":{id:G["passive:44:flat-hp"],name:"Passive Flat HP Boost",stat:j.hp,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HPDOWN:M.BUFF_HPUP]},"passive:44:flat-atk":{id:G["passive:44:flat-atk"],name:"Passive Flat Attack Boost",stat:j.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"passive:44:flat-def":{id:G["passive:44:flat-def"],name:"Passive Flat Defense Boost",stat:j.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"passive:44:flat-rec":{id:G["passive:44:flat-rec"],name:"Passive Flat Recovery Boost",stat:j.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"passive:44:flat-crit":{id:G["passive:44:flat-crit"],name:"Passive Flat Critical Hit Rate Boost",stat:j.crit,stackType:K.Passive,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]},"passive:45:critical damage reduction-base":{id:G["passive:45:critical damage reduction-base"],name:"Passive Base Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_CRTDOWN]},"passive:45:critical damage reduction-buff":{id:G["passive:45:critical damage reduction-buff"],name:"Passive Buffed Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_CRTDOWN]},"passive:46:hp scaled-atk":{id:G["passive:46:hp scaled-atk"],name:"Passive Attack Boost Relative to HP",stat:j.atk,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.addedValue&&e.value.addedValue<0?M.BUFF_HPSCALEDATKDOWN:M.BUFF_HPSCALEDATKUP]},"passive:46:hp scaled-def":{id:G["passive:46:hp scaled-def"],name:"Passive Defense Boost Relative to HP",stat:j.def,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.addedValue&&e.value.addedValue<0?M.BUFF_HPSCALEDDEFDOWN:M.BUFF_HPSCALEDDEFUP]},"passive:46:hp scaled-rec":{id:G["passive:46:hp scaled-rec"],name:"Passive Recovery Boost Relative to HP",stat:j.rec,stackType:K.Passive,icons:e=>[e&&e.value&&e.value.addedValue&&e.value.addedValue<0?M.BUFF_HPSCALEDRECDOWN:M.BUFF_HPSCALEDRECUP]},"passive:47:bc fill on spark":{id:G["passive:47:bc fill on spark"],name:"Passive BC Fill on Spark",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_SPARKBBUP]},"passive:48:bc cost reduction":{id:G["passive:48:bc cost reduction"],name:"Passive BC Cost Reduction",stat:j.bcCostReduction,stackType:K.Passive,icons:()=>[M.BUFF_BBCOST_REDUCTION]},"passive:49:bb gauge consumption reduction":{id:G["passive:49:bb gauge consumption reduction"],name:"Passive BB Gauge Consumption Reduction",stat:j.bbGaugeConsumptionReduction,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:50:elemental weakness damage-fire":{id:G["passive:50:elemental weakness damage-fire"],name:"Passive Fire Elemental Damage Boost",stat:j.fireElementalDamage,stackType:K.Passive,icons:()=>[M.BUFF_FIREDMGUP]},"passive:50:elemental weakness damage-water":{id:G["passive:50:elemental weakness damage-water"],name:"Passive Water Elemental Damage Boost",stat:j.waterElementalDamage,stackType:K.Passive,icons:()=>[M.BUFF_WATERDMGUP]},"passive:50:elemental weakness damage-earth":{id:G["passive:50:elemental weakness damage-earth"],name:"Passive Earth Elemental Damage Boost",stat:j.earthElementalDamage,stackType:K.Passive,icons:()=>[M.BUFF_EARTHDMGUP]},"passive:50:elemental weakness damage-thunder":{id:G["passive:50:elemental weakness damage-thunder"],name:"Passive Thunder Elemental Damage Boost",stat:j.thunderElementalDamage,stackType:K.Passive,icons:()=>[M.BUFF_THUNDERDMGUP]},"passive:50:elemental weakness damage-light":{id:G["passive:50:elemental weakness damage-light"],name:"Passive Light Elemental Damage Boost",stat:j.lightElementalDamage,stackType:K.Passive,icons:()=>[M.BUFF_LIGHTDMGUP]},"passive:50:elemental weakness damage-dark":{id:G["passive:50:elemental weakness damage-dark"],name:"Passive Dark Elemental Damage Boost",stat:j.darkElementalDamage,stackType:K.Passive,icons:()=>[M.BUFF_DARKDMGUP]},"passive:50:elemental weakness damage-unknown":{id:G["passive:50:elemental weakness damage-unknown"],name:"Passive Elemental Damage Boost (Unspecified Element)",stackType:K.Passive,icons:()=>[M.BUFF_ELEMENTDMGUP]},"passive:53:critical damage-base":{id:G["passive:53:critical damage-base"],name:"Passive Base Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_CRTDOWN]},"passive:53:critical damage-buff":{id:G["passive:53:critical damage-buff"],name:"Passive Buffed Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_CRTDOWN]},"passive:53:element damage-base":{id:G["passive:53:element damage-base"],name:"Passive Base Elemental Weakness Damage Reduction",stat:j.elementalWeaknessDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_ELEMENTDOWN]},"passive:53:element damage-buff":{id:G["passive:53:element damage-buff"],name:"Passive Buffed Elemental Weakness Damage Reduction",stat:j.elementalWeaknessDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_ELEMENTDOWN]},"passive:53:critical rate-base":{id:G["passive:53:critical rate-base"],name:"Passive Base Critical Hit Rate Reduction",stat:j.crit,stackType:K.Passive,icons:()=>[M.BUFF_CRTDOWN]},"passive:53:critical rate-buff":{id:G["passive:53:critical rate-buff"],name:"Passive Buffed Critical Hit Rate Reduction",stat:j.crit,stackType:K.Passive,icons:()=>[M.BUFF_CRTDOWN]},"passive:55:hp conditional":{id:G["passive:55:hp conditional"],name:"Passive Conditional Effect based on HP Threshold",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_HPTHRESH]},"passive:58:guard mitigation":{id:G["passive:58:guard mitigation"],name:"Passive Guard Damage Reduction",stackType:K.Passive,icons:()=>[M.BUFF_GUARDCUT]},"passive:59:bc fill when attacked on guard-percent":{id:G["passive:59:bc fill when attacked on guard-percent"],name:"Passive BC Fill when Attacked and Guarding (Percentage)",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_GUARDBBUP]},"passive:59:bc fill when attacked on guard-flat":{id:G["passive:59:bc fill when attacked on guard-flat"],name:"Passive BC Fill when Attacked and Guarding (Flat Amount)",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_GUARDBBUP]},"passive:61:bc fill on guard-percent":{id:G["passive:61:bc fill on guard-percent"],name:"Passive BC Fill on Guard (Percentage)",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_GUARDBBUP]},"passive:61:bc fill on guard-flat":{id:G["passive:61:bc fill on guard-flat"],name:"Passive BC Fill on Guard (Flat Amount)",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_GUARDBBUP]},"passive:62:mitigate-fire":{id:G["passive:62:mitigate-fire"],name:"Passive Fire Damage Reduction",stat:j.fireMitigation,stackType:K.Passive,icons:()=>[M.BUFF_FIREDMGDOWN]},"passive:62:mitigate-water":{id:G["passive:62:mitigate-water"],name:"Passive Water Damage Reduction",stat:j.waterMitigation,stackType:K.Passive,icons:()=>[M.BUFF_WATERDMGDOWN]},"passive:62:mitigate-earth":{id:G["passive:62:mitigate-earth"],name:"Passive Earth Damage Reduction",stat:j.earthMitigation,stackType:K.Passive,icons:()=>[M.BUFF_EARTHDMGDOWN]},"passive:62:mitigate-thunder":{id:G["passive:62:mitigate-thunder"],name:"Passive Thunder Damage Reduction",stat:j.thunderMitigation,stackType:K.Passive,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"passive:62:mitigate-light":{id:G["passive:62:mitigate-light"],name:"Passive Light Damage Reduction",stat:j.lightMitigation,stackType:K.Passive,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"passive:62:mitigate-dark":{id:G["passive:62:mitigate-dark"],name:"Passive Dark Damage Reduction",stat:j.darkMitigation,stackType:K.Passive,icons:()=>[M.BUFF_DARKDMGDOWN]},"passive:62:mitigate-unknown":{id:G["passive:62:mitigate-unknown"],name:"Passive Elemental Damage Reduction (Unspecified Element)",stat:j.mitigation,stackType:K.Passive,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"passive:63:first turn mitigate-fire":{id:G["passive:63:first turn mitigate-fire"],name:"Fire Damage Reduction for First X Turns",stat:j.fireMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_FIREDMGDOWN]},"passive:63:first turn mitigate-water":{id:G["passive:63:first turn mitigate-water"],name:"Water Damage Reduction for First X Turns",stat:j.waterMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_WATERDMGDOWN]},"passive:63:first turn mitigate-earth":{id:G["passive:63:first turn mitigate-earth"],name:"Earth Damage Reduction for First X Turns",stat:j.earthMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_EARTHDMGDOWN]},"passive:63:first turn mitigate-thunder":{id:G["passive:63:first turn mitigate-thunder"],name:"Thunder Damage Reduction for First X Turns",stat:j.thunderMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"passive:63:first turn mitigate-light":{id:G["passive:63:first turn mitigate-light"],name:"Light Damage Reduction for First X Turns",stat:j.lightMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"passive:63:first turn mitigate-dark":{id:G["passive:63:first turn mitigate-dark"],name:"Dark Damage Reduction for First X Turns",stat:j.darkMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_DARKDMGDOWN]},"passive:63:first turn mitigate-unknown":{id:G["passive:63:first turn mitigate-unknown"],name:"Elemental Damage Reduction (Unspecified Element) for First X Turns",stat:j.mitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"passive:64:attack boost-bb":{id:G["passive:64:attack boost-bb"],name:"Passive BB ATK Boost",stat:j.bbAtk,stackType:K.Passive,icons:()=>[M.BUFF_BBATKUP]},"passive:64:attack boost-sbb":{id:G["passive:64:attack boost-sbb"],name:"Passive SBB ATK Boost",stat:j.bbAtk,stackType:K.Passive,icons:()=>[M.BUFF_SBBATKUP]},"passive:64:attack boost-ubb":{id:G["passive:64:attack boost-ubb"],name:"Passive UBB ATK Boost",stat:j.bbAtk,stackType:K.Passive,icons:()=>[M.BUFF_UBBATKUP]},"passive:65:bc fill on crit":{id:G["passive:65:bc fill on crit"],name:"Passive BC Fill on Critical Hit",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:66:add effect to skill-bb":{id:G["passive:66:add effect to skill-bb"],name:"Passive Added Effect to Brave Burst",stackType:K.Passive,icons:()=>[M.BUFF_ADDTO_BB]},"passive:66:add effect to skill-sbb":{id:G["passive:66:add effect to skill-sbb"],name:"Passive Added Effect to Super Brave Burst",stackType:K.Passive,icons:()=>[M.BUFF_ADDTO_SBB]},"passive:66:add effect to skill-ubb":{id:G["passive:66:add effect to skill-ubb"],name:"Passive Added Effect to Ultimate Brave Burst",stackType:K.Passive,icons:()=>[M.BUFF_ADDTO_UBB]},"passive:69:chance ko resistance":{id:G["passive:69:chance ko resistance"],name:"Passive KO Resistance (Chance)",stat:j.koResistance,stackType:K.Passive,icons:()=>[M.BUFF_KOBLOCK]},"passive:70:od fill rate":{id:G["passive:70:od fill rate"],name:"Passive OD Gauge Fill Rate",stat:j.odGauge,stackType:K.Passive,icons:()=>[M.BUFF_ODFILLBOOST]},"passive:71:inflict on hit-poison":{id:G["passive:71:inflict on hit-poison"],name:"Passive Poison Counter",stat:j.poisonCounter,stackType:K.Passive,icons:()=>[M.BUFF_POISONCOUNTER]},"passive:71:inflict on hit-weak":{id:G["passive:71:inflict on hit-weak"],name:"Passive Weak Counter",stat:j.weakCounter,stackType:K.Passive,icons:()=>[M.BUFF_WEAKCOUNTER]},"passive:71:inflict on hit-sick":{id:G["passive:71:inflict on hit-sick"],name:"Passive Sick Counter",stat:j.sickCounter,stackType:K.Passive,icons:()=>[M.BUFF_SICKCOUNTER]},"passive:71:inflict on hit-injury":{id:G["passive:71:inflict on hit-injury"],name:"Passive Injury Counter",stat:j.injuryCounter,stackType:K.Passive,icons:()=>[M.BUFF_INJCONTER]},"passive:71:inflict on hit-curse":{id:G["passive:71:inflict on hit-curse"],name:"Passive Curse Counter",stat:j.curseCounter,stackType:K.Passive,icons:()=>[M.BUFF_CURSECOUNTER]},"passive:71:inflict on hit-paralysis":{id:G["passive:71:inflict on hit-paralysis"],name:"Passive Paralysis Counter",stat:j.paralysisCounter,stackType:K.Passive,icons:()=>[M.BUFF_PARALYCOUNTER]},"passive:72:effect at turn start-hp":{id:G["passive:72:effect at turn start-hp"],name:"Gradual HP Effects Occur at Turn Start",stat:j.effectOccurrenceShift,stackType:K.Singleton,icons:()=>[M.BUFF_HPTURNSTART]},"passive:72:effect at turn start-bc":{id:G["passive:72:effect at turn start-bc"],name:"Gradual Battle Crystal Effects Occur at Turn Start",stat:j.effectOccurrenceShift,stackType:K.Singleton,icons:()=>[M.BUFF_BCTURNSTART]},"passive:73:resist-poison":{id:G["passive:73:resist-poison"],name:"Passive Poison Resistance",stat:j.poisonResist,stackType:K.Passive,icons:()=>[M.BUFF_POISONBLK]},"passive:73:resist-weak":{id:G["passive:73:resist-weak"],name:"Passive Weak Resistance",stat:j.weakResist,stackType:K.Passive,icons:()=>[M.BUFF_WEAKBLK]},"passive:73:resist-sick":{id:G["passive:73:resist-sick"],name:"Passive Sick Resistance",stat:j.sickResist,stackType:K.Passive,icons:()=>[M.BUFF_SICKBLK]},"passive:73:resist-injury":{id:G["passive:73:resist-injury"],name:"Passive Injury Resistance",stat:j.injuryResist,stackType:K.Passive,icons:()=>[M.BUFF_INJURYBLK]},"passive:73:resist-curse":{id:G["passive:73:resist-curse"],name:"Passive Curse Resistance",stat:j.curseResist,stackType:K.Passive,icons:()=>[M.BUFF_CURSEBLK]},"passive:73:resist-paralysis":{id:G["passive:73:resist-paralysis"],name:"Passive Paralysis Resistance",stat:j.paralysisResist,stackType:K.Passive,icons:()=>[M.BUFF_PARALYSISBLK]},"passive:73:resist-atk down":{id:G["passive:73:resist-atk down"],name:"Passive Attack Reduction Resistance",stat:j.atkDownResist,stackType:K.Passive,icons:()=>[M.BUFF_RESISTATKDOWN]},"passive:73:resist-def down":{id:G["passive:73:resist-def down"],name:"Passive Defense Reduction Resistance",stat:j.defDownResist,stackType:K.Passive,icons:()=>[M.BUFF_RESISTDEFDOWN]},"passive:73:resist-rec down":{id:G["passive:73:resist-rec down"],name:"Passive Recovery Reduction Resistance",stat:j.recDownResist,stackType:K.Passive,icons:()=>[M.BUFF_RESISTRECDOWN]},"passive:74:ailment attack boost":{id:G["passive:74:ailment attack boost"],name:"Passive Attack Boost on Status Afflicted Foes",stat:j.ailmentAttackBoost,stackType:K.Passive,icons:()=>[M.BUFF_AILDMGUP]},"passive:75:spark vulnerability":{id:G["passive:75:spark vulnerability"],name:"Passive Spark Vulnerability",stat:j.sparkDamage,stackType:K.Passive,icons:()=>[M.BUFF_SPARKDMGUP]},"passive:77:spark damage reduction-base":{id:G["passive:77:spark damage reduction-base"],name:"Passive Base Spark Damage Reduction",stat:j.sparkDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_SPARKDMGDOWN]},"passive:77:spark damage reduction-buff":{id:G["passive:77:spark damage reduction-buff"],name:"Passive Buffed Spark Damage Reduction",stat:j.sparkDamageMitigation,stackType:K.Passive,icons:()=>[M.BUFF_SPARKDMGDOWN]},"passive:78:damage taken conditional":{id:G["passive:78:damage taken conditional"],name:"Passive Conditional Effect after Damage Received Threshold",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_DAMAGETAKENTHRESH]},"passive:79:bc fill after damage taken conditional-flat":{id:G["passive:79:bc fill after damage taken conditional-flat"],name:"Passive Flat BC Fill after Damage Taken Received Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGEBB]},"passive:79:bc fill after damage taken conditional-percent":{id:G["passive:79:bc fill after damage taken conditional-percent"],name:"Passive Percent BC Fill after Damage Taken Received Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGEBB]},"passive:80:damage dealt conditional":{id:G["passive:80:damage dealt conditional"],name:"Passive Conditional Effect after Damage Dealt Threshold",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_DAMAGEDEALTTHRESH]},"passive:81:bc fill after damage dealt conditional-flat":{id:G["passive:81:bc fill after damage dealt conditional-flat"],name:"Passive Flat BC Fill after Damage Dealt Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGEBB]},"passive:81:bc fill after damage dealt conditional-percent":{id:G["passive:81:bc fill after damage dealt conditional-percent"],name:"Passive Percent BC Fill after Damage Dealt Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_DAMAGEBB]},"passive:82:bc received conditional":{id:G["passive:82:bc received conditional"],name:"Passive Conditional Effect after BC Received Threshold",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_BCRECEIVEDTHRESH]},"passive:83:bc fill after bc received conditional-flat":{id:G["passive:83:bc fill after bc received conditional-flat"],name:"Passive Flat BC Fill after BC Received Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:83:bc fill after bc received conditional-percent":{id:G["passive:83:bc fill after bc received conditional-percent"],name:"Passive Percent BC Fill after BC Received Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:84:hc received conditional":{id:G["passive:84:hc received conditional"],name:"Passive Conditional Effect after HC Received Threshold",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_HCRECEIVEDTHRESH]},"passive:85:bc fill after hc received conditional-flat":{id:G["passive:85:bc fill after hc received conditional-flat"],name:"Passive Flat BC Fill after HC Received Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:85:bc fill after hc received conditional-percent":{id:G["passive:85:bc fill after hc received conditional-percent"],name:"Passive Percent BC Fill after HC Received Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:86:spark count conditional":{id:G["passive:86:spark count conditional"],name:"Passive Conditional Effect after Spark Count Threshold",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_SPARKCOUNTTHRESH]},"passive:87:bc fill after spark count conditional-flat":{id:G["passive:87:bc fill after spark count conditional-flat"],name:"Passive Flat BC Fill after Spark Count Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:87:bc fill after spark count conditional-percent":{id:G["passive:87:bc fill after spark count conditional-percent"],name:"Passive Percent BC Fill after Spark Count Threshold",stat:j.bbGauge,stackType:K.Passive,icons:()=>[M.BUFF_BBREC]},"passive:88:on guard conditional":{id:G["passive:88:on guard conditional"],name:"Passive Conditional Effect on Guard (Chance)",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_GUARD]},"passive:89:on critical hit conditional":{id:G["passive:89:on critical hit conditional"],name:"Passive Conditional Effect on Critical Hit (Chance)",stackType:K.Passive,icons:()=>[M.CONDITIONALBUFF_CRIT]},"passive:90:inflict on crit-poison":{id:G["passive:90:inflict on crit-poison"],name:"Passive Poison Infliction on Critical Hit (Chance)",stat:j.poisonInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDPOISON]},"passive:90:inflict on crit-weak":{id:G["passive:90:inflict on crit-weak"],name:"Passive Weak Infliction on Critical Hit (Chance)",stat:j.weakInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDWEAK]},"passive:90:inflict on crit-sick":{id:G["passive:90:inflict on crit-sick"],name:"Passive Sick Infliction on Critical Hit (Chance)",stat:j.sickInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDSICK]},"passive:90:inflict on crit-injury":{id:G["passive:90:inflict on crit-injury"],name:"Passive Injury Infliction on Critical Hit (Chance)",stat:j.injuryInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDINJURY]},"passive:90:inflict on crit-curse":{id:G["passive:90:inflict on crit-curse"],name:"Passive Curse Infliction on Critical Hit (Chance)",stat:j.curseInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDCURSE]},"passive:90:inflict on crit-paralysis":{id:G["passive:90:inflict on crit-paralysis"],name:"Passive Paralysis Infliction on Critical Hit (Chance)",stat:j.paralysisInflict,stackType:K.Passive,icons:()=>[M.BUFF_ADDPARA]},"passive:91:first turn spark":{id:G["passive:91:first turn spark"],name:"Spark Damage Boost for First X Turns",stat:j.sparkDamage,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_SPARKDOWN:M.BUFF_SPARKUP]},"passive:92:negate defense ignore":{id:G["passive:92:negate defense ignore"],name:"Passive Defense Ignore Negation (Chance)",stat:j.defenseIgnoreMitigation,stackType:K.Passive,icons:()=>[M.BUFF_IGNOREDEFBLK]},"passive:93:add element-fire":{id:G["passive:93:add element-fire"],name:"Passive Added Element to Attack (Fire)",stat:j.elementModification,stackType:K.Passive,icons:()=>[M.BUFF_ADDFIRE]},"passive:93:add element-water":{id:G["passive:93:add element-water"],name:"Passive Added Element to Attack (Water)",stat:j.elementModification,stackType:K.Passive,icons:()=>[M.BUFF_ADDWATER]},"passive:93:add element-earth":{id:G["passive:93:add element-earth"],name:"Passive Added Element to Attack (Earth)",stat:j.elementModification,stackType:K.Passive,icons:()=>[M.BUFF_ADDEARTH]},"passive:93:add element-thunder":{id:G["passive:93:add element-thunder"],name:"Passive Added Element to Attack (Thunder)",stat:j.elementModification,stackType:K.Passive,icons:()=>[M.BUFF_ADDTHUNDER]},"passive:93:add element-light":{id:G["passive:93:add element-light"],name:"Passive Added Element to Attack (Light)",stat:j.elementModification,stackType:K.Passive,icons:()=>[M.BUFF_ADDLIGHT]},"passive:93:add element-dark":{id:G["passive:93:add element-dark"],name:"Passive Added Element to Attack (Dark)",stat:j.elementModification,stackType:K.Passive,icons:()=>[M.BUFF_ADDDARK]},"passive:93:add element-unknown":{id:G["passive:93:add element-unknown"],name:"Passive Added Element to Attack (Unspecified Element)",stat:j.elementModification,stackType:K.Passive,icons:()=>[M.BUFF_ADDELEMENT]},"passive:96:aoe normal attack":{id:G["passive:96:aoe normal attack"],name:"Passive Normal Attacks Hit All Foes",stat:j.aoeNormalAttack,stackType:K.Passive,icons:()=>[M.BUFF_AOEATK]},UNKNOWN_PROC_EFFECT_ID:{id:G.UNKNOWN_PROC_EFFECT_ID,name:"Unknown Proc Effect",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_PROC_BUFF_PARAMS:{id:G.UNKNOWN_PROC_BUFF_PARAMS,name:"Unknown Proc Buff Parameters",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},"proc:1:attack":{id:G["proc:1:attack"],name:"Regular Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST:M.ATK_AOE]},"proc:2:burst heal":{id:G["proc:2:burst heal"],name:"Burst Heal",stat:j.hpRecovery,stackType:K.Burst,icons:()=>[M.BUFF_HPREC]},"proc:3:gradual heal":{id:G["proc:3:gradual heal"],name:"Active Gradual Heal",stat:j.hpRecovery,stackType:K.Active,icons:()=>[M.BUFF_HPREC]},"proc:4:bc fill-flat":{id:G["proc:4:bc fill-flat"],name:"Burst BC Fill (Flat Amount)",stat:j.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBREC]},"proc:4:bc fill-percent":{id:G["proc:4:bc fill-percent"],name:"Burst BC Fill (Percentage)",stat:j.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBREC]}}),(()=>{const e=e=>a=>{let t="",i=!1,s="UP";a&&(a.value&&a.value<0&&(s="DOWN"),a.conditions&&a.conditions.targetElements&&(t=a.conditions.targetElements[0],i=!0)),"string"!=typeof t&&(t="");let n=`BUFF_${t.toUpperCase()}${e}${s}`;return t&&n in M||(n=`BUFF_${i?"ELEMENT":""}${e}${s}`),[M[n]]};return{"proc:5:regular or elemental-atk":{id:G["proc:5:regular or elemental-atk"],name:"Active Regular/Elemental Attack Boost",stat:j.atk,stackType:K.Active,icons:e("ATK")},"proc:5:regular or elemental-def":{id:G["proc:5:regular or elemental-def"],name:"Active Regular/Elemental Defense Boost",stat:j.def,stackType:K.Active,icons:e("DEF")},"proc:5:regular or elemental-rec":{id:G["proc:5:regular or elemental-rec"],name:"Active Regular/Elemental Recovery Boost",stat:j.rec,stackType:K.Active,icons:e("REC")},"proc:5:regular or elemental-crit":{id:G["proc:5:regular or elemental-crit"],name:"Active Regular/Elemental Critical Hit Rate Boost",stat:j.crit,stackType:K.Active,icons:e("CRTRATE")}}})()),{"proc:6:drop boost-bc":{id:G["proc:6:drop boost-bc"],name:"Active Battle Crystal Drop Rate Boost",stat:j.bcDropRate,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_BCDOWN:M.BUFF_BCDROP]},"proc:6:drop boost-hc":{id:G["proc:6:drop boost-hc"],name:"Active Heart Crystal Drop Rate Boost",stat:j.hcDropRate,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_HCDOWN:M.BUFF_HCDROP]},"proc:6:drop boost-item":{id:G["proc:6:drop boost-item"],name:"Active Item Drop Rate Boost",stat:j.itemDropRate,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ITEMDOWN:M.BUFF_ITEMDROP]},"proc:7:guaranteed ko resistance":{id:G["proc:7:guaranteed ko resistance"],name:"Guaranteed KO Resistance",stat:j.koResistance,stackType:K.Singleton,icons:()=>[M.BUFF_KOBLK]},"proc:8:max hp boost-flat":{id:G["proc:8:max hp boost-flat"],name:"Max HP Boost (Flat Amount)",stat:j.hp,stackType:K.Singleton,icons:()=>[M.BUFF_HPUP]},"proc:8:max hp boost-percent":{id:G["proc:8:max hp boost-percent"],name:"Max HP Boost (Percentage)",stat:j.hp,stackType:K.Singleton,icons:()=>[M.BUFF_HPUP]}}),(()=>{const e=e=>a=>{let t="",i=!1,s="DOWN";a&&(a.value&&a.value>0&&(s="UP"),a.conditions&&a.conditions.targetElements&&(t=a.conditions.targetElements[0],i=!0)),"string"!=typeof t&&(t="");let n=`BUFF_${t.toUpperCase()}${e}${s}`;return t&&n in M||(n=`BUFF_${i?"ELEMENT":""}${e}${s}`),[M[n]]};return{"proc:9:regular or elemental reduction-atk":{id:G["proc:9:regular or elemental reduction-atk"],name:"Active Regular/Elemental Attack Reduction",stat:j.atk,stackType:K.Active,icons:e("ATK")},"proc:9:regular or elemental reduction-def":{id:G["proc:9:regular or elemental reduction-def"],name:"Active Regular/Elemental Defense Reduction",stat:j.def,stackType:K.Active,icons:e("DEF")},"proc:9:regular or elemental reduction-rec":{id:G["proc:9:regular or elemental reduction-rec"],name:"Active Regular/Elemental Recovery Reduction",stat:j.rec,stackType:K.Active,icons:e("REC")},"proc:9:regular or elemental reduction-unknown":{id:G["proc:9:regular or elemental reduction-unknown"],name:"Active Regular/Elemental Unknown Stat Reduction",stackType:K.Active,icons:()=>[M.UNKNOWN]}}})()),{"proc:10:cleanse-poison":{id:G["proc:10:cleanse-poison"],name:"Poison Cleanse",stat:j.poisonResist,stackType:K.Burst,icons:()=>[M.BUFF_POISONBLK]},"proc:10:cleanse-weak":{id:G["proc:10:cleanse-weak"],name:"Weak Cleanse",stat:j.weakResist,stackType:K.Burst,icons:()=>[M.BUFF_WEAKBLK]},"proc:10:cleanse-sick":{id:G["proc:10:cleanse-sick"],name:"Sick Cleanse",stat:j.sickResist,stackType:K.Burst,icons:()=>[M.BUFF_SICKBLK]},"proc:10:cleanse-injury":{id:G["proc:10:cleanse-injury"],name:"Injury Cleanse",stat:j.injuryResist,stackType:K.Burst,icons:()=>[M.BUFF_INJURYBLK]},"proc:10:cleanse-curse":{id:G["proc:10:cleanse-curse"],name:"Curse Cleanse",stat:j.curseResist,stackType:K.Burst,icons:()=>[M.BUFF_CURSEBLK]},"proc:10:cleanse-paralysis":{id:G["proc:10:cleanse-paralysis"],name:"Paralysis Cleanse",stat:j.paralysisResist,stackType:K.Burst,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:10:cleanse-atk down":{id:G["proc:10:cleanse-atk down"],name:"Attack Reduction Cleanse",stat:j.atkDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTATKDOWN]},"proc:10:cleanse-def down":{id:G["proc:10:cleanse-def down"],name:"Defense Reduction Cleanse",stat:j.defDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTDEFDOWN]},"proc:10:cleanse-rec down":{id:G["proc:10:cleanse-rec down"],name:"Recovery Reduction Cleanse",stat:j.recDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTRECDOWN]},"proc:10:cleanse-unknown":{id:G["proc:10:cleanse-unknown"],name:"Unknown Ailment Cleanse",stackType:K.Unknown,icons:()=>[M.BUFF_AILMENTBLK]},"proc:11:chance inflict-poison":{id:G["proc:11:chance inflict-poison"],name:"Poison Infliction",stat:j.poisonInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_POISON]},"proc:11:chance inflict-weak":{id:G["proc:11:chance inflict-weak"],name:"Weak Infliction",stat:j.weakInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_WEAK]},"proc:11:chance inflict-sick":{id:G["proc:11:chance inflict-sick"],name:"Sick Infliction",stat:j.sickInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_SICK]},"proc:11:chance inflict-injury":{id:G["proc:11:chance inflict-injury"],name:"Injury Infliction",stat:j.injuryInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_INJURY]},"proc:11:chance inflict-curse":{id:G["proc:11:chance inflict-curse"],name:"Curse Infliction",stat:j.curseInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_CURSE]},"proc:11:chance inflict-paralysis":{id:G["proc:11:chance inflict-paralysis"],name:"Paralysis Infliction",stat:j.paralysisInflict,stackType:K.Burst,icons:()=>[M.DEBUFF_PARALYSIS]},"proc:11:chance inflict-atk down":{id:G["proc:11:chance inflict-atk down"],name:"Attack Reduction Infliction",stat:j.atkDownInflict,stackType:K.Burst,icons:()=>[M.BUFF_ATKDOWN]},"proc:11:chance inflict-def down":{id:G["proc:11:chance inflict-def down"],name:"Defense Reduction Infliction",stat:j.defDownInflict,stackType:K.Burst,icons:()=>[M.BUFF_DEFDOWN]},"proc:11:chance inflict-rec down":{id:G["proc:11:chance inflict-rec down"],name:"Recovery Reduction Infliction",stat:j.recDownInflict,stackType:K.Burst,icons:()=>[M.BUFF_RECDOWN]},"proc:11:chance inflict-unknown":{id:G["proc:11:chance inflict-unknown"],name:"Unknown Ailment Infliction",stackType:K.Unknown,icons:()=>[M.DEBUFF_AILMENT]},"proc:12:guaranteed revive":{id:G["proc:12:guaranteed revive"],name:"Instant Revive (Guaranteed)",stackType:K.Burst,icons:()=>[M.BUFF_KOBLK]},"proc:13:random attack":{id:G["proc:13:random attack"],name:"Random Target Damage",stackType:K.Attack,icons:()=>[M.ATK_RT]},"proc:14:hp absorb attack":{id:G["proc:14:hp absorb attack"],name:"Lifesteal Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_HPREC:M.ATK_AOE_HPREC]},"proc:16:mitigate-fire":{id:G["proc:16:mitigate-fire"],name:"Active Fire Damage Reduction",stat:j.fireMitigation,stackType:K.Active,icons:()=>[M.BUFF_FIREDMGDOWN]},"proc:16:mitigate-water":{id:G["proc:16:mitigate-water"],name:"Active Water Damage Reduction",stat:j.waterMitigation,stackType:K.Active,icons:()=>[M.BUFF_WATERDMGDOWN]},"proc:16:mitigate-earth":{id:G["proc:16:mitigate-earth"],name:"Active Earth Damage Reduction",stat:j.earthMitigation,stackType:K.Active,icons:()=>[M.BUFF_EARTHDMGDOWN]},"proc:16:mitigate-thunder":{id:G["proc:16:mitigate-thunder"],name:"Active Thunder Damage Reduction",stat:j.thunderMitigation,stackType:K.Active,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"proc:16:mitigate-light":{id:G["proc:16:mitigate-light"],name:"Active Light Damage Reduction",stat:j.lightMitigation,stackType:K.Active,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"proc:16:mitigate-dark":{id:G["proc:16:mitigate-dark"],name:"Active Dark Damage Reduction",stat:j.darkMitigation,stackType:K.Active,icons:()=>[M.BUFF_DARKDMGDOWN]},"proc:16:mitigate-all":{id:G["proc:16:mitigate-all"],name:"Active Elemental Damage Reduction (All Elements)",stat:j.mitigation,stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"proc:16:mitigate-unknown":{id:G["proc:16:mitigate-unknown"],name:"Active Elemental Damage Reduction (Unspecified Element)",stat:j.mitigation,stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"proc:17:resist-poison":{id:G["proc:17:resist-poison"],name:"Active Poison Resistance",stat:j.poisonResist,stackType:K.Active,icons:()=>[M.BUFF_POISONBLK]},"proc:17:resist-weak":{id:G["proc:17:resist-weak"],name:"Active Weak Resistance",stat:j.weakResist,stackType:K.Active,icons:()=>[M.BUFF_WEAKBLK]},"proc:17:resist-sick":{id:G["proc:17:resist-sick"],name:"Active Sick Resistance",stat:j.sickResist,stackType:K.Active,icons:()=>[M.BUFF_SICKBLK]},"proc:17:resist-injury":{id:G["proc:17:resist-injury"],name:"Active Injury Resistance",stat:j.injuryResist,stackType:K.Active,icons:()=>[M.BUFF_INJURYBLK]},"proc:17:resist-curse":{id:G["proc:17:resist-curse"],name:"Active Curse Resistance",stat:j.curseResist,stackType:K.Active,icons:()=>[M.BUFF_CURSEBLK]},"proc:17:resist-paralysis":{id:G["proc:17:resist-paralysis"],name:"Active Paralysis Resistance",stat:j.paralysisResist,stackType:K.Active,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:18:mitigation":{id:G["proc:18:mitigation"],name:"Active Damage Reduction",stat:j.mitigation,stackType:K.Active,icons:()=>[M.BUFF_DAMAGECUT]},"proc:19:gradual bc fill":{id:G["proc:19:gradual bc fill"],name:"Active Gradual BC Fill",stat:j.bbGauge,stackType:K.Active,icons:()=>[M.BUFF_BBREC]},"proc:20:bc fill on hit":{id:G["proc:20:bc fill on hit"],name:"Active BC Fill when attacked",stat:j.bbGauge,stackType:K.Active,icons:()=>[M.BUFF_DAMAGEBB]},"proc:22:defense ignore":{id:G["proc:22:defense ignore"],name:"Active Defense Ignore",stat:j.defenseIgnore,stackType:K.Active,icons:()=>[M.BUFF_IGNOREDEF]},"proc:23:spark damage":{id:G["proc:23:spark damage"],name:"Active Spark Damage Boost",stat:j.sparkDamage,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_SPARKDOWN:M.BUFF_SPARKUP]},"proc:24:converted-atk":{id:G["proc:24:converted-atk"],name:"Active Converted Attack Boost",stat:j.atk,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTATKDOWN:M.BUFF_CONVERTATKUP]},"proc:24:converted-def":{id:G["proc:24:converted-def"],name:"Active Converted Defense Boost",stat:j.def,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTDEFDOWN:M.BUFF_CONVERTDEFUP]},"proc:24:converted-rec":{id:G["proc:24:converted-rec"],name:"Active Converted Recovery Boost",stat:j.rec,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_CONVERTRECDOWN:M.BUFF_CONVERTRECUP]},"proc:26:hit count boost":{id:G["proc:26:hit count boost"],name:"Active Hit Count Boost",stat:j.hitCountModification,stackType:K.Active,icons:()=>[M.BUFF_HITUP]},"proc:27:proportional attack":{id:G["proc:27:proportional attack"],name:"Proportional Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_PROPORTIONAL:M.ATK_AOE_PROPORTIONAL]},"proc:28:fixed attack":{id:G["proc:28:fixed attack"],name:"Fixed Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_FIXED:M.ATK_AOE_FIXED]},"proc:29:multi-element attack":{id:G["proc:29:multi-element attack"],name:"Multi-Element Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_MULTIELEMENT:M.ATK_AOE_MULTIELEMENT]},"proc:30:add element-fire":{id:G["proc:30:add element-fire"],name:"Active Added Element to Attack (Fire)",stat:j.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDFIRE]},"proc:30:add element-water":{id:G["proc:30:add element-water"],name:"Active Added Element to Attack (Water)",stat:j.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDWATER]},"proc:30:add element-earth":{id:G["proc:30:add element-earth"],name:"Active Added Element to Attack (Earth)",stat:j.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDEARTH]},"proc:30:add element-thunder":{id:G["proc:30:add element-thunder"],name:"Active Added Element to Attack (Thunder)",stat:j.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDTHUNDER]},"proc:30:add element-light":{id:G["proc:30:add element-light"],name:"Active Added Element to Attack (Light)",stat:j.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDLIGHT]},"proc:30:add element-dark":{id:G["proc:30:add element-dark"],name:"Active Added Element to Attack (Dark)",stat:j.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDDARK]},"proc:30:add element-unknown":{id:G["proc:30:add element-unknown"],name:"Active Added Element to Attack (Unspecified Element)",stat:j.elementModification,stackType:K.Active,icons:()=>[M.BUFF_ADDELEMENT]},"proc:31:bc fill-flat":{id:G["proc:31:bc fill-flat"],name:"Burst BC Fill (Flat Amount)",stat:j.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBREC]},"proc:31:bc fill-percent":{id:G["proc:31:bc fill-percent"],name:"Burst BC Fill (Percentage)",stat:j.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBREC]},"proc:32:element shift-fire":{id:G["proc:32:element shift-fire"],name:"Element Shift (Fire)",stat:j.elementModification,stackType:K.Singleton,icons:()=>[M.BUFF_SHIFTFIRE]},"proc:32:element shift-water":{id:G["proc:32:element shift-water"],name:"Element Shift (Water)",stat:j.elementModification,stackType:K.Singleton,icons:()=>[M.BUFF_SHIFTWATER]},"proc:32:element shift-earth":{id:G["proc:32:element shift-earth"],name:"Element Shift (Earth)",stat:j.elementModification,stackType:K.Singleton,icons:()=>[M.BUFF_SHIFTEARTH]},"proc:32:element shift-thunder":{id:G["proc:32:element shift-thunder"],name:"Element Shift (Thunder)",stat:j.elementModification,stackType:K.Singleton,icons:()=>[M.BUFF_SHIFTTHUNDER]},"proc:32:element shift-light":{id:G["proc:32:element shift-light"],name:"Element Shift (Light)",stat:j.elementModification,stackType:K.Singleton,icons:()=>[M.BUFF_SHIFTLIGHT]},"proc:32:element shift-dark":{id:G["proc:32:element shift-dark"],name:"Element Shift (Dark)",stat:j.elementModification,stackType:K.Singleton,icons:()=>[M.BUFF_SHIFTDARK]},"proc:32:element shift-unknown":{id:G["proc:32:element shift-unknown"],name:"Element Shift (Unspecified Element)",stat:j.elementModification,stackType:K.Singleton,icons:()=>[M.BUFF_SHIFTELEMENT]},"proc:33:buff wipe":{id:G["proc:33:buff wipe"],name:"Buff Removal",stat:j.buffStabilityModification,stackType:K.Burst,icons:()=>[M.BUFF_REMOVEBUFF]},"proc:34:bc drain-flat":{id:G["proc:34:bc drain-flat"],name:"Burst BB Gauge Drain (Flat Amount)",stat:j.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBFILLDOWN]},"proc:34:bc drain-percent":{id:G["proc:34:bc drain-percent"],name:"Burst BB Gauge Drain (Percentage)",stat:j.bbGauge,stackType:K.Burst,icons:()=>[M.BUFF_BBFILLDOWN]},"proc:36:ls lock":{id:G["proc:36:ls lock"],name:"Active Leader Skill Lock",stat:j.buffStabilityModification,stackType:K.Active,icons:()=>[M.BUFF_DISABLELS]},"proc:37:summon":{id:G["proc:37:summon"],name:"Summon Unit",stackType:K.Burst,icons:()=>[M.BUFF_SUMMONUNIT]},"proc:38:cleanse-poison":{id:G["proc:38:cleanse-poison"],name:"Poison Cleanse",stat:j.poisonResist,stackType:K.Burst,icons:()=>[M.BUFF_POISONBLK]},"proc:38:cleanse-weak":{id:G["proc:38:cleanse-weak"],name:"Weak Cleanse",stat:j.weakResist,stackType:K.Burst,icons:()=>[M.BUFF_WEAKBLK]},"proc:38:cleanse-sick":{id:G["proc:38:cleanse-sick"],name:"Sick Cleanse",stat:j.sickResist,stackType:K.Burst,icons:()=>[M.BUFF_SICKBLK]},"proc:38:cleanse-injury":{id:G["proc:38:cleanse-injury"],name:"Injury Cleanse",stat:j.injuryResist,stackType:K.Burst,icons:()=>[M.BUFF_INJURYBLK]},"proc:38:cleanse-curse":{id:G["proc:38:cleanse-curse"],name:"Curse Cleanse",stat:j.curseResist,stackType:K.Burst,icons:()=>[M.BUFF_CURSEBLK]},"proc:38:cleanse-paralysis":{id:G["proc:38:cleanse-paralysis"],name:"Paralysis Cleanse",stat:j.paralysisResist,stackType:K.Burst,icons:()=>[M.BUFF_PARALYSISBLK]},"proc:38:cleanse-atk down":{id:G["proc:38:cleanse-atk down"],name:"Attack Reduction Cleanse",stat:j.atkDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTATKDOWN]},"proc:38:cleanse-def down":{id:G["proc:38:cleanse-def down"],name:"Defense Reduction Cleanse",stat:j.defDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTDEFDOWN]},"proc:38:cleanse-rec down":{id:G["proc:38:cleanse-rec down"],name:"Recovery Reduction Cleanse",stat:j.recDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTRECDOWN]},"proc:38:cleanse-unknown":{id:G["proc:38:cleanse-unknown"],name:"Unknown Ailment Cleanse",stackType:K.Unknown,icons:()=>[M.BUFF_AILMENTBLK]},"proc:39:mitigate-fire":{id:G["proc:39:mitigate-fire"],name:"Active Fire Damage Reduction",stat:j.fireMitigation,stackType:K.Active,icons:()=>[M.BUFF_FIREDMGDOWN]},"proc:39:mitigate-water":{id:G["proc:39:mitigate-water"],name:"Active Water Damage Reduction",stat:j.waterMitigation,stackType:K.Active,icons:()=>[M.BUFF_WATERDMGDOWN]},"proc:39:mitigate-earth":{id:G["proc:39:mitigate-earth"],name:"Active Earth Damage Reduction",stat:j.earthMitigation,stackType:K.Active,icons:()=>[M.BUFF_EARTHDMGDOWN]},"proc:39:mitigate-thunder":{id:G["proc:39:mitigate-thunder"],name:"Active Thunder Damage Reduction",stat:j.thunderMitigation,stackType:K.Active,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"proc:39:mitigate-light":{id:G["proc:39:mitigate-light"],name:"Active Light Damage Reduction",stat:j.lightMitigation,stackType:K.Active,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"proc:39:mitigate-dark":{id:G["proc:39:mitigate-dark"],name:"Active Dark Damage Reduction",stat:j.darkMitigation,stackType:K.Active,icons:()=>[M.BUFF_DARKDMGDOWN]},"proc:39:mitigate-unknown":{id:G["proc:39:mitigate-unknown"],name:"Active Elemental Damage Reduction (Unspecified Element)",stat:j.mitigation,stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDMGDOWN]},"proc:40:add ailment-poison":{id:G["proc:40:add ailment-poison"],name:"Active Poison Infliction Added to Attack",stat:j.poisonInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDPOISON]},"proc:40:add ailment-weak":{id:G["proc:40:add ailment-weak"],name:"Active Weak Infliction Added to Attack",stat:j.weakInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDWEAK]},"proc:40:add ailment-sick":{id:G["proc:40:add ailment-sick"],name:"Active Sick Infliction Added to Attack",stat:j.sickInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDSICK]},"proc:40:add ailment-injury":{id:G["proc:40:add ailment-injury"],name:"Active Injury Infliction Added to Attack",stat:j.injuryInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDINJURY]},"proc:40:add ailment-curse":{id:G["proc:40:add ailment-curse"],name:"Active Curse Infliction Added to Attack",stat:j.curseInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDCURSE]},"proc:40:add ailment-paralysis":{id:G["proc:40:add ailment-paralysis"],name:"Active Paralysis Infliction Added to Attack",stat:j.paralysisInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDPARA]},"proc:40:add ailment-atk down":{id:G["proc:40:add ailment-atk down"],name:"Active Attack Reduction Infliction Added to Attack",stat:j.atkDownInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDATKDOWN]},"proc:40:add ailment-def down":{id:G["proc:40:add ailment-def down"],name:"Active Defense Reduction Infliction Added to Attack",stat:j.defDownInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDDEFDOWN]},"proc:40:add ailment-rec down":{id:G["proc:40:add ailment-rec down"],name:"Active Recovery Reduction Infliction Added to Attack",stat:j.recDownInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDRECDOWN]},"proc:40:add ailment-unknown":{id:G["proc:40:add ailment-unknown"],name:"Active Unknown Ailment Infliction Added to Attack",stackType:K.Unknown,icons:()=>[M.BUFF_ADDAILMENT]},"proc:42:sacrificial attack":{id:G["proc:42:sacrificial attack"],name:"Sacrificial Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_SACRIFICIAL:M.ATK_AOE_SACRIFICIAL]},"proc:42:instant death":{id:G["proc:42:instant death"],name:"Instant Death to Self (Post-Attack)",stackType:K.Burst,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_SACRIFICIAL:M.ATK_AOE_SACRIFICIAL,M.BUFF_KO]},"proc:43:burst od fill":{id:G["proc:43:burst od fill"],name:"Burst OD Gauge Fill (Percentage)",stat:j.odGauge,stackType:K.Burst,icons:()=>[M.BUFF_OVERDRIVEUP]},"proc:44:damage over time":{id:G["proc:44:damage over time"],name:"Active Damage over Time",stat:j.damageOverTime,stackType:K.Active,icons:()=>[M.BUFF_TURNDMG]},"proc:45:attack boost-bb":{id:G["proc:45:attack boost-bb"],name:"Active BB ATK Boost",stat:j.bbAtk,stackType:K.Active,icons:()=>[M.BUFF_BBATKUP]},"proc:45:attack boost-sbb":{id:G["proc:45:attack boost-sbb"],name:"Active SBB ATK Boost",stat:j.bbAtk,stackType:K.Active,icons:()=>[M.BUFF_SBBATKUP]},"proc:45:attack boost-ubb":{id:G["proc:45:attack boost-ubb"],name:"Active UBB ATK Boost",stat:j.bbAtk,stackType:K.Active,icons:()=>[M.BUFF_UBBATKUP]},"proc:46:non-lethal proportional attack":{id:G["proc:46:non-lethal proportional attack"],name:"Non-Lethal Proportional Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_PROPORTIONAL:M.ATK_AOE_PROPORTIONAL]},"proc:47:hp scaled attack":{id:G["proc:47:hp scaled attack"],name:"HP Scaled Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_HPSCALED:M.ATK_AOE_HPSCALED]},"proc:48:piercing attack-base":{id:G["proc:48:piercing attack-base"],name:"Piercing Proportional Damage (Base HP)",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_PIERCING_PROPORTIONAL:M.ATK_AOE_PIERCING_PROPORTIONAL]},"proc:48:piercing attack-current":{id:G["proc:48:piercing attack-current"],name:"Piercing Proportional Damage (Current HP)",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_PIERCING_PROPORTIONAL:M.ATK_AOE_PIERCING_PROPORTIONAL]},"proc:48:piercing attack-fixed":{id:G["proc:48:piercing attack-fixed"],name:"Piercing Fixed Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_PIERCING_FIXED:M.ATK_AOE_PIERCING_FIXED]},"proc:48:piercing attack-unknown":{id:G["proc:48:piercing attack-unknown"],name:"Unknown Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST:M.ATK_AOE]},"proc:49:chance instant death":{id:G["proc:49:chance instant death"],name:"Instant Death (Chance)",stackType:K.Burst,icons:()=>[M.BUFF_KO]},"proc:50:chance damage reflect":{id:G["proc:50:chance damage reflect"],name:"Active Damage Reflect (Chance)",stat:j.damageReflect,stackType:K.Active,icons:()=>[M.BUFF_COUNTERDAMAGE]},"proc:51:add to attack-atk down":{id:G["proc:51:add to attack-atk down"],name:"Active Attack Reduction Infliction Added to Attack",stat:j.atkDownInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDATKDOWN]},"proc:51:add to attack-def down":{id:G["proc:51:add to attack-def down"],name:"Active Defense Reduction Infliction Added to Attack",stat:j.defDownInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDDEFDOWN]},"proc:51:add to attack-rec down":{id:G["proc:51:add to attack-rec down"],name:"Active Recovery Reduction Infliction Added to Attack",stat:j.recDownInflict,stackType:K.Active,icons:()=>[M.BUFF_ADDRECDOWN]},"proc:52:bc efficacy":{id:G["proc:52:bc efficacy"],name:"Active BC Efficacy",stat:j.bcEfficacy,stackType:K.Active,icons:()=>[M.BUFF_BBFILL]},"proc:53:inflict on hit-poison":{id:G["proc:53:inflict on hit-poison"],name:"Active Poison Counter",stat:j.poisonCounter,stackType:K.Active,icons:()=>[M.BUFF_POISONCOUNTER]},"proc:53:inflict on hit-weak":{id:G["proc:53:inflict on hit-weak"],name:"Active Weak Counter",stat:j.weakCounter,stackType:K.Active,icons:()=>[M.BUFF_WEAKCOUNTER]},"proc:53:inflict on hit-sick":{id:G["proc:53:inflict on hit-sick"],name:"Active Sick Counter",stat:j.sickCounter,stackType:K.Active,icons:()=>[M.BUFF_SICKCOUNTER]},"proc:53:inflict on hit-injury":{id:G["proc:53:inflict on hit-injury"],name:"Active Injury Counter",stat:j.injuryCounter,stackType:K.Active,icons:()=>[M.BUFF_INJCONTER]},"proc:53:inflict on hit-curse":{id:G["proc:53:inflict on hit-curse"],name:"Active Curse Counter",stat:j.curseCounter,stackType:K.Active,icons:()=>[M.BUFF_CURSECOUNTER]},"proc:53:inflict on hit-paralysis":{id:G["proc:53:inflict on hit-paralysis"],name:"Active Paralysis Counter",stat:j.paralysisCounter,stackType:K.Active,icons:()=>[M.BUFF_PARALYCOUNTER]},"proc:54:critical damage boost":{id:G["proc:54:critical damage boost"],name:"Active Critical Damage Boost",stat:j.criticalDamage,stackType:K.Active,icons:()=>[M.BUFF_CRTUP]},"proc:55:elemental weakness damage-fire":{id:G["proc:55:elemental weakness damage-fire"],name:"Active Fire Elemental Damage Boost",stat:j.fireElementalDamage,stackType:K.Active,icons:()=>[M.BUFF_FIREDMGUP]},"proc:55:elemental weakness damage-water":{id:G["proc:55:elemental weakness damage-water"],name:"Active Water Elemental Damage Boost",stat:j.waterElementalDamage,stackType:K.Active,icons:()=>[M.BUFF_WATERDMGUP]},"proc:55:elemental weakness damage-earth":{id:G["proc:55:elemental weakness damage-earth"],name:"Active Earth Elemental Damage Boost",stat:j.earthElementalDamage,stackType:K.Active,icons:()=>[M.BUFF_EARTHDMGUP]},"proc:55:elemental weakness damage-thunder":{id:G["proc:55:elemental weakness damage-thunder"],name:"Active Thunder Elemental Damage Boost",stat:j.thunderElementalDamage,stackType:K.Active,icons:()=>[M.BUFF_THUNDERDMGUP]},"proc:55:elemental weakness damage-light":{id:G["proc:55:elemental weakness damage-light"],name:"Active Light Elemental Damage Boost",stat:j.lightElementalDamage,stackType:K.Active,icons:()=>[M.BUFF_LIGHTDMGUP]},"proc:55:elemental weakness damage-dark":{id:G["proc:55:elemental weakness damage-dark"],name:"Active Dark Elemental Damage Boost",stat:j.darkElementalDamage,stackType:K.Active,icons:()=>[M.BUFF_DARKDMGUP]},"proc:55:elemental weakness damage-unknown":{id:G["proc:55:elemental weakness damage-unknown"],name:"Active Elemental Damage Boost (Unspecified Element)",stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDMGUP]},"proc:56:chance ko resistance":{id:G["proc:56:chance ko resistance"],name:"KO Resistance (Chance)",stat:j.koResistance,stackType:K.Active,icons:()=>[M.BUFF_KOBLOCK]},"proc:57:bc drop resistance-base":{id:G["proc:57:bc drop resistance-base"],name:"Active Base Battle Crystal Drop Rate Reduction",stat:j.bcDropRate,stackType:K.Active,icons:()=>[M.BUFF_BCDOWN]},"proc:57:bc drop resistance-buff":{id:G["proc:57:bc drop resistance-buff"],name:"Active Buffed Battle Crystal Drop Rate Reduction",stat:j.bcDropRate,stackType:K.Active,icons:()=>[M.BUFF_BCDOWN]},"proc:57:hc drop resistance-base":{id:G["proc:57:hc drop resistance-base"],name:"Active Base Heart Crystal Drop Rate Reduction",stat:j.hcDropRate,stackType:K.Active,icons:()=>[M.BUFF_HCDOWN]},"proc:57:hc drop resistance-buff":{id:G["proc:57:hc drop resistance-buff"],name:"Active Buffed Heart Crystal Drop Rate Reduction",stat:j.hcDropRate,stackType:K.Active,icons:()=>[M.BUFF_HCDOWN]},"proc:58:spark vulnerability":{id:G["proc:58:spark vulnerability"],name:"Active Spark Vulnerability",stat:j.sparkDamage,stackType:K.Active,icons:()=>[M.BUFF_SPARKDMGUP]},"proc:59:attack reduction-bb":{id:G["proc:59:attack reduction-bb"],name:"Active BB ATK Reduction",stat:j.bbAtk,stackType:K.Active,icons:()=>[M.BUFF_BBATKDOWN]},"proc:59:attack reduction-sbb":{id:G["proc:59:attack reduction-sbb"],name:"Active SBB ATK Reduction",stat:j.bbAtk,stackType:K.Active,icons:()=>[M.BUFF_SBBATKDOWN]},"proc:59:attack reduction-ubb":{id:G["proc:59:attack reduction-ubb"],name:"Active UBB ATK Reduction",stat:j.bbAtk,stackType:K.Active,icons:()=>[M.BUFF_UBBATKDOWN]},"proc:61:party bb gauge-scaled attack":{id:G["proc:61:party bb gauge-scaled attack"],name:"Party BB Gauge-Scaled Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_BBGAUGESCALED:M.ATK_AOE_BBGAUGESCALED]},"proc:61:party bc drain":{id:G["proc:61:party bc drain"],name:"Party BB Gauge Drain (Post-Attack)",stat:j.bbGauge,stackType:K.Burst,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_BBGAUGESCALED:M.ATK_AOE_BBGAUGESCALED,M.BUFF_BBFILLDOWN]},"proc:62:barrier-fire":{id:G["proc:62:barrier-fire"],name:"Fire Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_FIRESHIELD]},"proc:62:barrier-water":{id:G["proc:62:barrier-water"],name:"Water Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_WATERSHIELD]},"proc:62:barrier-earth":{id:G["proc:62:barrier-earth"],name:"Earth Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_EARTHSHIELD]},"proc:62:barrier-thunder":{id:G["proc:62:barrier-thunder"],name:"Thunder Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_THUNDERSHIELD]},"proc:62:barrier-light":{id:G["proc:62:barrier-light"],name:"Light Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_LIGHTSHIELD]},"proc:62:barrier-dark":{id:G["proc:62:barrier-dark"],name:"Dark Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_DARKSHIELD]},"proc:62:barrier-all":{id:G["proc:62:barrier-all"],name:"Barrier (All Elements)",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_ELEMENTSHIELD]},"proc:62:barrier-unknown":{id:G["proc:62:barrier-unknown"],name:"Barrier (Unspecified Element)",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_ELEMENTSHIELD]},"proc:64:consecutive usage attack":{id:G["proc:64:consecutive usage attack"],name:"Consecutive Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_USAGESCALED:M.ATK_AOE_USAGESCALED]},"proc:65:ailment attack boost":{id:G["proc:65:ailment attack boost"],name:"Active Attack Boost on Status Afflicted Foes",stat:j.ailmentAttackBoost,stackType:K.Active,icons:()=>[M.BUFF_AILDMGUP]},"proc:66:chance revive":{id:G["proc:66:chance revive"],name:"Instant Revive (Chance)",stackType:K.Burst,icons:()=>[M.BUFF_KOBLOCK]},"proc:67:bc fill on spark":{id:G["proc:67:bc fill on spark"],name:"Active BC Fill on Spark",stat:j.bbGauge,stackType:K.Active,icons:()=>[M.BUFF_SPARKBBUP]},"proc:68:guard mitigation":{id:G["proc:68:guard mitigation"],name:"Active Guard Damage Reduction",stackType:K.Active,icons:()=>[M.BUFF_GUARDCUT]},"proc:69:bc fill on guard-percent":{id:G["proc:69:bc fill on guard-percent"],name:"Active BC Fill on Guard (Percentage)",stat:j.bbGauge,stackType:K.Active,icons:()=>[M.BUFF_GUARDBBUP]},"proc:69:bc fill on guard-flat":{id:G["proc:69:bc fill on guard-flat"],name:"Active BC Fill on Guard (Flat Amount)",stat:j.bbGauge,stackType:K.Active,icons:()=>[M.BUFF_GUARDBBUP]},"proc:71:bc efficacy reduction":{id:G["proc:71:bc efficacy reduction"],name:"Active BC Efficacy Reduction",stat:j.bcEfficacy,stackType:K.Active,icons:()=>[M.BUFF_BBFILLDOWN]},"proc:73:resist-atk down":{id:G["proc:73:resist-atk down"],name:"Active Attack Reduction Resistance",stat:j.atkDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTATKDOWN]},"proc:73:resist-def down":{id:G["proc:73:resist-def down"],name:"Active Defense Reduction Resistance",stat:j.defDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTDEFDOWN]},"proc:73:resist-rec down":{id:G["proc:73:resist-rec down"],name:"Active Recovery Reduction Resistance",stat:j.recDownResist,stackType:K.Burst,icons:()=>[M.BUFF_RESISTRECDOWN]},"proc:75:element squad-scaled attack":{id:G["proc:75:element squad-scaled attack"],name:"Element Squad-Scaled Damage",stackType:K.Attack,icons:e=>[e&&e.targetArea===g.Single?M.ATK_ST_ELEMENTSCALED:M.ATK_AOE_ELEMENTSCALED]},"proc:76:extra action":{id:G["proc:76:extra action"],name:"Active Extra Action",stat:j.extraAction,stackType:K.Active,icons:()=>[M.BUFF_DBLSTRIKE]},"proc:78:self stat boost-atk":{id:G["proc:78:self stat boost-atk"],name:"Active Self Attack Boost",stat:j.atk,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWNLOCK:M.BUFF_SELFATKUP]},"proc:78:self stat boost-def":{id:G["proc:78:self stat boost-def"],name:"Active Self Defense Boost",stat:j.def,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWNLOCK:M.BUFF_SELFDEFUP]},"proc:78:self stat boost-rec":{id:G["proc:78:self stat boost-rec"],name:"Active Self Recovery Boost",stat:j.rec,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWNLOCK:M.BUFF_SELFRECUP]},"proc:78:self stat boost-crit":{id:G["proc:78:self stat boost-crit"],name:"Active Self Critical Hit Rate Boost",stat:j.crit,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWNLOCK:M.BUFF_SELFCRTRATEUP]},"proc:79:player exp boost":{id:G["proc:79:player exp boost"],name:"Active Player EXP Boost",stat:j.expModification,stackType:K.Singleton,icons:()=>[M.BUFF_PLAYEREXP]},"proc:82:resummon":{id:G["proc:82:resummon"],name:"Resummon Unit",stackType:K.Burst,icons:()=>[M.BUFF_SUMMONUNIT]},"proc:83:spark critical":{id:G["proc:83:spark critical"],name:"Active Spark Critical",stat:j.sparkDamage,stackType:K.Active,icons:()=>[M.BUFF_SPARKCRTACTIVATED]},"proc:84:od fill rate":{id:G["proc:84:od fill rate"],name:"Active OD Gauge Fill Rate",stat:j.odGauge,stackType:K.Active,icons:()=>[M.BUFF_ODFILLBOOST]},"proc:85:heal on hit":{id:G["proc:85:heal on hit"],name:"Active Heal when Attacked (Chance)",stat:j.hpRecovery,stackType:K.Active,icons:()=>[M.BUFF_BEENATK_HPREC]},"proc:86:hp absorb":{id:G["proc:86:hp absorb"],name:"Active HP Absorption",stat:j.hpRecovery,stackType:K.Active,icons:()=>[M.BUFF_HPABS]},"proc:87:heal on spark":{id:G["proc:87:heal on spark"],name:"Active Heal on Spark (Chance)",stat:j.hpRecovery,stackType:K.Active,icons:()=>[M.BUFF_SPARK_HPREC]},"proc:88:self spark damage":{id:G["proc:88:self spark damage"],name:"Active Self Spark Damage Boost",stat:j.sparkDamage,stackType:K.Active,icons:e=>[e&&e.value&&e.value<0?M.BUFF_SPARKDMGDOWN2:M.BUFF_SPARKDMGUP2]},"proc:89:self converted-atk":{id:G["proc:89:self converted-atk"],name:"Active Self Converted Attack Boost",stat:j.atk,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_SELFCONVERTATKDOWN:M.BUFF_SELFCONVERTATKUP]},"proc:89:self converted-def":{id:G["proc:89:self converted-def"],name:"Active Self Converted Defense Boost",stat:j.def,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_SELFCONVERTDEFDOWN:M.BUFF_SELFCONVERTDEFUP]},"proc:89:self converted-rec":{id:G["proc:89:self converted-rec"],name:"Active Self Converted Recovery Boost",stat:j.rec,stackType:K.Active,icons:e=>[e&&e.value&&e.value.value&&e.value.value<0?M.BUFF_SELFCONVERTRECDOWN:M.BUFF_SELFCONVERTRECUP]},"proc:92:self max hp boost-flat":{id:G["proc:92:self max hp boost-flat"],name:"Self Max HP Boost (Flat Amount)",stat:j.hp,stackType:K.Singleton,icons:()=>[M.BUFF_SELFHPUP]},"proc:92:self max hp boost-percent":{id:G["proc:92:self max hp boost-percent"],name:"Self Max HP Boost (Percentage)",stat:j.hp,stackType:K.Singleton,icons:()=>[M.BUFF_SELFHPUP]},"proc:93:critical damage resistance-base":{id:G["proc:93:critical damage resistance-base"],name:"Active Base Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.Active,icons:()=>[M.BUFF_CRTDOWN]},"proc:93:critical damage resistance-buff":{id:G["proc:93:critical damage resistance-buff"],name:"Active Buffed Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.Active,icons:()=>[M.BUFF_CRTDOWN]},"proc:93:element damage resistance-base":{id:G["proc:93:element damage resistance-base"],name:"Active Base Elemental Weakness Damage Reduction",stat:j.elementalWeaknessDamageMitigation,stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDOWN]},"proc:93:element damage resistance-buff":{id:G["proc:93:element damage resistance-buff"],name:"Active Buffed Elemental Weakness Damage Reduction",stat:j.elementalWeaknessDamageMitigation,stackType:K.Active,icons:()=>[M.BUFF_ELEMENTDOWN]},"proc:93:spark damage resistance-base":{id:G["proc:93:spark damage resistance-base"],name:"Active Base Spark Damage Reduction",stat:j.sparkDamageMitigation,stackType:K.Active,icons:()=>[M.BUFF_SPARKDMGDOWN]},"proc:93:spark damage resistance-buff":{id:G["proc:93:spark damage resistance-buff"],name:"Active Buffed Spark Damage Reduction",stat:j.sparkDamageMitigation,stackType:K.Active,icons:()=>[M.BUFF_SPARKDMGDOWN]},"proc:94:aoe normal attack":{id:G["proc:94:aoe normal attack"],name:"Active Normal Attacks Hit All Foes",stat:j.aoeNormalAttack,stackType:K.Active,icons:()=>[M.BUFF_AOEATK]},"proc:95:sphere lock":{id:G["proc:95:sphere lock"],name:"Active Sphere Lock",stat:j.buffStabilityModification,stackType:K.Active,icons:()=>[M.BUFF_NULLSPHERE]},"proc:96:es lock":{id:G["proc:96:es lock"],name:"Active Extra Skill Lock",stat:j.buffStabilityModification,stackType:K.Active,icons:()=>[M.BUFF_NULLES]},"proc:97:element specific attack":{id:G["proc:97:element specific attack"],name:"Element Target Damage",stackType:K.Attack,icons:e=>{let a;a=e&&e.conditions&&e.conditions.targetElements&&e.conditions.targetElements.length>0?e.conditions.targetElements:[W.Unknown];const t=a.map(e=>{let a=`BUFF_${("string"==typeof e?e:"").toUpperCase()}DMGUP`;return a in M||(a="BUFF_ELEMENTDMGUP"),M[a]});return[e&&e.targetArea===g.Single?M.ATK_ST:M.ATK_AOE].concat(t)}},UNKNOWN_CONDITIONAL_EFFECT_ID:{id:G.UNKNOWN_CONDITIONAL_EFFECT_ID,name:"Unknown Conditional Effect",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},UNKNOWN_CONDITIONAL_BUFF_PARAMS:{id:G.UNKNOWN_CONDITIONAL_BUFF_PARAMS,name:"Unknown Conditional Buff Parameters",stackType:K.Unknown,icons:()=>[M.UNKNOWN]},"conditional:1:attack buff":{id:G["conditional:1:attack buff"],name:"Conditional Attack Boost",stat:j.atk,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"conditional:3:defense buff":{id:G["conditional:3:defense buff"],name:"Conditional Defense Boost",stat:j.def,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"conditional:5:recovery buff":{id:G["conditional:5:recovery buff"],name:"Conditional Recovery Boost",stat:j.rec,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"conditional:7:critical hit rate buff":{id:G["conditional:7:critical hit rate buff"],name:"Conditional Critical Hit Rate Boost",stat:j.crit,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]},"conditional:8:gradual heal":{id:G["conditional:8:gradual heal"],name:"Conditional Gradual Heal",stat:j.hpRecovery,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_HPREC]},"conditional:12:guaranteed ko resistance":{id:G["conditional:12:guaranteed ko resistance"],name:"Conditional Guaranteed KO Resistance",stat:j.koResistance,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_KOBLK]}}),(()=>{const e=e=>a=>{let t="",i="UP";a&&(a.value&&a.value<0&&(i="DOWN"),a.conditions&&a.conditions.targetElements&&(t=a.conditions.targetElements[0])),"string"!=typeof t&&(t="");let s=`BUFF_${t.toUpperCase()}${e}${i}`;return t&&s in M||(s=`BUFF_ELEMENT${e}${i}`),[M[s]]};return{"conditional:13:elemental attack buff":{id:G["conditional:13:elemental attack buff"],name:"Passive Elemental Attack Boost",stat:j.atk,stackType:K.ConditionalTimed,icons:e("ATK")},"conditional:14:elemental defense buff":{id:G["conditional:14:elemental defense buff"],name:"Passive Elemental Defense Boost",stat:j.def,stackType:K.ConditionalTimed,icons:e("DEF")}}})()),{"conditional:21:fire mitigation":{id:G["conditional:21:fire mitigation"],name:"Conditional Fire Damage Reduction",stat:j.fireMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_FIREDMGDOWN]},"conditional:22:water mitigation":{id:G["conditional:22:water mitigation"],name:"Conditional Water Damage Reduction",stat:j.waterMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_WATERDMGDOWN]},"conditional:23:earth mitigation":{id:G["conditional:23:earth mitigation"],name:"Conditional Earth Damage Reduction",stat:j.earthMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_EARTHDMGDOWN]},"conditional:24:thunder mitigation":{id:G["conditional:24:thunder mitigation"],name:"Conditional Thunder Damage Reduction",stat:j.thunderMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_THUNDERDMGDOWN]},"conditional:25:light mitigation":{id:G["conditional:25:light mitigation"],name:"Conditional Light Damage Reduction",stat:j.lightMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_LIGHTDMGDOWN]},"conditional:26:dark mitigation":{id:G["conditional:26:dark mitigation"],name:"Conditional Dark Damage Reduction",stat:j.darkMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_DARKDMGDOWN]},"conditional:36:mitigation":{id:G["conditional:36:mitigation"],name:"Conditional Damage Reduction",stat:j.mitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_DAMAGECUT]},"conditional:37:gradual bc fill":{id:G["conditional:37:gradual bc fill"],name:"Conditional Gradual BC Fill",stat:j.bbGauge,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_BBREC]},"conditional:40:spark damage":{id:G["conditional:40:spark damage"],name:"Conditional Spark Damage Boost",stat:j.sparkDamage,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_SPARKDOWN:M.BUFF_SPARKUP]},"conditional:51:add fire element":{id:G["conditional:51:add fire element"],name:"Conditional Added Fire Element to Attack",stat:j.elementModification,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDFIRE]},"conditional:52:add water element":{id:G["conditional:52:add water element"],name:"Conditional Added Water Element to Attack",stat:j.elementModification,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDWATER]},"conditional:53:add earth element":{id:G["conditional:53:add earth element"],name:"Conditional Added Earth Element to Attack",stat:j.elementModification,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDEARTH]},"conditional:54:add thunder element":{id:G["conditional:54:add thunder element"],name:"Conditional Added Thunder Element to Attack",stat:j.elementModification,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDTHUNDER]},"conditional:55:add light element":{id:G["conditional:55:add light element"],name:"Conditional Added Light Element to Attack",stat:j.elementModification,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDLIGHT]},"conditional:56:add dark element":{id:G["conditional:56:add dark element"],name:"Conditional Added Dark Element to Attack",stat:j.elementModification,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDDARK]},"conditional:72:attack boost-bb":{id:G["conditional:72:attack boost-bb"],name:"Conditional BB ATK Boost",stat:j.bbAtk,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_BBATKUP]},"conditional:72:attack boost-sbb":{id:G["conditional:72:attack boost-sbb"],name:"Conditional SBB ATK Boost",stat:j.bbAtk,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_SBBATKUP]},"conditional:72:attack boost-ubb":{id:G["conditional:72:attack boost-ubb"],name:"Conditional UBB ATK Boost",stat:j.bbAtk,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_UBBATKUP]},"conditional:74:add atk down to attack":{id:G["conditional:74:add atk down to attack"],name:"Conditional Attack Reduction Infliction Added to Attack",stat:j.atkDownInflict,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDATKDOWN]},"conditional:75:add def down to attack":{id:G["conditional:75:add def down to attack"],name:"Conditional Defense Reduction Infliction Added to Attack",stat:j.defDownInflict,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ADDDEFDOWN]},"conditional:84:critical damage":{id:G["conditional:84:critical damage"],name:"Conditional Critical Damage Boost",stat:j.criticalDamage,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_CRTUP]},"conditional:91:chance ko resistance":{id:G["conditional:91:chance ko resistance"],name:"Conditional KO Resistance (Chance)",stat:j.koResistance,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_KOBLOCK]},"conditional:98:thunder barrier":{id:G["conditional:98:thunder barrier"],name:"Thunder Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_THUNDERSHIELD]},"conditional:99:light barrier":{id:G["conditional:99:light barrier"],name:"Conditional Light Barrier",stat:j.barrier,stackType:K.Singleton,icons:()=>[M.BUFF_LIGHTSHIELD]},"conditional:111:bc fill on spark":{id:G["conditional:111:bc fill on spark"],name:"Conditional BC Fill on Spark",stat:j.bbGauge,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_SPARKBBUP]},"conditional:124:self attack buff":{id:G["conditional:124:self attack buff"],name:"Conditional Self Attack Boost",stat:j.atk,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_ATKDOWNLOCK:M.BUFF_SELFATKUP]},"conditional:125:self defense buff":{id:G["conditional:125:self defense buff"],name:"Conditional Self Defense Boost",stat:j.def,stackType:K.ConditionalTimed,icons:e=>[e&&e.value&&e.value<0?M.BUFF_DEFDOWNLOCK:M.BUFF_SELFDEFUP]},"conditional:131:spark critical":{id:G["conditional:131:spark critical"],name:"Conditional Spark Critical",stat:j.sparkDamage,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_SPARKCRTACTIVATED]},"conditional:132:od fill rate":{id:G["conditional:132:od fill rate"],name:"Conditional OD Gauge Fill Rate",stat:j.odGauge,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ODFILLBOOST]},"conditional:133:heal on hit":{id:G["conditional:133:heal on hit"],name:"Conditional Heal when Attacked (Chance)",stat:j.hpRecovery,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_BEENATK_HPREC]},"conditional:143:critical damage reduction-base":{id:G["conditional:143:critical damage reduction-base"],name:"Conditional Base Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_CRTDOWN]},"conditional:143:critical damage reduction-buff":{id:G["conditional:143:critical damage reduction-buff"],name:"Conditional Buffed Critical Damage Reduction",stat:j.criticalDamageMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_CRTDOWN]},"conditional:144:spark damage reduction-base":{id:G["conditional:144:spark damage reduction-base"],name:"Conditional Base Spark Damage Reduction",stat:j.sparkDamageMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_SPARKDMGDOWN]},"conditional:144:spark damage reduction-buff":{id:G["conditional:144:spark damage reduction-buff"],name:"Conditional Buffed Spark Damage Reduction",stat:j.sparkDamageMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_SPARKDMGDOWN]},"conditional:145:elemental weakness damage reduction-base":{id:G["conditional:145:elemental weakness damage reduction-base"],name:"Conditional Base Elemental Weakness Damage Reduction",stat:j.elementalWeaknessDamageMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ELEMENTDOWN]},"conditional:145:elemental weakness damage reduction-buff":{id:G["conditional:145:elemental weakness damage reduction-buff"],name:"Conditional Buffed Elemental Weakness Damage Reduction",stat:j.elementalWeaknessDamageMitigation,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_ELEMENTDOWN]},"conditional:153:chance inflict atk down on hit":{id:G["conditional:153:chance inflict atk down on hit"],name:"Conditional Attack Reduction Counter (Chance)",stat:j.atkDownCounter,stackType:K.ConditionalTimed,icons:()=>[M.BUFF_PROB_ATKREDUC]},"conditional:10001:stealth":{id:G["conditional:10001:stealth"],name:"Conditional Stealth",stat:j.targetingModification,stackType:K.ConditionalTimed,icons:()=>[M.SG_BUFF_STEALTH]},"conditional:10001:stealth-atk":{id:G["conditional:10001:stealth-atk"],name:"Conditional Attack Boost (from Stealth)",stat:j.atk,stackType:K.ConditionalTimed,icons:e=>[M.SG_BUFF_STEALTH,e&&e.value&&e.value<0?M.BUFF_ATKDOWN:M.BUFF_ATKUP]},"conditional:10001:stealth-def":{id:G["conditional:10001:stealth-def"],name:"Conditional Defense Boost (from Stealth)",stat:j.def,stackType:K.ConditionalTimed,icons:e=>[M.SG_BUFF_STEALTH,e&&e.value&&e.value<0?M.BUFF_DEFDOWN:M.BUFF_DEFUP]},"conditional:10001:stealth-rec":{id:G["conditional:10001:stealth-rec"],name:"Conditional Recovery Boost (from Stealth)",stat:j.rec,stackType:K.ConditionalTimed,icons:e=>[M.SG_BUFF_STEALTH,e&&e.value&&e.value<0?M.BUFF_RECDOWN:M.BUFF_RECUP]},"conditional:10001:stealth-crit":{id:G["conditional:10001:stealth-crit"],name:"Conditional Critical Hit Rate Boost (from Stealth)",stat:j.crit,stackType:K.ConditionalTimed,icons:e=>[M.SG_BUFF_STEALTH,e&&e.value&&e.value<0?M.BUFF_CRTRATEDOWN:M.BUFF_CRTRATEUP]},"conditional:10500:shield-all":{id:G["conditional:10500:shield-all"],name:"Non-Elemental Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_ALL]},"conditional:10500:shield-fire":{id:G["conditional:10500:shield-fire"],name:"Fire Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_FIRE]},"conditional:10500:shield-water":{id:G["conditional:10500:shield-water"],name:"Water Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_WATER]},"conditional:10500:shield-earth":{id:G["conditional:10500:shield-earth"],name:"Earth Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_EARTH]},"conditional:10500:shield-thunder":{id:G["conditional:10500:shield-thunder"],name:"Thunder Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_THUNDER]},"conditional:10500:shield-light":{id:G["conditional:10500:shield-light"],name:"Light Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_LIGHT]},"conditional:10500:shield-dark":{id:G["conditional:10500:shield-dark"],name:"Dark Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_DARK]},"conditional:10500:shield-unknown":{id:G["conditional:10500:shield-unknown"],name:"Dark Shield",stat:j.shield,stackType:K.Singleton,icons:()=>[M.SG_BUFF_UNKNOWN]}}));var le=Object.freeze({__proto__:null,convertProcEffectToBuffs:se,convertPassiveEffectToBuffs:function(e,a){if(!e||"object"!=typeof e)throw new TypeError("effect parameter should be an object");if(!a||"object"!=typeof a)throw new TypeError("context parameter should be an object");const i=H(e)&&t(e),n=i&&oe(a.reloadMapping).get(i);return"function"==typeof n?n(e,a):function(e,a){const i=H(e)&&t(e)||s.Unknown;return[{id:G.UNKNOWN_PASSIVE_EFFECT_ID,originalId:i,sources:V(a)}]}(e,a)},convertConditionalEffectToBuffs:ce,get BuffSource(){return L},get BuffStackType(){return K},BUFF_METADATA:re,getMetadataForBuff:function(e,a=re){return a&&"object"==typeof a&&Object.hasOwnProperty.call(a,e)?a[e]:void 0}}),de=Object.freeze({__proto__:null,constants:o,parsers:le,getMetadataForProc:d,getMetadataForPassive:O,isAttackingProcId:p,getNameForProc:N,getNameForPassive:C,isProcEffect:S,isPassiveEffect:H,combineEffectsAndDamageFrames:function(e,a){let t=[];return Array.isArray(e)&&e.length>0&&Array.isArray(a)&&e.length===a.length&&(t=e.map((e,t)=>{const i=a[t];return{delay:e["effect delay time(ms)/frame"],effect:e,frames:i,id:""+(e["proc id"]||e["unknown proc id"]),targetArea:e["random attack"]?g.Random:e["target area"],targetType:e["target type"]}})),t},getEffectId:t,getEffectName:function(e,a={}){let i="";const s=t(e);return H(e)?i=C(s,a&&a.passive):S(e)&&(i=N(s,a&&a.proc)),i},get ProcBuffType(){return c},PASSIVE_METADATA:r,PROC_METADATA:l});var pe=Object.freeze({__proto__:null,getEffectsForExtraSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var fe=Object.freeze({__proto__:null,getEffectsForItem:function(e){let a=[];if(e&&e.effect)if(Array.isArray(e.effect))a=e.effect;else if(Array.isArray(e.effect.effect)){const{effect:t,target_area:i,target_type:s}=e.effect;a=t.map(e=>{const a=Object.assign({},e);return a["target area"]=i,a["target type"]=s,a})}return a},getItemImageUrl:function(e,a){return`${e||""}/item/${a||""}`}});var ue=Object.freeze({__proto__:null,getEffectsForLeaderSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var Fe=Object.freeze({__proto__:null,getUnitImageFileNames:function(e,a=""){const t=`${e||""}${a||""}.png`;return{spritesheet:"unit_anime_"+t,battleAvatar:"unit_ills_battle_"+t,guideAvatar:"unit_ills_thum_"+t,fullIllustration:"unit_ills_full_"+t}},getUnitImageUrl:function(e,a){return`${e||""}/unit/img/${a||""}`}});const ge="A".charCodeAt(0),me="a".charCodeAt(0),De="0".charCodeAt(0);function ve(e){return"string"==typeof e&&e.split("@")[1]||e}var Ee=Object.freeze({__proto__:null,getEffectsForSpEnhancement:function(e){const a=[];if(e&&e.skill&&Array.isArray(e.skill.effects)){e.skill.effects.forEach(e=>{Object.keys(e).forEach(t=>{const i=e[t],s=Object.assign(Object.assign({},i),{sp_type:t});a.push(s)})})}return a},getSpCategoryName:function(e){let a;switch(+e){case 1:a=T["Parameter Boost"];break;case 2:a=T.Spark;break;case 3:a=T["Critical Hits"];break;case 4:a=T["Attack Boost"];break;case 5:a=T["BB Gauge"];break;case 6:a=T["HP Recovery"];break;case 7:a=T.Drops;break;case 8:a=T["Ailment Resistance"];break;case 9:a=T["Ailment Infliction"];break;case 10:a=T["Damage Reduction"];break;case 11:a=T.Special;break;default:a=T.Unknown}return a},spIndexToCode:function(e){let a="",t=-1;return Number.isInteger(e)&&(e>=0&&e<=25?t=e+ge:e>=26&&e<=51?t=e-26+me:e>=52&&e<=61&&(t=e-52+De)),-1!==t&&(a=String.fromCharCode(t)),a},spCodeToIndex:function(e){let a=-1,t=-1;return e&&"string"==typeof e&&1===e.length&&(e>="A"&&e<="Z"?t=ge:e>="a"&&e<="z"?t=me-26:e>="0"&&e<="9"&&(t=De-52)),-1!==t&&(a=e.charCodeAt(0)-t),a},getSpEntryId:ve,getSpEntryWithId:function(e,a){const t=ve(e);return e&&Array.isArray(a)&&a.find(e=>ve(e&&e.id)===t)||void 0},getAllDependenciesForSpEntry:function e(a,t,i=new Set){let s=[];if(a&&a.dependency&&Array.isArray(t)&&t.length>0){const n=ve(a.dependency),c=t.find(e=>ve(e&&e.id)===n);if(c&&!i.has(c)){i.add(c);const a=e(c,t,i);s=[c].concat(a)}}return s},getAllEntriesThatDependOnSpEntry:function e(a,t,i=new Set){let s=[];if(a&&a.id&&Array.isArray(t)&&t.length>0){const n=a.id;s=t.filter(e=>e.dependency&&e.dependency.includes(n)&&!i.has(e)),s.forEach(a=>{i.add(a);const n=e(a,t,i);s=s.concat(n)})}return s}});return e.buffs=de,e.bursts=P,e.datamineTypes=x,e.extraSkills=pe,e.items=fe,e.leaderSkills=ue,e.spEnhancements=Ee,e.units=Fe,e.version="0.7.0",e}({});
//# sourceMappingURL=index.browser.min.js.map
