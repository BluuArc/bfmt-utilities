{"version":3,"sources":["index.browser.min.js","index.browser.js","buff-metadata.js","datamine-types.js","buffs.js","constants.js","bursts.js","extra-skills.js","items.js","leader-skills.js","units.js","sp-enhancements.js","index.js","version.js"],"names":["bfmtUtilities","ProcBuffType","PASSIVE_METADATA","Object","freeze","1","ID","Name","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","19","20","21","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","52","53","55","58","59","61","62","63","64","65","66","69","70","71","72","73","74","75","77","78","79","80","81","82","84","85","86","88","89","90","91","92","93","96","97","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","127","128","143","10008","11004","11005","11006","11009","66,1","PROC_METADATA","0","Type","18","22","51","54","56","57","60","67","68","76","83","87","94","95","119","123","126","130","131","132","901","902","903","905","906","907","908","10000","10001","10002","10003","10004","10005","10006","10007","10009","10012","10015","10016","10017","10018","10019","10020","10021","10022","10023","10025","10026","11000","11001","11002","11003","70001","70002","2-5","ArenaCondition","MoveType","TargetArea","TargetAreaShorthand","TargetType","SpPassiveType","SphereTypeName","SphereTypeId","SpCategoryName","SpCategoryId","UnitAnimationKey","UnitElement","UnitGender","UnitGettingType","UnitKind","UnitType","ItemType","MimicUnitIds","MimicMonsterGroupMapping","1000","Mimic","1100","BatMimic","1101","1200","DragonMimic","1300","MetalMimic","datamineTypes","__proto__","getMetadataForProc","id","hasOwnProperty","call","getMetadataForPassive","isAttackingProcId","metadataEntry","Attack","getNameForProc","getNameForPassive","isProcEffect","effect","isPassiveEffect","getEffectId","resultId","KNOWN_PROC_ID","KNOWN_PASSIVE_ID","buffs","combineEffectsAndDamageFrames","effects","damageFrames","combinedEntries","Array","isArray","length","map","i","correspondingFrameEntry","delay","frames","concat","targetArea","Random","targetType","getEffectName","resultName","effectId","getLevelEntryForBurst","burst","level","burstEffectsByLevel","levels","levelIndex","isNaN","bursts","getEffectsForBurst","levelEntry","getExtraAttackDamageFramesEntry","effectDelay","unifiedFrames","filter","frame","procId","BurstHeal","reduce","acc","frameEntry","index","keepFirstFrame","numFrames","damageDistribution","frameTimes","frameIndex","push","damage","time","resultDamageFramesEntry","effect delay time(ms)/frame","frame times","hit dmg% distribution","hit dmg% distribution (total)","hits","sort","a","b","forEach","extraSkills","getEffectsForExtraSkill","skill","items","getEffectsForItem","item","result","target_area","target_type","e","fullProcEffect","assign","getItemImageUrl","baseContentUrl","fileName","leaderSkills","getEffectsForLeaderSkill","units","getUnitImageFileNames","suffix","fileNameSuffix","spritesheet","battleAvatar","guideAvatar","fullIllustration","getUnitImageUrl","CHARACTER_CODE_FOR_UPPERCASE_A","charCodeAt","CHARACTER_CODE_FOR_LOWERCASE_A","CHARACTER_CODE_FOR_NUMBER_0","getSpEntryId","split","spEnhancements","getEffectsForSpEnhancement","entry","effectWrapper","keys","spType","originalEffect","unwrappedEffect","sp_type","getSpCategoryName","categoryId","Spark","Drops","Special","Unknown","spIndexToCode","correspondingCharacterCode","Number","isInteger","String","fromCharCode","spCodeToIndex","code","characterCodeOffset","getSpEntryWithId","entries","spId","find","getAllDependenciesForSpEntry","allEntries","addedEntries","Set","dependencies","dependency","dependencyId","dependencyEntry","s","has","add","subDependencies","getAllEntriesThatDependOnSpEntry","dependents","entryId","includes","dependent","subDependents","version"],"mappings":"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","file":"index.browser.min.js","sourcesContent":["\"use strict\";var bfmtUtilities=function(){var e;!function(e){e.Attack=\"Attack\"}(e||(e={}));const a=Object.freeze({1:{ID:\"1\",Name:\"Parameter Boost\"},2:{ID:\"2\",Name:\"Elemental Parameter Boost\"},3:{ID:\"3\",Name:\"Type-Based Parameter Boost\"},4:{ID:\"4\",Name:\"Status Negation\"},5:{ID:\"5\",Name:\"Elemental Damage Reduction\"},6:{ID:\"6\",Name:\"\"},7:{ID:\"7\",Name:\"\"},8:{ID:\"8\",Name:\"Damage Reduction\"},9:{ID:\"9\",Name:\"Gradual BB Gauge Boost\"},10:{ID:\"10\",Name:\"HC Efficacy\"},11:{ID:\"11\",Name:\"HP-Conditional Parameter Boost\"},12:{ID:\"12\",Name:\"HP-Conditional Drop Rate Boost\"},13:{ID:\"13\",Name:\"BC Fill on Enemy Defeat\"},14:{ID:\"14\",Name:\"Damage Reduction (Chance)\"},15:{ID:\"15\",Name:\"Heal on Enemy Defeat\"},16:{ID:\"16\",Name:\"Heal on Battle Victory\"},17:{ID:\"17\",Name:\"HP Absorption\"},19:{ID:\"19\",Name:\"Drop Rate Boost\"},20:{ID:\"20\",Name:\"Status Infliction\"},21:{ID:\"21\",Name:\"Parameter Boost for First X Turns\"},23:{ID:\"23\",Name:\"BC Fill on Battle Victory\"},24:{ID:\"24\",Name:\"Heal when Attacked (Chance)\"},25:{ID:\"25\",Name:\"BC Fill when Hit (Chance)\"},26:{ID:\"26\",Name:\"Damage Counter (Chance)\"},27:{ID:\"27\",Name:\"Increased Target Chance\"},28:{ID:\"28\",Name:\"Decreased Target Chance\"},29:{ID:\"29\",Name:\"Defense Ignore (Chance)\"},30:{ID:\"30\",Name:\"BB Conditional Parameter Boost\"},31:{ID:\"31\",Name:\"Spark Damage Boost, Boost Drop Rate on Spark\"},32:{ID:\"32\",Name:\"BC Efficacy\"},33:{ID:\"33\",Name:\"Heal over Time\"},34:{ID:\"34\",Name:\"Critical Damage Boost\"},35:{ID:\"35\",Name:\"BC Fill when Normal Attacking\"},36:{ID:\"36\",Name:\"Extra Action\"},37:{ID:\"37\",Name:\"Hit Count Boost\"},38:{ID:\"38\",Name:\"\"},39:{ID:\"39\",Name:\"\"},40:{ID:\"40\",Name:\"Parameter Conversion\"},41:{ID:\"41\",Name:\"Unique Element Count Conditional Parameter Boost\"},42:{ID:\"42\",Name:\"Gender Parameter Boost\"},43:{ID:\"43\",Name:\"Damage Reduction to 1\"},44:{ID:\"44\",Name:\"Flat Parameter Boost\"},45:{ID:\"45\",Name:\"Critical Damage Negation\"},46:{ID:\"46\",Name:\"Parameter Boost Relative to HP Remainaing\"},47:{ID:\"47\",Name:\"BC Fill on Spark\"},48:{ID:\"48\",Name:\"BC Cost Reduction\"},49:{ID:\"49\",Name:\"BB Gauge Consumption Reduction\"},50:{ID:\"50\",Name:\"Elemental Damage Boost\"},52:{ID:\"52\",Name:\"\"},53:{ID:\"53\",Name:\"Critical/Elemental Weakness Damage Negation\"},55:{ID:\"55\",Name:\"Conditional Effect based on HP Threshold\"},58:{ID:\"58\",Name:\"Damage Reduction when Guarding\"},59:{ID:\"59\",Name:\"BC Fill when Attacked when Guarding\"},61:{ID:\"61\",Name:\"BC Fill on Guard\"},62:{ID:\"62\",Name:\"Elemental Damage Reduction\"},63:{ID:\"63\",Name:\"Elemental Damage Reduction for first X Turns\"},64:{ID:\"64\",Name:\"BB Atk Boost\"},65:{ID:\"65\",Name:\"BC Fill on Critical\"},66:{ID:\"66\",Name:\"Add buff to Brave Burst\"},69:{ID:\"69\",Name:\"Chance KO Resistance (Angel Idol)\"},70:{ID:\"70\",Name:\"OD Gauge Fill Rate Boost\"},71:{ID:\"71\",Name:\"Status Counter\"},72:{ID:\"72\",Name:\"Turn End Effects Activate at Turn Start\"},73:{ID:\"73\",Name:\"Parameter Reduction Negation\"},74:{ID:\"74\",Name:\"Attack Boost on Status Afflicted Foes\"},75:{ID:\"75\",Name:\"Spark Vulnerability\"},77:{ID:\"77\",Name:\"Spark Damage Reduction\"},78:{ID:\"78\",Name:\"Conditional Effect after Damage Received Threshold\"},79:{ID:\"79\",Name:\"BC Fill after Damage Received Threshold\"},80:{ID:\"80\",Name:\"Conditional Effect after Damage Dealt Threshold\"},81:{ID:\"81\",Name:\"BC Fill after Damage Dealt Threshold\"},82:{ID:\"82\",Name:\"Conditional Effect after BC Received Threshold\"},84:{ID:\"84\",Name:\"Conditional Effect after HC Received Threshold\"},85:{ID:\"85\",Name:\"BC Fill after HC Received Threshold\"},86:{ID:\"86\",Name:\"Conditional Effect after Spark Threshold\"},88:{ID:\"88\",Name:\"Conditional Effect on Guard\"},89:{ID:\"89\",Name:\"Conditional Effect on Critical\"},90:{ID:\"90\",Name:\"Status Infliction on Critical\"},91:{ID:\"91\",Name:\"\"},92:{ID:\"92\",Name:\"Negate Defense Ignore\"},93:{ID:\"93\",Name:\"Added Elements\"},96:{ID:\"96\",Name:\"Normal Attacks Hit All Foes\"},97:{ID:\"97\",Name:\"Player EXP Boost\"},99:{ID:\"99\",Name:\"\"},100:{ID:\"100\",Name:\"Spark Critical\"},101:{ID:\"101\",Name:\"Heal on Spark\"},102:{ID:\"102\",Name:\"Added Elements\"},103:{ID:\"103\",Name:\"BB Atk Boost when HP Passes Threshold\"},104:{ID:\"104\",Name:\"Spark Boost when HP Passes Threshold\"},105:{ID:\"105\",Name:\"Turn-Based Parameter Boost\"},106:{ID:\"106\",Name:\"Conditional Effect after Activating Overdrive\"},107:{ID:\"107\",Name:\"Add Effect to Leader Skill\"},109:{ID:\"109\",Name:\"BB Gauge Reduction (Chance)\"},110:{ID:\"110\",Name:\"BC Efficacy Reduction (Chance)\"},111:{ID:\"111\",Name:\"Increase Brave Burst Activation Rate\"},112:{ID:\"112\",Name:\"ABP/CBP Boost\"},113:{ID:\"113\",Name:\"Conditional Effect after HP Threshold\"},114:{ID:\"114\",Name:\"Inflict Buff when Attacked\"},127:{ID:\"127\",Name:\"Additional Damage (Damage over Time) Reduction\"},128:{ID:\"128\",Name:\"Damage Reduction from Normal Attacks\"},143:{ID:\"143\",Name:\"Break Atk Parameter Limit\"},10008:{ID:\"10008\",Name:\"Damage Reduction from Specific Sources\"},11004:{ID:\"11004\",Name:\"Elemental Spark Damage Boost\"},11005:{ID:\"11005\",Name:\"Elemental Critical Damage Boost\"},11006:{ID:\"11006\",Name:\"Summoner EXP Boost\"},11009:{ID:\"11009\",Name:\"Effect Duration Boost\"},\"66,1\":{ID:\"66,1\",Name:\"\"}}),t=Object.freeze({0:{ID:\"0\",Name:\"\",Type:\"\"},1:{ID:\"1\",Name:\"Regular Damage\",Type:\"Attack\"},2:{ID:\"2\",Name:\"Burst Heal\",Type:\"\"},3:{ID:\"3\",Name:\"Heal over Time\",Type:\"\"},4:{ID:\"4\",Name:\"BB Gauge Refill\",Type:\"\"},5:{ID:\"5\",Name:\"Parameter Boost\",Type:\"\"},6:{ID:\"6\",Name:\"Drop Rate\",Type:\"\"},7:{ID:\"7\",Name:\"Guaranteed KO Resistance (Angel Idol)\",Type:\"\"},8:{ID:\"8\",Name:\"Max HP Boost\",Type:\"\"},9:{ID:\"9\",Name:\"Parameter Reduction\",Type:\"\"},10:{ID:\"10\",Name:\"Status Cleanse\",Type:\"\"},11:{ID:\"11\",Name:\"Status Infliction\",Type:\"\"},12:{ID:\"12\",Name:\"Revive (Guaranteed)\",Type:\"\"},13:{ID:\"13\",Name:\"Random Target Damage\",Type:\"Attack\"},14:{ID:\"14\",Name:\"Lifesteal Damage\",Type:\"Attack\"},16:{ID:\"16\",Name:\"Elemental Damage Reduction\",Type:\"\"},17:{ID:\"17\",Name:\"Status Negation\",Type:\"\"},18:{ID:\"18\",Name:\"Damage Reduction\",Type:\"\"},19:{ID:\"19\",Name:\"Gradual BB Gauge Boost\",Type:\"\"},20:{ID:\"20\",Name:\"BC Fill on Hit\",Type:\"\"},22:{ID:\"22\",Name:\"Defense Ignore\",Type:\"\"},23:{ID:\"23\",Name:\"Spark Boost\",Type:\"\"},24:{ID:\"24\",Name:\"Parameter Conversion\",Type:\"\"},26:{ID:\"26\",Name:\"Hit Count Boost\",Type:\"\"},27:{ID:\"27\",Name:\"Proportional Damage\",Type:\"Attack\"},28:{ID:\"28\",Name:\"Fixed Damage\",Type:\"Attack\"},29:{ID:\"29\",Name:\"Multi-Element Damage\",Type:\"Attack\"},30:{ID:\"30\",Name:\"Add Elements\",Type:\"\"},31:{ID:\"31\",Name:\"Instant BB Gauge Fill\",Type:\"\"},32:{ID:\"32\",Name:\"Element Shift\",Type:\"\"},33:{ID:\"33\",Name:\"Buff Removal (Chance)\",Type:\"\"},34:{ID:\"34\",Name:\"BB Gauge Reduction (Chance)\",Type:\"\"},36:{ID:\"36\",Name:\"Leader Skill Lock (Chance)\",Type:\"\"},37:{ID:\"37\",Name:\"Summon Unit\",Type:\"\"},38:{ID:\"38\",Name:\"Status Cure\",Type:\"\"},39:{ID:\"39\",Name:\"Elemental Damage Reduction\",Type:\"\"},40:{ID:\"40\",Name:\"Status Infliction Added to Attack\",Type:\"\"},42:{ID:\"42\",Name:\"\",Type:\"\"},43:{ID:\"43\",Name:\"Instant OD Fill\",Type:\"\"},44:{ID:\"44\",Name:\"Damage over Time (Additional Damage)\",Type:\"\"},45:{ID:\"45\",Name:\"BB Atk Boost\",Type:\"\"},46:{ID:\"46\",Name:\"Non-Lethal Proportional Damage\",Type:\"Attack\"},47:{ID:\"47\",Name:\"HP Scaled Damage\",Type:\"Attack\"},48:{ID:\"48\",Name:\"Piercing Proportional Damage\",Type:\"Attack\"},49:{ID:\"49\",Name:\"Retire\",Type:\"\"},50:{ID:\"50\",Name:\"Damage Counter\",Type:\"\"},51:{ID:\"51\",Name:\"Parameter Reduction Added to Attack\",Type:\"\"},52:{ID:\"52\",Name:\"BC Efficacy\",Type:\"\"},53:{ID:\"53\",Name:\"Status Counter\",Type:\"\"},54:{ID:\"54\",Name:\"Critical Damage Boost\",Type:\"\"},55:{ID:\"55\",Name:\"Elemental Damage Boost\",Type:\"\"},56:{ID:\"56\",Name:\"Chance KO Resistance (Angel Idol)\",Type:\"\"},57:{ID:\"57\",Name:\"BC Efficacy Reduction\",Type:\"\"},58:{ID:\"58\",Name:\"Spark Vulnerability\",Type:\"\"},59:{ID:\"59\",Name:\"BB Atk Reduction\",Type:\"\"},60:{ID:\"60\",Name:\"\",Type:\"\"},61:{ID:\"61\",Name:\"BB-Scaled Damage\",Type:\"Attack\"},62:{ID:\"62\",Name:\"Barrier\",Type:\"\"},63:{ID:\"63\",Name:\"Selective Buff Wipe\",Type:\"\"},64:{ID:\"64\",Name:\"Consecutive Damage\",Type:\"Attack\"},65:{ID:\"65\",Name:\"Attack Boost on Status Afflicted Foes\",Type:\"\"},66:{ID:\"66\",Name:\"Revive (Chance)\",Type:\"\"},67:{ID:\"67\",Name:\"BC Fill on Spark\",Type:\"\"},68:{ID:\"68\",Name:\"Damage Reduction when Guarding\",Type:\"\"},69:{ID:\"69\",Name:\"BC Fill on Guard\",Type:\"\"},70:{ID:\"70\",Name:\"\",Type:\"\"},71:{ID:\"71\",Name:\"BB Gauge Fill Rate Debuff\",Type:\"\"},73:{ID:\"73\",Name:\"Parameter Reduction Negation\",Type:\"\"},75:{ID:\"75\",Name:\"Element Squad-Scaled Damage\",Type:\"Attack\"},76:{ID:\"76\",Name:\"Extra Action\",Type:\"\"},78:{ID:\"78\",Name:\"Self Parameter Boost\",Type:\"\"},79:{ID:\"79\",Name:\"Player EXP Boost\",Type:\"\"},82:{ID:\"82\",Name:\"\",Type:\"\"},83:{ID:\"83\",Name:\"Spark Critical\",Type:\"\"},84:{ID:\"84\",Name:\"OD Gauge Fill Rate\",Type:\"\"},85:{ID:\"85\",Name:\"Heal when Attacked\",Type:\"\"},86:{ID:\"86\",Name:\"HP Absorption\",Type:\"\"},87:{ID:\"87\",Name:\"Heal on Spark\",Type:\"\"},88:{ID:\"88\",Name:\"Self Spark Boost\",Type:\"\"},89:{ID:\"89\",Name:\"Self Parameter Conversion\",Type:\"\"},92:{ID:\"92\",Name:\"Self Max HP Boost\",Type:\"\"},93:{ID:\"93\",Name:\"Spark/Critical/Elemental Weakness Damage Reduction\",Type:\"\"},94:{ID:\"94\",Name:\"Normal Attacks Hit All Foes\",Type:\"\"},95:{ID:\"95\",Name:\"Nullify Sphere Effects (Sphere Lock)\",Type:\"\"},96:{ID:\"96\",Name:\"Nullify Extra Skill Effects (ES Lock)\",Type:\"\"},97:{ID:\"97\",Name:\"Element Target Damage\",Type:\"Attack\"},113:{ID:\"113\",Name:\"Gradual OD Fill\",Type:\"\"},119:{ID:\"119\",Name:\"Gradual BC Drain\",Type:\"\"},123:{ID:\"123\",Name:\"OD Gauge Reduction\",Type:\"\"},126:{ID:\"126\",Name:\"Damage over Time (Additional Damage) Mitigation\",Type:\"\"},127:{ID:\"127\",Name:\"Lock On\",Type:\"\"},130:{ID:\"130\",Name:\"Parameter Reduction Counter\",Type:\"\"},131:{ID:\"131\",Name:\"\",Type:\"\"},132:{ID:\"132\",Name:\"Critical/Elemental Weakness Vulnerability\",Type:\"\"},901:{ID:\"901\",Name:\"Raid Heal (on Map)\",Type:\"\"},902:{ID:\"902\",Name:\"Raid Parameter Boost\",Type:\"\"},903:{ID:\"903\",Name:\"Raid Boss Reveal\",Type:\"\"},905:{ID:\"905\",Name:\"Raid Teleport\",Type:\"\"},906:{ID:\"906\",Name:\"Raid Flee\",Type:\"\"},907:{ID:\"907\",Name:\"Raid Damage Reduction\",Type:\"\"},908:{ID:\"908\",Name:\"Raid Item Drop Rate Boost\",Type:\"\"},1e4:{ID:\"10000\",Name:\"Taunt\",Type:\"\"},10001:{ID:\"10001\",Name:\"Stealth\",Type:\"\"},10002:{ID:\"10002\",Name:\"Shield (old)\",Type:\"\"},10003:{ID:\"10003\",Name:\"Nullify Sphere Effects (Sphere Lock)\",Type:\"\"},10004:{ID:\"10004\",Name:\"Damage Immunity\",Type:\"\"},10005:{ID:\"10005\",Name:\"Turn Skip (short duration)\",Type:\"\"},10006:{ID:\"10006\",Name:\"Turn Skip (long duration)\",Type:\"\"},10007:{ID:\"10007\",Name:\"Evasion\",Type:\"\"},10009:{ID:\"10009\",Name:\"\",Type:\"\"},10012:{ID:\"10012\",Name:\"OD Drain\",Type:\"\"},10015:{ID:\"10015\",Name:\"Elemental Spark Boost\",Type:\"\"},10016:{ID:\"10016\",Name:\"Element Critical Damage Boost\",Type:\"\"},10017:{ID:\"10017\",Name:\"Elemental Shield\",Type:\"\"},10018:{ID:\"10018\",Name:\"Max HP Reduction\",Type:\"\"},10019:{ID:\"10019\",Name:\"Effect Purge\",Type:\"\"},10020:{ID:\"10020\",Name:\"Piercing Damage\",Type:\"Attack\"},10021:{ID:\"10021\",Name:\"Active Healing Reduction\",Type:\"\"},10022:{ID:\"10022\",Name:\"Passive Healing Reduction\",Type:\"\"},10023:{ID:\"10023\",Name:\"HC Efficacy Reduction\",Type:\"\"},10025:{ID:\"10025\",Name:\"KO Resistance Negation\",Type:\"\"},10026:{ID:\"10026\",Name:\"Doom\",Type:\"\"},11e3:{ID:\"11000\",Name:\"Negative HP-Scaled Damage\",Type:\"Attack\"},11001:{ID:\"11001\",Name:\"Max HP% DoT of Weaker Element Enemies\",Type:\"\"},11002:{ID:\"11002\",Name:\"HP Limit Break, Convert to HP\",Type:\"\"},11003:{ID:\"11003\",Name:\"Effect Negation\",Type:\"\"},70001:{ID:\"70001\",Name:\"Mana Bubble Shield\",Type:\"\"},70002:{ID:\"70002\",Name:\"Recast\",Type:\"\"},\"2-5\":{ID:\"2-5\",Name:\"Burst Heal and DEF/REC Boost\",Type:\"\"}});var n,r,i,o,m,c,l,s,D,u,p,I,N,f,d,g,y,T;!function(e){e.hp_50pr_under=\"hp_50pr_under\",e.hp_50pr_over=\"hp_50pr_over\",e.hp_75pr_under=\"hp_75pr_under\",e.hp_25pr_under=\"hp_25pr_under\",e.hp_min=\"hp_min\",e.hp_max=\"hp_max\",e.atk_max=\"atk_max\",e.random=\"random\"}(n||(n={})),function(e){e[e.Moving=1]=\"Moving\",e[e.Teleporting=2]=\"Teleporting\",e[e.NonMoving=3]=\"NonMoving\"}(r||(r={})),function(e){e.Aoe=\"aoe\",e.Single=\"single\",e.Random=\"random\"}(i||(i={})),function(e){e.Aoe=\"AOE\",e.Single=\"ST\",e.Random=\"RT\"}(o||(o={})),function(e){e.Self=\"self\",e.Party=\"party\",e.Enemy=\"enemy\"}(m||(m={})),function(e){e.AddPassive=\"passive\",e.EnhanceBb=\"add to bb\",e.EnhanceSbb=\"add to sbb\",e.EnhanceUbb=\"add to ubb\",e.EnhancePassive=\"add to passive\"}(c||(c={})),function(e){e.None=\"None\",e[\"Status Enhancing\"]=\"Status Enhancing\",e.Critical=\"Critical\",e.Drop=\"Drop\",e[\"Ailment Inducing\"]=\"Ailment Inducing\",e[\"Element Fusion\"]=\"Element Fusion\",e[\"BB Gauge\"]=\"BB Gauge\",e[\"HP Recovery\"]=\"HP Recovery\",e[\"Target Setting\"]=\"Target Setting\",e[\"Damage Deflecting\"]=\"Damage Deflecting\",e[\"Damage Reducing\"]=\"Damage Reducing\",e.Spark=\"Spark\",e[\"Defense Piercing\"]=\"Defense Piercing\",e[\"Attack Boosting\"]=\"Attack Boosting\",e.Special=\"Special\"}(l||(l={})),function(e){e[e.None=0]=\"None\",e[e[\"Status Enhancing\"]=1]=\"Status Enhancing\",e[e.Critical=2]=\"Critical\",e[e.Drop=3]=\"Drop\",e[e[\"Ailment Inducing\"]=4]=\"Ailment Inducing\",e[e[\"Element Fusion\"]=5]=\"Element Fusion\",e[e[\"BB Gauge\"]=6]=\"BB Gauge\",e[e[\"HP Recovery\"]=7]=\"HP Recovery\",e[e[\"Target Setting\"]=8]=\"Target Setting\",e[e[\"Damage Deflecting\"]=9]=\"Damage Deflecting\",e[e[\"Damage Reducing\"]=10]=\"Damage Reducing\",e[e.Spark=11]=\"Spark\",e[e[\"Defense Piercing\"]=12]=\"Defense Piercing\",e[e[\"Attack Boosting\"]=13]=\"Attack Boosting\",e[e.Special=14]=\"Special\"}(s||(s={})),function(e){e[\"Parameter Boost\"]=\"Parameter Boost\",e.Spark=\"Spark\",e[\"Critical Hits\"]=\"Critical Hits\",e[\"Attack Boost\"]=\"Attack Boost\",e[\"BB Gauge\"]=\"BB Gauge\",e[\"HP Recovery\"]=\"HP Recovery\",e.Drops=\"Drops\",e[\"Ailment Resistance\"]=\"Ailment Resistance\",e[\"Ailment Infliction\"]=\"Ailment Infliction\",e[\"Damage Reduction\"]=\"Damage Reduction\",e.Special=\"Special\",e.Unknown=\"Unknown\"}(D||(D={})),function(e){e[\"Parameter Boost\"]=\"1\",e.Spark=\"2\",e[\"Critical Hits\"]=\"3\",e[\"Attack Boost\"]=\"4\",e[\"BB Gauge\"]=\"5\",e[\"HP Recovery\"]=\"6\",e.Drops=\"7\",e[\"Ailment Resistance\"]=\"8\",e[\"Ailment Infliction\"]=\"9\",e[\"Damage Reduction\"]=\"10\",e.Special=\"11\"}(u||(u={})),function(e){e.Attack=\"attack\",e.Idle=\"idle\",e.Move=\"move\"}(p||(p={})),function(e){e.Fire=\"fire\",e.Water=\"water\",e.Earth=\"earth\",e.Thunder=\"thunder\",e.Light=\"light\",e.Dark=\"dark\"}(I||(I={})),function(e){e.Male=\"male\",e.Female=\"female\",e.Other=\"other\"}(N||(N={})),function(e){e.Ineligible=\"not eligible for achievement\",e.Farmable=\"farmable\",e.RareSummon=\"rare summon\"}(f||(f={})),function(e){e.Normal=\"normal\",e.Evolution=\"evo\",e.Enhancing=\"enhancing\",e.Sale=\"sale\"}(d||(d={})),function(e){e.Lord=\"lord\",e.Anima=\"anima\",e.Breaker=\"breaker\",e.Guardian=\"guardian\",e.Oracle=\"oracle\",e.Rex=\"rex\"}(g||(g={})),function(e){e.Consumable=\"consumable\",e.Material=\"material\",e.Sphere=\"sphere\",e.EvolutionMaterial=\"evomat\",e.SummonerConsumable=\"summoner_consumable\",e.LeaderSkillSphere=\"ls_sphere\"}(y||(y={})),function(e){e.Mimic=\"60142\",e.BatMimic=\"60143\",e.DragonMimic=\"60144\",e.MetalMimic=\"60224\"}(T||(T={}));const B={1e3:T.Mimic,1100:T.BatMimic,1101:T.BatMimic,1200:T.DragonMimic,1300:T.MetalMimic};var h=Object.freeze({__proto__:null,get ArenaCondition(){return n},get MoveType(){return r},get TargetArea(){return i},get TargetAreaShorthand(){return o},get TargetType(){return m},get SpPassiveType(){return c},get SphereTypeName(){return l},get SphereTypeId(){return s},get SpCategoryName(){return D},get SpCategoryId(){return u},get UnitAnimationKey(){return p},get UnitElement(){return I},get UnitGender(){return N},get UnitGettingType(){return f},get UnitKind(){return d},get UnitType(){return g},get ItemType(){return y},get MimicUnitIds(){return T},MimicMonsterGroupMapping:B});function A(e){return Object.hasOwnProperty.call(t,e)?t[e]:void 0}function k(e){return Object.hasOwnProperty.call(a,e)?a[e]:void 0}function S(a){const t=A(a);return!!t&&t.Type===e.Attack}function C(e){const a=A(e);return!!a&&a.Name||\"\"}function E(e){const a=k(e);return!!a&&a.Name||\"\"}function R(e){return!!e&&\"object\"==typeof e&&(Object.hasOwnProperty.call(e,\"proc id\")||Object.hasOwnProperty.call(e,\"unknown proc id\"))}function P(e){return!!e&&\"object\"==typeof e&&(Object.hasOwnProperty.call(e,\"passive id\")||Object.hasOwnProperty.call(e,\"unknown passive id\"))}function v(e){let a=\"\";return e&&(a=e[\"proc id\"]||e[\"unknown proc id\"]||e[\"passive id\"]||e[\"unknown passive id\"]||\"\"),a}var b,_,H=Object.freeze({__proto__:null,getMetadataForProc:A,getMetadataForPassive:k,isAttackingProcId:S,getNameForProc:C,getNameForPassive:E,isProcEffect:R,isPassiveEffect:P,combineEffectsAndDamageFrames:function(e,a){let t=[];return Array.isArray(e)&&e.length>0&&Array.isArray(a)&&e.length===a.length&&(t=e.map((e,t)=>{const n=a[t];return{delay:e[\"effect delay time(ms)/frame\"],effect:e,frames:n,id:\"\".concat(e[\"proc id\"]||e[\"unknown proc id\"]),targetArea:e[\"random attack\"]?i.Random:e[\"target area\"],targetType:e[\"target type\"]}})),t},getEffectId:v,getEffectName:function(e){let a=\"\";const t=v(e);return P(e)?a=E(t):R(e)&&(a=C(t)),a}});function F(e,a){const t=e&&Array.isArray(e.levels)?e.levels:[];let n;return t[n=null===a||isNaN(a)?t.length-1:+a-1]}!function(e){e.BurstHeal=\"2\"}(b||(b={})),function(e){e.TriggeredEffect=\"66\"}(_||(_={}));var O=Object.freeze({__proto__:null,getLevelEntryForBurst:F,getEffectsForBurst:function(e,a){const t=F(e,a);return t&&Array.isArray(t.effects)?t.effects:[]},getExtraAttackDamageFramesEntry:function(e,a=\"0.0/0\"){const t=(Array.isArray(e)?e:[]).filter(e=>{const a=v(e);return a===b.BurstHeal||S(a)}).reduce((e,a,t)=>{const n=0===t,r=a[\"frame times\"].length,i=a[\"hit dmg% distribution\"],o=a[\"frame times\"];for(let a=n?0:1;a<r;++a)e.push({damage:i[a],time:o[a]});return e},[]),n={\"effect delay time(ms)/frame\":a,\"frame times\":[],\"hit dmg% distribution\":[],\"hit dmg% distribution (total)\":0,hits:0};return t.sort((e,a)=>e.time-a.time).forEach(({time:e,damage:a})=>{n[\"frame times\"].push(e),n[\"hit dmg% distribution\"].push(a),n[\"hit dmg% distribution (total)\"]+=a}),n.hits=n[\"frame times\"].length,n}});var G=Object.freeze({__proto__:null,getEffectsForExtraSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var M=Object.freeze({__proto__:null,getEffectsForItem:function(e){let a=[];if(e&&e.effect)if(Array.isArray(e.effect))a=e.effect;else if(Array.isArray(e.effect.effect)){const{effect:t,target_area:n,target_type:r}=e.effect;a=t.map(e=>{const a=Object.assign({},e);return a[\"target area\"]=n,a[\"target type\"]=r,a})}return a},getItemImageUrl:function(e,a){return\"\".concat(e||\"\",\"/item/\").concat(a||\"\")}});var w=Object.freeze({__proto__:null,getEffectsForLeaderSkill:function(e){return e&&Array.isArray(e.effects)?e.effects:[]}});var j=Object.freeze({__proto__:null,getUnitImageFileNames:function(e,a=\"\"){const t=\"\".concat(e||\"\").concat(a||\"\",\".png\");return{spritesheet:\"unit_anime_\".concat(t),battleAvatar:\"unit_ills_battle_\".concat(t),guideAvatar:\"unit_ills_thum_\".concat(t),fullIllustration:\"unit_ills_full_\".concat(t)}},getUnitImageUrl:function(e,a){return\"\".concat(e||\"\",\"/unit/img/\").concat(a||\"\")}});const x=\"A\".charCodeAt(0),U=\"a\".charCodeAt(0),L=\"0\".charCodeAt(0);function z(e){return\"string\"==typeof e&&e.split(\"@\")[1]||e}var W=Object.freeze({__proto__:null,getEffectsForSpEnhancement:function(e){const a=[];if(e&&e.skill&&Array.isArray(e.skill.effects)){e.skill.effects.forEach(e=>{Object.keys(e).forEach(t=>{const n=e[t],r=Object.assign(Object.assign({},n),{sp_type:t});a.push(r)})})}return a},getSpCategoryName:function(e){let a;switch(+e){case 1:a=D[\"Parameter Boost\"];break;case 2:a=D.Spark;break;case 3:a=D[\"Critical Hits\"];break;case 4:a=D[\"Attack Boost\"];break;case 5:a=D[\"BB Gauge\"];break;case 6:a=D[\"HP Recovery\"];break;case 7:a=D.Drops;break;case 8:a=D[\"Ailment Resistance\"];break;case 9:a=D[\"Ailment Infliction\"];break;case 10:a=D[\"Damage Reduction\"];break;case 11:a=D.Special;break;default:a=D.Unknown}return a},spIndexToCode:function(e){let a=\"\",t=-1;return Number.isInteger(e)&&(e>=0&&e<=25?t=e+x:e>=26&&e<=51?t=e-26+U:e>=52&&e<=61&&(t=e-52+L)),-1!==t&&(a=String.fromCharCode(t)),a},spCodeToIndex:function(e){let a=-1,t=-1;return e&&\"string\"==typeof e&&1===e.length&&(e>=\"A\"&&e<=\"Z\"?t=x:e>=\"a\"&&e<=\"z\"?t=U-26:e>=\"0\"&&e<=\"9\"&&(t=L-52)),-1!==t&&(a=e.charCodeAt(0)-t),a},getSpEntryId:z,getSpEntryWithId:function(e,a){const t=z(e);return e&&Array.isArray(a)&&a.find(e=>z(e&&e.id)===t)||void 0},getAllDependenciesForSpEntry:function e(a,t,n=new Set){let r=[];if(a&&a.dependency&&Array.isArray(t)&&t.length>0){const i=z(a.dependency),o=t.find(e=>z(e&&e.id)===i);if(o&&!n.has(o)){n.add(o);const a=e(o,t,n);r=[o].concat(a)}}return r},getAllEntriesThatDependOnSpEntry:function e(a,t,n=new Set){let r=[];if(a&&a.id&&Array.isArray(t)&&t.length>0){const i=a.id;(r=t.filter(e=>e.dependency&&e.dependency.includes(i)&&!n.has(e))).forEach(a=>{n.add(a);const i=e(a,t,n);r=r.concat(i)})}return r}});return Object.freeze({buffs:H,bursts:O,datamineTypes:h,extraSkills:G,items:M,leaderSkills:w,units:j,spEnhancements:W,version:\"0.4.1\"})}();\n//# sourceMappingURL=index.browser.min.js.map\n","var bfmtUtilities = (function () {\n    'use strict';\n\n    var ProcBuffType;\n    (function (ProcBuffType) {\n        ProcBuffType[\"Attack\"] = \"Attack\";\n    })(ProcBuffType || (ProcBuffType = {}));\n    /* eslint-disable */\n    const PASSIVE_METADATA = Object.freeze({\n        \"1\": {\n            \"ID\": \"1\",\n            \"Name\": \"Parameter Boost\"\n        },\n        \"2\": {\n            \"ID\": \"2\",\n            \"Name\": \"Elemental Parameter Boost\"\n        },\n        \"3\": {\n            \"ID\": \"3\",\n            \"Name\": \"Type-Based Parameter Boost\"\n        },\n        \"4\": {\n            \"ID\": \"4\",\n            \"Name\": \"Status Negation\"\n        },\n        \"5\": {\n            \"ID\": \"5\",\n            \"Name\": \"Elemental Damage Reduction\"\n        },\n        \"6\": {\n            \"ID\": \"6\",\n            \"Name\": \"\"\n        },\n        \"7\": {\n            \"ID\": \"7\",\n            \"Name\": \"\"\n        },\n        \"8\": {\n            \"ID\": \"8\",\n            \"Name\": \"Damage Reduction\"\n        },\n        \"9\": {\n            \"ID\": \"9\",\n            \"Name\": \"Gradual BB Gauge Boost\"\n        },\n        \"10\": {\n            \"ID\": \"10\",\n            \"Name\": \"HC Efficacy\"\n        },\n        \"11\": {\n            \"ID\": \"11\",\n            \"Name\": \"HP-Conditional Parameter Boost\"\n        },\n        \"12\": {\n            \"ID\": \"12\",\n            \"Name\": \"HP-Conditional Drop Rate Boost\"\n        },\n        \"13\": {\n            \"ID\": \"13\",\n            \"Name\": \"BC Fill on Enemy Defeat\"\n        },\n        \"14\": {\n            \"ID\": \"14\",\n            \"Name\": \"Damage Reduction (Chance)\"\n        },\n        \"15\": {\n            \"ID\": \"15\",\n            \"Name\": \"Heal on Enemy Defeat\"\n        },\n        \"16\": {\n            \"ID\": \"16\",\n            \"Name\": \"Heal on Battle Victory\"\n        },\n        \"17\": {\n            \"ID\": \"17\",\n            \"Name\": \"HP Absorption\"\n        },\n        \"19\": {\n            \"ID\": \"19\",\n            \"Name\": \"Drop Rate Boost\"\n        },\n        \"20\": {\n            \"ID\": \"20\",\n            \"Name\": \"Status Infliction\"\n        },\n        \"21\": {\n            \"ID\": \"21\",\n            \"Name\": \"Parameter Boost for First X Turns\"\n        },\n        \"23\": {\n            \"ID\": \"23\",\n            \"Name\": \"BC Fill on Battle Victory\"\n        },\n        \"24\": {\n            \"ID\": \"24\",\n            \"Name\": \"Heal when Attacked (Chance)\"\n        },\n        \"25\": {\n            \"ID\": \"25\",\n            \"Name\": \"BC Fill when Hit (Chance)\"\n        },\n        \"26\": {\n            \"ID\": \"26\",\n            \"Name\": \"Damage Counter (Chance)\"\n        },\n        \"27\": {\n            \"ID\": \"27\",\n            \"Name\": \"Increased Target Chance\"\n        },\n        \"28\": {\n            \"ID\": \"28\",\n            \"Name\": \"Decreased Target Chance\"\n        },\n        \"29\": {\n            \"ID\": \"29\",\n            \"Name\": \"Defense Ignore (Chance)\"\n        },\n        \"30\": {\n            \"ID\": \"30\",\n            \"Name\": \"BB Conditional Parameter Boost\"\n        },\n        \"31\": {\n            \"ID\": \"31\",\n            \"Name\": \"Spark Damage Boost, Boost Drop Rate on Spark\"\n        },\n        \"32\": {\n            \"ID\": \"32\",\n            \"Name\": \"BC Efficacy\"\n        },\n        \"33\": {\n            \"ID\": \"33\",\n            \"Name\": \"Heal over Time\"\n        },\n        \"34\": {\n            \"ID\": \"34\",\n            \"Name\": \"Critical Damage Boost\"\n        },\n        \"35\": {\n            \"ID\": \"35\",\n            \"Name\": \"BC Fill when Normal Attacking\"\n        },\n        \"36\": {\n            \"ID\": \"36\",\n            \"Name\": \"Extra Action\"\n        },\n        \"37\": {\n            \"ID\": \"37\",\n            \"Name\": \"Hit Count Boost\"\n        },\n        \"38\": {\n            \"ID\": \"38\",\n            \"Name\": \"\"\n        },\n        \"39\": {\n            \"ID\": \"39\",\n            \"Name\": \"\"\n        },\n        \"40\": {\n            \"ID\": \"40\",\n            \"Name\": \"Parameter Conversion\"\n        },\n        \"41\": {\n            \"ID\": \"41\",\n            \"Name\": \"Unique Element Count Conditional Parameter Boost\"\n        },\n        \"42\": {\n            \"ID\": \"42\",\n            \"Name\": \"Gender Parameter Boost\"\n        },\n        \"43\": {\n            \"ID\": \"43\",\n            \"Name\": \"Damage Reduction to 1\"\n        },\n        \"44\": {\n            \"ID\": \"44\",\n            \"Name\": \"Flat Parameter Boost\"\n        },\n        \"45\": {\n            \"ID\": \"45\",\n            \"Name\": \"Critical Damage Negation\"\n        },\n        \"46\": {\n            \"ID\": \"46\",\n            \"Name\": \"Parameter Boost Relative to HP Remainaing\"\n        },\n        \"47\": {\n            \"ID\": \"47\",\n            \"Name\": \"BC Fill on Spark\"\n        },\n        \"48\": {\n            \"ID\": \"48\",\n            \"Name\": \"BC Cost Reduction\"\n        },\n        \"49\": {\n            \"ID\": \"49\",\n            \"Name\": \"BB Gauge Consumption Reduction\"\n        },\n        \"50\": {\n            \"ID\": \"50\",\n            \"Name\": \"Elemental Damage Boost\"\n        },\n        \"52\": {\n            \"ID\": \"52\",\n            \"Name\": \"\"\n        },\n        \"53\": {\n            \"ID\": \"53\",\n            \"Name\": \"Critical/Elemental Weakness Damage Negation\"\n        },\n        \"55\": {\n            \"ID\": \"55\",\n            \"Name\": \"Conditional Effect based on HP Threshold\"\n        },\n        \"58\": {\n            \"ID\": \"58\",\n            \"Name\": \"Damage Reduction when Guarding\"\n        },\n        \"59\": {\n            \"ID\": \"59\",\n            \"Name\": \"BC Fill when Attacked when Guarding\"\n        },\n        \"61\": {\n            \"ID\": \"61\",\n            \"Name\": \"BC Fill on Guard\"\n        },\n        \"62\": {\n            \"ID\": \"62\",\n            \"Name\": \"Elemental Damage Reduction\"\n        },\n        \"63\": {\n            \"ID\": \"63\",\n            \"Name\": \"Elemental Damage Reduction for first X Turns\"\n        },\n        \"64\": {\n            \"ID\": \"64\",\n            \"Name\": \"BB Atk Boost\"\n        },\n        \"65\": {\n            \"ID\": \"65\",\n            \"Name\": \"BC Fill on Critical\"\n        },\n        \"66\": {\n            \"ID\": \"66\",\n            \"Name\": \"Add buff to Brave Burst\"\n        },\n        \"69\": {\n            \"ID\": \"69\",\n            \"Name\": \"Chance KO Resistance (Angel Idol)\"\n        },\n        \"70\": {\n            \"ID\": \"70\",\n            \"Name\": \"OD Gauge Fill Rate Boost\"\n        },\n        \"71\": {\n            \"ID\": \"71\",\n            \"Name\": \"Status Counter\"\n        },\n        \"72\": {\n            \"ID\": \"72\",\n            \"Name\": \"Turn End Effects Activate at Turn Start\"\n        },\n        \"73\": {\n            \"ID\": \"73\",\n            \"Name\": \"Parameter Reduction Negation\"\n        },\n        \"74\": {\n            \"ID\": \"74\",\n            \"Name\": \"Attack Boost on Status Afflicted Foes\"\n        },\n        \"75\": {\n            \"ID\": \"75\",\n            \"Name\": \"Spark Vulnerability\"\n        },\n        \"77\": {\n            \"ID\": \"77\",\n            \"Name\": \"Spark Damage Reduction\"\n        },\n        \"78\": {\n            \"ID\": \"78\",\n            \"Name\": \"Conditional Effect after Damage Received Threshold\"\n        },\n        \"79\": {\n            \"ID\": \"79\",\n            \"Name\": \"BC Fill after Damage Received Threshold\"\n        },\n        \"80\": {\n            \"ID\": \"80\",\n            \"Name\": \"Conditional Effect after Damage Dealt Threshold\"\n        },\n        \"81\": {\n            \"ID\": \"81\",\n            \"Name\": \"BC Fill after Damage Dealt Threshold\"\n        },\n        \"82\": {\n            \"ID\": \"82\",\n            \"Name\": \"Conditional Effect after BC Received Threshold\"\n        },\n        \"84\": {\n            \"ID\": \"84\",\n            \"Name\": \"Conditional Effect after HC Received Threshold\"\n        },\n        \"85\": {\n            \"ID\": \"85\",\n            \"Name\": \"BC Fill after HC Received Threshold\"\n        },\n        \"86\": {\n            \"ID\": \"86\",\n            \"Name\": \"Conditional Effect after Spark Threshold\"\n        },\n        \"88\": {\n            \"ID\": \"88\",\n            \"Name\": \"Conditional Effect on Guard\"\n        },\n        \"89\": {\n            \"ID\": \"89\",\n            \"Name\": \"Conditional Effect on Critical\"\n        },\n        \"90\": {\n            \"ID\": \"90\",\n            \"Name\": \"Status Infliction on Critical\"\n        },\n        \"91\": {\n            \"ID\": \"91\",\n            \"Name\": \"\"\n        },\n        \"92\": {\n            \"ID\": \"92\",\n            \"Name\": \"Negate Defense Ignore\"\n        },\n        \"93\": {\n            \"ID\": \"93\",\n            \"Name\": \"Added Elements\"\n        },\n        \"96\": {\n            \"ID\": \"96\",\n            \"Name\": \"Normal Attacks Hit All Foes\"\n        },\n        \"97\": {\n            \"ID\": \"97\",\n            \"Name\": \"Player EXP Boost\"\n        },\n        \"99\": {\n            \"ID\": \"99\",\n            \"Name\": \"\"\n        },\n        \"100\": {\n            \"ID\": \"100\",\n            \"Name\": \"Spark Critical\"\n        },\n        \"101\": {\n            \"ID\": \"101\",\n            \"Name\": \"Heal on Spark\"\n        },\n        \"102\": {\n            \"ID\": \"102\",\n            \"Name\": \"Added Elements\"\n        },\n        \"103\": {\n            \"ID\": \"103\",\n            \"Name\": \"BB Atk Boost when HP Passes Threshold\"\n        },\n        \"104\": {\n            \"ID\": \"104\",\n            \"Name\": \"Spark Boost when HP Passes Threshold\"\n        },\n        \"105\": {\n            \"ID\": \"105\",\n            \"Name\": \"Turn-Based Parameter Boost\"\n        },\n        \"106\": {\n            \"ID\": \"106\",\n            \"Name\": \"Conditional Effect after Activating Overdrive\"\n        },\n        \"107\": {\n            \"ID\": \"107\",\n            \"Name\": \"Add Effect to Leader Skill\"\n        },\n        \"109\": {\n            \"ID\": \"109\",\n            \"Name\": \"BB Gauge Reduction (Chance)\"\n        },\n        \"110\": {\n            \"ID\": \"110\",\n            \"Name\": \"BC Efficacy Reduction (Chance)\"\n        },\n        \"111\": {\n            \"ID\": \"111\",\n            \"Name\": \"Increase Brave Burst Activation Rate\"\n        },\n        \"112\": {\n            \"ID\": \"112\",\n            \"Name\": \"ABP/CBP Boost\"\n        },\n        \"113\": {\n            \"ID\": \"113\",\n            \"Name\": \"Conditional Effect after HP Threshold\"\n        },\n        \"114\": {\n            \"ID\": \"114\",\n            \"Name\": \"Inflict Buff when Attacked\"\n        },\n        \"127\": {\n            \"ID\": \"127\",\n            \"Name\": \"Additional Damage (Damage over Time) Reduction\"\n        },\n        \"128\": {\n            \"ID\": \"128\",\n            \"Name\": \"Damage Reduction from Normal Attacks\"\n        },\n        \"143\": {\n            \"ID\": \"143\",\n            \"Name\": \"Break Atk Parameter Limit\"\n        },\n        \"10008\": {\n            \"ID\": \"10008\",\n            \"Name\": \"Damage Reduction from Specific Sources\"\n        },\n        \"11004\": {\n            \"ID\": \"11004\",\n            \"Name\": \"Elemental Spark Damage Boost\"\n        },\n        \"11005\": {\n            \"ID\": \"11005\",\n            \"Name\": \"Elemental Critical Damage Boost\"\n        },\n        \"11006\": {\n            \"ID\": \"11006\",\n            \"Name\": \"Summoner EXP Boost\"\n        },\n        \"11009\": {\n            \"ID\": \"11009\",\n            \"Name\": \"Effect Duration Boost\"\n        },\n        \"66,1\": {\n            \"ID\": \"66,1\",\n            \"Name\": \"\"\n        }\n    });\n    const PROC_METADATA = Object.freeze({\n        \"0\": {\n            \"ID\": \"0\",\n            \"Name\": \"\",\n            \"Type\": \"\"\n        },\n        \"1\": {\n            \"ID\": \"1\",\n            \"Name\": \"Regular Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"2\": {\n            \"ID\": \"2\",\n            \"Name\": \"Burst Heal\",\n            \"Type\": \"\"\n        },\n        \"3\": {\n            \"ID\": \"3\",\n            \"Name\": \"Heal over Time\",\n            \"Type\": \"\"\n        },\n        \"4\": {\n            \"ID\": \"4\",\n            \"Name\": \"BB Gauge Refill\",\n            \"Type\": \"\"\n        },\n        \"5\": {\n            \"ID\": \"5\",\n            \"Name\": \"Parameter Boost\",\n            \"Type\": \"\"\n        },\n        \"6\": {\n            \"ID\": \"6\",\n            \"Name\": \"Drop Rate\",\n            \"Type\": \"\"\n        },\n        \"7\": {\n            \"ID\": \"7\",\n            \"Name\": \"Guaranteed KO Resistance (Angel Idol)\",\n            \"Type\": \"\"\n        },\n        \"8\": {\n            \"ID\": \"8\",\n            \"Name\": \"Max HP Boost\",\n            \"Type\": \"\"\n        },\n        \"9\": {\n            \"ID\": \"9\",\n            \"Name\": \"Parameter Reduction\",\n            \"Type\": \"\"\n        },\n        \"10\": {\n            \"ID\": \"10\",\n            \"Name\": \"Status Cleanse\",\n            \"Type\": \"\"\n        },\n        \"11\": {\n            \"ID\": \"11\",\n            \"Name\": \"Status Infliction\",\n            \"Type\": \"\"\n        },\n        \"12\": {\n            \"ID\": \"12\",\n            \"Name\": \"Revive (Guaranteed)\",\n            \"Type\": \"\"\n        },\n        \"13\": {\n            \"ID\": \"13\",\n            \"Name\": \"Random Target Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"14\": {\n            \"ID\": \"14\",\n            \"Name\": \"Lifesteal Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"16\": {\n            \"ID\": \"16\",\n            \"Name\": \"Elemental Damage Reduction\",\n            \"Type\": \"\"\n        },\n        \"17\": {\n            \"ID\": \"17\",\n            \"Name\": \"Status Negation\",\n            \"Type\": \"\"\n        },\n        \"18\": {\n            \"ID\": \"18\",\n            \"Name\": \"Damage Reduction\",\n            \"Type\": \"\"\n        },\n        \"19\": {\n            \"ID\": \"19\",\n            \"Name\": \"Gradual BB Gauge Boost\",\n            \"Type\": \"\"\n        },\n        \"20\": {\n            \"ID\": \"20\",\n            \"Name\": \"BC Fill on Hit\",\n            \"Type\": \"\"\n        },\n        \"22\": {\n            \"ID\": \"22\",\n            \"Name\": \"Defense Ignore\",\n            \"Type\": \"\"\n        },\n        \"23\": {\n            \"ID\": \"23\",\n            \"Name\": \"Spark Boost\",\n            \"Type\": \"\"\n        },\n        \"24\": {\n            \"ID\": \"24\",\n            \"Name\": \"Parameter Conversion\",\n            \"Type\": \"\"\n        },\n        \"26\": {\n            \"ID\": \"26\",\n            \"Name\": \"Hit Count Boost\",\n            \"Type\": \"\"\n        },\n        \"27\": {\n            \"ID\": \"27\",\n            \"Name\": \"Proportional Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"28\": {\n            \"ID\": \"28\",\n            \"Name\": \"Fixed Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"29\": {\n            \"ID\": \"29\",\n            \"Name\": \"Multi-Element Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"30\": {\n            \"ID\": \"30\",\n            \"Name\": \"Add Elements\",\n            \"Type\": \"\"\n        },\n        \"31\": {\n            \"ID\": \"31\",\n            \"Name\": \"Instant BB Gauge Fill\",\n            \"Type\": \"\"\n        },\n        \"32\": {\n            \"ID\": \"32\",\n            \"Name\": \"Element Shift\",\n            \"Type\": \"\"\n        },\n        \"33\": {\n            \"ID\": \"33\",\n            \"Name\": \"Buff Removal (Chance)\",\n            \"Type\": \"\"\n        },\n        \"34\": {\n            \"ID\": \"34\",\n            \"Name\": \"BB Gauge Reduction (Chance)\",\n            \"Type\": \"\"\n        },\n        \"36\": {\n            \"ID\": \"36\",\n            \"Name\": \"Leader Skill Lock (Chance)\",\n            \"Type\": \"\"\n        },\n        \"37\": {\n            \"ID\": \"37\",\n            \"Name\": \"Summon Unit\",\n            \"Type\": \"\"\n        },\n        \"38\": {\n            \"ID\": \"38\",\n            \"Name\": \"Status Cure\",\n            \"Type\": \"\"\n        },\n        \"39\": {\n            \"ID\": \"39\",\n            \"Name\": \"Elemental Damage Reduction\",\n            \"Type\": \"\"\n        },\n        \"40\": {\n            \"ID\": \"40\",\n            \"Name\": \"Status Infliction Added to Attack\",\n            \"Type\": \"\"\n        },\n        \"42\": {\n            \"ID\": \"42\",\n            \"Name\": \"\",\n            \"Type\": \"\"\n        },\n        \"43\": {\n            \"ID\": \"43\",\n            \"Name\": \"Instant OD Fill\",\n            \"Type\": \"\"\n        },\n        \"44\": {\n            \"ID\": \"44\",\n            \"Name\": \"Damage over Time (Additional Damage)\",\n            \"Type\": \"\"\n        },\n        \"45\": {\n            \"ID\": \"45\",\n            \"Name\": \"BB Atk Boost\",\n            \"Type\": \"\"\n        },\n        \"46\": {\n            \"ID\": \"46\",\n            \"Name\": \"Non-Lethal Proportional Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"47\": {\n            \"ID\": \"47\",\n            \"Name\": \"HP Scaled Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"48\": {\n            \"ID\": \"48\",\n            \"Name\": \"Piercing Proportional Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"49\": {\n            \"ID\": \"49\",\n            \"Name\": \"Retire\",\n            \"Type\": \"\"\n        },\n        \"50\": {\n            \"ID\": \"50\",\n            \"Name\": \"Damage Counter\",\n            \"Type\": \"\"\n        },\n        \"51\": {\n            \"ID\": \"51\",\n            \"Name\": \"Parameter Reduction Added to Attack\",\n            \"Type\": \"\"\n        },\n        \"52\": {\n            \"ID\": \"52\",\n            \"Name\": \"BC Efficacy\",\n            \"Type\": \"\"\n        },\n        \"53\": {\n            \"ID\": \"53\",\n            \"Name\": \"Status Counter\",\n            \"Type\": \"\"\n        },\n        \"54\": {\n            \"ID\": \"54\",\n            \"Name\": \"Critical Damage Boost\",\n            \"Type\": \"\"\n        },\n        \"55\": {\n            \"ID\": \"55\",\n            \"Name\": \"Elemental Damage Boost\",\n            \"Type\": \"\"\n        },\n        \"56\": {\n            \"ID\": \"56\",\n            \"Name\": \"Chance KO Resistance (Angel Idol)\",\n            \"Type\": \"\"\n        },\n        \"57\": {\n            \"ID\": \"57\",\n            \"Name\": \"BC Efficacy Reduction\",\n            \"Type\": \"\"\n        },\n        \"58\": {\n            \"ID\": \"58\",\n            \"Name\": \"Spark Vulnerability\",\n            \"Type\": \"\"\n        },\n        \"59\": {\n            \"ID\": \"59\",\n            \"Name\": \"BB Atk Reduction\",\n            \"Type\": \"\"\n        },\n        \"60\": {\n            \"ID\": \"60\",\n            \"Name\": \"\",\n            \"Type\": \"\"\n        },\n        \"61\": {\n            \"ID\": \"61\",\n            \"Name\": \"BB-Scaled Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"62\": {\n            \"ID\": \"62\",\n            \"Name\": \"Barrier\",\n            \"Type\": \"\"\n        },\n        \"63\": {\n            \"ID\": \"63\",\n            \"Name\": \"Selective Buff Wipe\",\n            \"Type\": \"\"\n        },\n        \"64\": {\n            \"ID\": \"64\",\n            \"Name\": \"Consecutive Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"65\": {\n            \"ID\": \"65\",\n            \"Name\": \"Attack Boost on Status Afflicted Foes\",\n            \"Type\": \"\"\n        },\n        \"66\": {\n            \"ID\": \"66\",\n            \"Name\": \"Revive (Chance)\",\n            \"Type\": \"\"\n        },\n        \"67\": {\n            \"ID\": \"67\",\n            \"Name\": \"BC Fill on Spark\",\n            \"Type\": \"\"\n        },\n        \"68\": {\n            \"ID\": \"68\",\n            \"Name\": \"Damage Reduction when Guarding\",\n            \"Type\": \"\"\n        },\n        \"69\": {\n            \"ID\": \"69\",\n            \"Name\": \"BC Fill on Guard\",\n            \"Type\": \"\"\n        },\n        \"70\": {\n            \"ID\": \"70\",\n            \"Name\": \"\",\n            \"Type\": \"\"\n        },\n        \"71\": {\n            \"ID\": \"71\",\n            \"Name\": \"BB Gauge Fill Rate Debuff\",\n            \"Type\": \"\"\n        },\n        \"73\": {\n            \"ID\": \"73\",\n            \"Name\": \"Parameter Reduction Negation\",\n            \"Type\": \"\"\n        },\n        \"75\": {\n            \"ID\": \"75\",\n            \"Name\": \"Element Squad-Scaled Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"76\": {\n            \"ID\": \"76\",\n            \"Name\": \"Extra Action\",\n            \"Type\": \"\"\n        },\n        \"78\": {\n            \"ID\": \"78\",\n            \"Name\": \"Self Parameter Boost\",\n            \"Type\": \"\"\n        },\n        \"79\": {\n            \"ID\": \"79\",\n            \"Name\": \"Player EXP Boost\",\n            \"Type\": \"\"\n        },\n        \"82\": {\n            \"ID\": \"82\",\n            \"Name\": \"\",\n            \"Type\": \"\"\n        },\n        \"83\": {\n            \"ID\": \"83\",\n            \"Name\": \"Spark Critical\",\n            \"Type\": \"\"\n        },\n        \"84\": {\n            \"ID\": \"84\",\n            \"Name\": \"OD Gauge Fill Rate\",\n            \"Type\": \"\"\n        },\n        \"85\": {\n            \"ID\": \"85\",\n            \"Name\": \"Heal when Attacked\",\n            \"Type\": \"\"\n        },\n        \"86\": {\n            \"ID\": \"86\",\n            \"Name\": \"HP Absorption\",\n            \"Type\": \"\"\n        },\n        \"87\": {\n            \"ID\": \"87\",\n            \"Name\": \"Heal on Spark\",\n            \"Type\": \"\"\n        },\n        \"88\": {\n            \"ID\": \"88\",\n            \"Name\": \"Self Spark Boost\",\n            \"Type\": \"\"\n        },\n        \"89\": {\n            \"ID\": \"89\",\n            \"Name\": \"Self Parameter Conversion\",\n            \"Type\": \"\"\n        },\n        \"92\": {\n            \"ID\": \"92\",\n            \"Name\": \"Self Max HP Boost\",\n            \"Type\": \"\"\n        },\n        \"93\": {\n            \"ID\": \"93\",\n            \"Name\": \"Spark/Critical/Elemental Weakness Damage Reduction\",\n            \"Type\": \"\"\n        },\n        \"94\": {\n            \"ID\": \"94\",\n            \"Name\": \"Normal Attacks Hit All Foes\",\n            \"Type\": \"\"\n        },\n        \"95\": {\n            \"ID\": \"95\",\n            \"Name\": \"Nullify Sphere Effects (Sphere Lock)\",\n            \"Type\": \"\"\n        },\n        \"96\": {\n            \"ID\": \"96\",\n            \"Name\": \"Nullify Extra Skill Effects (ES Lock)\",\n            \"Type\": \"\"\n        },\n        \"97\": {\n            \"ID\": \"97\",\n            \"Name\": \"Element Target Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"113\": {\n            \"ID\": \"113\",\n            \"Name\": \"Gradual OD Fill\",\n            \"Type\": \"\"\n        },\n        \"119\": {\n            \"ID\": \"119\",\n            \"Name\": \"Gradual BC Drain\",\n            \"Type\": \"\"\n        },\n        \"123\": {\n            \"ID\": \"123\",\n            \"Name\": \"OD Gauge Reduction\",\n            \"Type\": \"\"\n        },\n        \"126\": {\n            \"ID\": \"126\",\n            \"Name\": \"Damage over Time (Additional Damage) Mitigation\",\n            \"Type\": \"\"\n        },\n        \"127\": {\n            \"ID\": \"127\",\n            \"Name\": \"Lock On\",\n            \"Type\": \"\"\n        },\n        \"130\": {\n            \"ID\": \"130\",\n            \"Name\": \"Parameter Reduction Counter\",\n            \"Type\": \"\"\n        },\n        \"131\": {\n            \"ID\": \"131\",\n            \"Name\": \"\",\n            \"Type\": \"\"\n        },\n        \"132\": {\n            \"ID\": \"132\",\n            \"Name\": \"Critical/Elemental Weakness Vulnerability\",\n            \"Type\": \"\"\n        },\n        \"901\": {\n            \"ID\": \"901\",\n            \"Name\": \"Raid Heal (on Map)\",\n            \"Type\": \"\"\n        },\n        \"902\": {\n            \"ID\": \"902\",\n            \"Name\": \"Raid Parameter Boost\",\n            \"Type\": \"\"\n        },\n        \"903\": {\n            \"ID\": \"903\",\n            \"Name\": \"Raid Boss Reveal\",\n            \"Type\": \"\"\n        },\n        \"905\": {\n            \"ID\": \"905\",\n            \"Name\": \"Raid Teleport\",\n            \"Type\": \"\"\n        },\n        \"906\": {\n            \"ID\": \"906\",\n            \"Name\": \"Raid Flee\",\n            \"Type\": \"\"\n        },\n        \"907\": {\n            \"ID\": \"907\",\n            \"Name\": \"Raid Damage Reduction\",\n            \"Type\": \"\"\n        },\n        \"908\": {\n            \"ID\": \"908\",\n            \"Name\": \"Raid Item Drop Rate Boost\",\n            \"Type\": \"\"\n        },\n        \"10000\": {\n            \"ID\": \"10000\",\n            \"Name\": \"Taunt\",\n            \"Type\": \"\"\n        },\n        \"10001\": {\n            \"ID\": \"10001\",\n            \"Name\": \"Stealth\",\n            \"Type\": \"\"\n        },\n        \"10002\": {\n            \"ID\": \"10002\",\n            \"Name\": \"Shield (old)\",\n            \"Type\": \"\"\n        },\n        \"10003\": {\n            \"ID\": \"10003\",\n            \"Name\": \"Nullify Sphere Effects (Sphere Lock)\",\n            \"Type\": \"\"\n        },\n        \"10004\": {\n            \"ID\": \"10004\",\n            \"Name\": \"Damage Immunity\",\n            \"Type\": \"\"\n        },\n        \"10005\": {\n            \"ID\": \"10005\",\n            \"Name\": \"Turn Skip (short duration)\",\n            \"Type\": \"\"\n        },\n        \"10006\": {\n            \"ID\": \"10006\",\n            \"Name\": \"Turn Skip (long duration)\",\n            \"Type\": \"\"\n        },\n        \"10007\": {\n            \"ID\": \"10007\",\n            \"Name\": \"Evasion\",\n            \"Type\": \"\"\n        },\n        \"10009\": {\n            \"ID\": \"10009\",\n            \"Name\": \"\",\n            \"Type\": \"\"\n        },\n        \"10012\": {\n            \"ID\": \"10012\",\n            \"Name\": \"OD Drain\",\n            \"Type\": \"\"\n        },\n        \"10015\": {\n            \"ID\": \"10015\",\n            \"Name\": \"Elemental Spark Boost\",\n            \"Type\": \"\"\n        },\n        \"10016\": {\n            \"ID\": \"10016\",\n            \"Name\": \"Element Critical Damage Boost\",\n            \"Type\": \"\"\n        },\n        \"10017\": {\n            \"ID\": \"10017\",\n            \"Name\": \"Elemental Shield\",\n            \"Type\": \"\"\n        },\n        \"10018\": {\n            \"ID\": \"10018\",\n            \"Name\": \"Max HP Reduction\",\n            \"Type\": \"\"\n        },\n        \"10019\": {\n            \"ID\": \"10019\",\n            \"Name\": \"Effect Purge\",\n            \"Type\": \"\"\n        },\n        \"10020\": {\n            \"ID\": \"10020\",\n            \"Name\": \"Piercing Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"10021\": {\n            \"ID\": \"10021\",\n            \"Name\": \"Active Healing Reduction\",\n            \"Type\": \"\"\n        },\n        \"10022\": {\n            \"ID\": \"10022\",\n            \"Name\": \"Passive Healing Reduction\",\n            \"Type\": \"\"\n        },\n        \"10023\": {\n            \"ID\": \"10023\",\n            \"Name\": \"HC Efficacy Reduction\",\n            \"Type\": \"\"\n        },\n        \"10025\": {\n            \"ID\": \"10025\",\n            \"Name\": \"KO Resistance Negation\",\n            \"Type\": \"\"\n        },\n        \"10026\": {\n            \"ID\": \"10026\",\n            \"Name\": \"Doom\",\n            \"Type\": \"\"\n        },\n        \"11000\": {\n            \"ID\": \"11000\",\n            \"Name\": \"Negative HP-Scaled Damage\",\n            \"Type\": \"Attack\"\n        },\n        \"11001\": {\n            \"ID\": \"11001\",\n            \"Name\": \"Max HP% DoT of Weaker Element Enemies\",\n            \"Type\": \"\"\n        },\n        \"11002\": {\n            \"ID\": \"11002\",\n            \"Name\": \"HP Limit Break, Convert to HP\",\n            \"Type\": \"\"\n        },\n        \"11003\": {\n            \"ID\": \"11003\",\n            \"Name\": \"Effect Negation\",\n            \"Type\": \"\"\n        },\n        \"70001\": {\n            \"ID\": \"70001\",\n            \"Name\": \"Mana Bubble Shield\",\n            \"Type\": \"\"\n        },\n        \"70002\": {\n            \"ID\": \"70002\",\n            \"Name\": \"Recast\",\n            \"Type\": \"\"\n        },\n        \"2-5\": {\n            \"ID\": \"2-5\",\n            \"Name\": \"Burst Heal and DEF/REC Boost\",\n            \"Type\": \"\"\n        }\n    });\n\n    var ArenaCondition;\n    (function (ArenaCondition) {\n        /* eslint-disable @typescript-eslint/camelcase */\n        ArenaCondition[\"hp_50pr_under\"] = \"hp_50pr_under\";\n        ArenaCondition[\"hp_50pr_over\"] = \"hp_50pr_over\";\n        ArenaCondition[\"hp_75pr_under\"] = \"hp_75pr_under\";\n        ArenaCondition[\"hp_25pr_under\"] = \"hp_25pr_under\";\n        ArenaCondition[\"hp_min\"] = \"hp_min\";\n        ArenaCondition[\"hp_max\"] = \"hp_max\";\n        ArenaCondition[\"atk_max\"] = \"atk_max\";\n        ArenaCondition[\"random\"] = \"random\";\n        /* eslint-enable @typescript-eslint/camelcase */\n    })(ArenaCondition || (ArenaCondition = {}));\n    var MoveType;\n    (function (MoveType) {\n        MoveType[MoveType[\"Moving\"] = 1] = \"Moving\";\n        MoveType[MoveType[\"Teleporting\"] = 2] = \"Teleporting\";\n        MoveType[MoveType[\"NonMoving\"] = 3] = \"NonMoving\";\n    })(MoveType || (MoveType = {}));\n    var TargetArea;\n    (function (TargetArea) {\n        TargetArea[\"Aoe\"] = \"aoe\";\n        TargetArea[\"Single\"] = \"single\";\n        TargetArea[\"Random\"] = \"random\";\n    })(TargetArea || (TargetArea = {}));\n    var TargetAreaShorthand;\n    (function (TargetAreaShorthand) {\n        TargetAreaShorthand[\"Aoe\"] = \"AOE\";\n        TargetAreaShorthand[\"Single\"] = \"ST\";\n        TargetAreaShorthand[\"Random\"] = \"RT\";\n    })(TargetAreaShorthand || (TargetAreaShorthand = {}));\n    var TargetType;\n    (function (TargetType) {\n        TargetType[\"Self\"] = \"self\";\n        TargetType[\"Party\"] = \"party\";\n        TargetType[\"Enemy\"] = \"enemy\";\n    })(TargetType || (TargetType = {}));\n    var SpPassiveType;\n    (function (SpPassiveType) {\n        SpPassiveType[\"AddPassive\"] = \"passive\";\n        SpPassiveType[\"EnhanceBb\"] = \"add to bb\";\n        SpPassiveType[\"EnhanceSbb\"] = \"add to sbb\";\n        SpPassiveType[\"EnhanceUbb\"] = \"add to ubb\";\n        SpPassiveType[\"EnhancePassive\"] = \"add to passive\";\n    })(SpPassiveType || (SpPassiveType = {}));\n    var SphereTypeName;\n    (function (SphereTypeName) {\n        SphereTypeName[\"None\"] = \"None\";\n        SphereTypeName[\"Status Enhancing\"] = \"Status Enhancing\";\n        SphereTypeName[\"Critical\"] = \"Critical\";\n        SphereTypeName[\"Drop\"] = \"Drop\";\n        SphereTypeName[\"Ailment Inducing\"] = \"Ailment Inducing\";\n        SphereTypeName[\"Element Fusion\"] = \"Element Fusion\";\n        SphereTypeName[\"BB Gauge\"] = \"BB Gauge\";\n        SphereTypeName[\"HP Recovery\"] = \"HP Recovery\";\n        SphereTypeName[\"Target Setting\"] = \"Target Setting\";\n        SphereTypeName[\"Damage Deflecting\"] = \"Damage Deflecting\";\n        SphereTypeName[\"Damage Reducing\"] = \"Damage Reducing\";\n        SphereTypeName[\"Spark\"] = \"Spark\";\n        SphereTypeName[\"Defense Piercing\"] = \"Defense Piercing\";\n        SphereTypeName[\"Attack Boosting\"] = \"Attack Boosting\";\n        SphereTypeName[\"Special\"] = \"Special\";\n    })(SphereTypeName || (SphereTypeName = {}));\n    var SphereTypeId;\n    (function (SphereTypeId) {\n        SphereTypeId[SphereTypeId[\"None\"] = 0] = \"None\";\n        SphereTypeId[SphereTypeId[\"Status Enhancing\"] = 1] = \"Status Enhancing\";\n        SphereTypeId[SphereTypeId[\"Critical\"] = 2] = \"Critical\";\n        SphereTypeId[SphereTypeId[\"Drop\"] = 3] = \"Drop\";\n        SphereTypeId[SphereTypeId[\"Ailment Inducing\"] = 4] = \"Ailment Inducing\";\n        SphereTypeId[SphereTypeId[\"Element Fusion\"] = 5] = \"Element Fusion\";\n        SphereTypeId[SphereTypeId[\"BB Gauge\"] = 6] = \"BB Gauge\";\n        SphereTypeId[SphereTypeId[\"HP Recovery\"] = 7] = \"HP Recovery\";\n        SphereTypeId[SphereTypeId[\"Target Setting\"] = 8] = \"Target Setting\";\n        SphereTypeId[SphereTypeId[\"Damage Deflecting\"] = 9] = \"Damage Deflecting\";\n        SphereTypeId[SphereTypeId[\"Damage Reducing\"] = 10] = \"Damage Reducing\";\n        SphereTypeId[SphereTypeId[\"Spark\"] = 11] = \"Spark\";\n        SphereTypeId[SphereTypeId[\"Defense Piercing\"] = 12] = \"Defense Piercing\";\n        SphereTypeId[SphereTypeId[\"Attack Boosting\"] = 13] = \"Attack Boosting\";\n        SphereTypeId[SphereTypeId[\"Special\"] = 14] = \"Special\";\n    })(SphereTypeId || (SphereTypeId = {}));\n    var SpCategoryName;\n    (function (SpCategoryName) {\n        SpCategoryName[\"Parameter Boost\"] = \"Parameter Boost\";\n        SpCategoryName[\"Spark\"] = \"Spark\";\n        SpCategoryName[\"Critical Hits\"] = \"Critical Hits\";\n        SpCategoryName[\"Attack Boost\"] = \"Attack Boost\";\n        SpCategoryName[\"BB Gauge\"] = \"BB Gauge\";\n        SpCategoryName[\"HP Recovery\"] = \"HP Recovery\";\n        SpCategoryName[\"Drops\"] = \"Drops\";\n        SpCategoryName[\"Ailment Resistance\"] = \"Ailment Resistance\";\n        SpCategoryName[\"Ailment Infliction\"] = \"Ailment Infliction\";\n        SpCategoryName[\"Damage Reduction\"] = \"Damage Reduction\";\n        SpCategoryName[\"Special\"] = \"Special\";\n        SpCategoryName[\"Unknown\"] = \"Unknown\";\n    })(SpCategoryName || (SpCategoryName = {}));\n    var SpCategoryId;\n    (function (SpCategoryId) {\n        SpCategoryId[\"Parameter Boost\"] = \"1\";\n        SpCategoryId[\"Spark\"] = \"2\";\n        SpCategoryId[\"Critical Hits\"] = \"3\";\n        SpCategoryId[\"Attack Boost\"] = \"4\";\n        SpCategoryId[\"BB Gauge\"] = \"5\";\n        SpCategoryId[\"HP Recovery\"] = \"6\";\n        SpCategoryId[\"Drops\"] = \"7\";\n        SpCategoryId[\"Ailment Resistance\"] = \"8\";\n        SpCategoryId[\"Ailment Infliction\"] = \"9\";\n        SpCategoryId[\"Damage Reduction\"] = \"10\";\n        SpCategoryId[\"Special\"] = \"11\";\n    })(SpCategoryId || (SpCategoryId = {}));\n    var UnitAnimationKey;\n    (function (UnitAnimationKey) {\n        UnitAnimationKey[\"Attack\"] = \"attack\";\n        UnitAnimationKey[\"Idle\"] = \"idle\";\n        UnitAnimationKey[\"Move\"] = \"move\";\n    })(UnitAnimationKey || (UnitAnimationKey = {}));\n    var UnitElement;\n    (function (UnitElement) {\n        UnitElement[\"Fire\"] = \"fire\";\n        UnitElement[\"Water\"] = \"water\";\n        UnitElement[\"Earth\"] = \"earth\";\n        UnitElement[\"Thunder\"] = \"thunder\";\n        UnitElement[\"Light\"] = \"light\";\n        UnitElement[\"Dark\"] = \"dark\";\n    })(UnitElement || (UnitElement = {}));\n    var UnitGender;\n    (function (UnitGender) {\n        UnitGender[\"Male\"] = \"male\";\n        UnitGender[\"Female\"] = \"female\";\n        UnitGender[\"Other\"] = \"other\";\n    })(UnitGender || (UnitGender = {}));\n    var UnitGettingType;\n    (function (UnitGettingType) {\n        UnitGettingType[\"Ineligible\"] = \"not eligible for achievement\";\n        UnitGettingType[\"Farmable\"] = \"farmable\";\n        UnitGettingType[\"RareSummon\"] = \"rare summon\";\n    })(UnitGettingType || (UnitGettingType = {}));\n    var UnitKind;\n    (function (UnitKind) {\n        UnitKind[\"Normal\"] = \"normal\";\n        UnitKind[\"Evolution\"] = \"evo\";\n        UnitKind[\"Enhancing\"] = \"enhancing\";\n        UnitKind[\"Sale\"] = \"sale\";\n    })(UnitKind || (UnitKind = {}));\n    var UnitType;\n    (function (UnitType) {\n        UnitType[\"Lord\"] = \"lord\";\n        UnitType[\"Anima\"] = \"anima\";\n        UnitType[\"Breaker\"] = \"breaker\";\n        UnitType[\"Guardian\"] = \"guardian\";\n        UnitType[\"Oracle\"] = \"oracle\";\n        UnitType[\"Rex\"] = \"rex\";\n    })(UnitType || (UnitType = {}));\n    var ItemType;\n    (function (ItemType) {\n        ItemType[\"Consumable\"] = \"consumable\";\n        ItemType[\"Material\"] = \"material\";\n        ItemType[\"Sphere\"] = \"sphere\";\n        ItemType[\"EvolutionMaterial\"] = \"evomat\";\n        ItemType[\"SummonerConsumable\"] = \"summoner_consumable\";\n        ItemType[\"LeaderSkillSphere\"] = \"ls_sphere\";\n    })(ItemType || (ItemType = {}));\n    var MimicUnitIds;\n    (function (MimicUnitIds) {\n        MimicUnitIds[\"Mimic\"] = \"60142\";\n        MimicUnitIds[\"BatMimic\"] = \"60143\";\n        MimicUnitIds[\"DragonMimic\"] = \"60144\";\n        MimicUnitIds[\"MetalMimic\"] = \"60224\";\n    })(MimicUnitIds || (MimicUnitIds = {}));\n    /**\n     * @description Known values for the monster groups used in {@link IMimicInfo}\n     */\n    const MimicMonsterGroupMapping = {\n        '1000': MimicUnitIds.Mimic,\n        '1100': MimicUnitIds.BatMimic,\n        '1101': MimicUnitIds.BatMimic,\n        '1200': MimicUnitIds.DragonMimic,\n        '1300': MimicUnitIds.MetalMimic,\n    };\n\n    var datamineTypes = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        get ArenaCondition () { return ArenaCondition; },\n        get MoveType () { return MoveType; },\n        get TargetArea () { return TargetArea; },\n        get TargetAreaShorthand () { return TargetAreaShorthand; },\n        get TargetType () { return TargetType; },\n        get SpPassiveType () { return SpPassiveType; },\n        get SphereTypeName () { return SphereTypeName; },\n        get SphereTypeId () { return SphereTypeId; },\n        get SpCategoryName () { return SpCategoryName; },\n        get SpCategoryId () { return SpCategoryId; },\n        get UnitAnimationKey () { return UnitAnimationKey; },\n        get UnitElement () { return UnitElement; },\n        get UnitGender () { return UnitGender; },\n        get UnitGettingType () { return UnitGettingType; },\n        get UnitKind () { return UnitKind; },\n        get UnitType () { return UnitType; },\n        get ItemType () { return ItemType; },\n        get MimicUnitIds () { return MimicUnitIds; },\n        MimicMonsterGroupMapping: MimicMonsterGroupMapping\n    });\n\n    /**\n     * @description Get the associated metadata entry for a given proc ID\n     * @param id proc ID to get metadata for\n     * @returns corresponding proc metadata entry if it exists, undefined otherwise\n     */\n    function getMetadataForProc(id) {\n        return Object.hasOwnProperty.call(PROC_METADATA, id)\n            ? PROC_METADATA[id]\n            : (void 0);\n    }\n    /**\n     * @description Get the associated metadata entry for a given passive ID\n     * @param id passive ID to get metadata for\n     * @returns corresponding passive metadata entry if it exists, undefined otherwise\n     */\n    function getMetadataForPassive(id) {\n        return Object.hasOwnProperty.call(PASSIVE_METADATA, id)\n            ? PASSIVE_METADATA[id]\n            : (void 0);\n    }\n    /**\n     * @description Determine if a given proc ID's type is an attack\n     * @param id proc ID to check\n     * @returns whether the given ID corresponds to a proc ID whose type is attack\n     */\n    function isAttackingProcId(id) {\n        const metadataEntry = getMetadataForProc(id);\n        return !!metadataEntry && metadataEntry.Type === ProcBuffType.Attack;\n    }\n    /**\n     * @description Get the associated name for a given proc ID\n     * @param id proc ID to get the name of\n     * @returns the name of the proc ID if it exists, empty string otherwise\n     */\n    function getNameForProc(id) {\n        const metadataEntry = getMetadataForProc(id);\n        return (!!metadataEntry && metadataEntry.Name) || '';\n    }\n    /**\n     * @description Get the associated name for a given passive ID\n     * @param id passive ID to get the name of\n     * @returns the name of the passive ID if it exists, empty string otherwise\n     */\n    function getNameForPassive(id) {\n        const metadataEntry = getMetadataForPassive(id);\n        return (!!metadataEntry && metadataEntry.Name) || '';\n    }\n    /**\n     * @description Determine if a given effect object is a proc effect based on existing properties.\n     * Do note that it does not check the validity of each property, only the existence.\n     * @param effect object to check\n     * @returns whether the given effect object is considered a proc effect based on its properties\n     */\n    function isProcEffect(effect) {\n        return !!effect &&\n            typeof effect === 'object' &&\n            (Object.hasOwnProperty.call(effect, 'proc id') || Object.hasOwnProperty.call(effect, 'unknown proc id'));\n    }\n    /**\n     * @description Determine if a given effect object is a passive effect based on existing properties.\n     * Do note that it does not check the validity of each property, only the existence.\n     * @param effect object to check\n     * @returns whether the given effect object is considered a passive effect based on its properties\n     */\n    function isPassiveEffect(effect) {\n        return !!effect &&\n            typeof effect === 'object' &&\n            (Object.hasOwnProperty.call(effect, 'passive id') || Object.hasOwnProperty.call(effect, 'unknown passive id'));\n    }\n    /**\n     * @description Create a list of objects that contain both the effect data and its corresponding damage frame\n     * @param effects List of proc effects to combine; must be the same length as the `damageFrames`\n     * @param damageFrames List of damage frames whose index corresponds with the effect in the `effects` list\n     * @returns collection of composite objects that contain the proc effect and the corresponding frames entry\n     */\n    function combineEffectsAndDamageFrames(effects, damageFrames) {\n        let combinedEntries = [];\n        if (Array.isArray(effects) && effects.length > 0 && Array.isArray(damageFrames) && effects.length === damageFrames.length) {\n            combinedEntries = effects.map((effect, i) => {\n                const correspondingFrameEntry = damageFrames[i];\n                return {\n                    delay: effect['effect delay time(ms)/frame'],\n                    effect,\n                    frames: correspondingFrameEntry,\n                    id: `${effect['proc id'] || effect['unknown proc id']}`,\n                    targetArea: effect['random attack'] ? TargetArea.Random : effect['target area'],\n                    targetType: effect['target type'],\n                };\n            });\n        }\n        return combinedEntries;\n    }\n    /**\n     * @description Get the proc/passive ID of a given object\n     * @param effect Object to get the effect ID from\n     * @returns The proc/passive ID of the input effect if it exists; empty string otherwise\n     */\n    function getEffectId(effect) {\n        let resultId = '';\n        if (effect) {\n            resultId = effect['proc id'] || effect['unknown proc id'] ||\n                effect['passive id'] || effect['unknown passive id'] || '';\n        }\n        return resultId;\n    }\n    /**\n     * @description Get the name of a given object\n     * @param effect Object to get the name from\n     * @returns The name of the input effect if it exists; empty string otherwise\n     */\n    function getEffectName(effect) {\n        let resultName = '';\n        const effectId = getEffectId(effect);\n        if (isPassiveEffect(effect)) {\n            resultName = getNameForPassive(effectId);\n        }\n        else if (isProcEffect(effect)) {\n            resultName = getNameForProc(effectId);\n        }\n        return resultName;\n    }\n\n    var buffs = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getMetadataForProc: getMetadataForProc,\n        getMetadataForPassive: getMetadataForPassive,\n        isAttackingProcId: isAttackingProcId,\n        getNameForProc: getNameForProc,\n        getNameForPassive: getNameForPassive,\n        isProcEffect: isProcEffect,\n        isPassiveEffect: isPassiveEffect,\n        combineEffectsAndDamageFrames: combineEffectsAndDamageFrames,\n        getEffectId: getEffectId,\n        getEffectName: getEffectName\n    });\n\n    var KNOWN_PROC_ID;\n    (function (KNOWN_PROC_ID) {\n        KNOWN_PROC_ID[\"BurstHeal\"] = \"2\";\n    })(KNOWN_PROC_ID || (KNOWN_PROC_ID = {}));\n    var KNOWN_PASSIVE_ID;\n    (function (KNOWN_PASSIVE_ID) {\n        KNOWN_PASSIVE_ID[\"TriggeredEffect\"] = \"66\";\n    })(KNOWN_PASSIVE_ID || (KNOWN_PASSIVE_ID = {}));\n\n    /**\n     * @description Grab the level entry of a burst at a given level (or the last level if no level is given)\n     * @param burst Burst to get level entry from\n     * @param level Optional 1-indexed level to get; if not specified, the last level of the burst is used.\n     * @returns the level entry of a burst at a given level (or last level if no level is given) if it exists, undefined otherwise\n     */\n    function getLevelEntryForBurst(burst, level) {\n        const burstEffectsByLevel = (burst && Array.isArray(burst.levels)) ? burst.levels : [];\n        let levelIndex;\n        if (level !== null && !isNaN(level)) {\n            // 1-indexed\n            levelIndex = (+level - 1);\n        }\n        else {\n            // default to last entry in burst\n            levelIndex = burstEffectsByLevel.length - 1;\n        }\n        return burstEffectsByLevel[levelIndex];\n    }\n    /**\n     * @description Grab the effects at the level entry of a burst at a given level (or the last level if no level is given)\n     * @param burst Burst to get effects from\n     * @param level Optional 1-indexed level to get entries from; if not specified, the last level of the burst is used.\n     * @returns the effects at the level entry of a burst at a given level (or last level if no level is given) if it exists, an empty array otherwise\n     */\n    function getEffectsForBurst(burst, level) {\n        const levelEntry = getLevelEntryForBurst(burst, level);\n        return (levelEntry && Array.isArray(levelEntry.effects)) ? levelEntry.effects : [];\n    }\n    /**\n     * @description Get the extra attack damage frames entry based on the damage frames of a burst. Also apply the given effect delay to the resulting damage frames entry.\n     * @param damageFrames damage frames that each have their own proc ID\n     * @param effectDelay optional effect delay to apply to the resulting damage frames entry\n     * @returns damage frames entry whose frames are based on the input damage frames\n     */\n    function getExtraAttackDamageFramesEntry(damageFrames, effectDelay = '0.0/0') {\n        // relevant frames are all effects for healing or attacking\n        const inputFrames = Array.isArray(damageFrames) ? damageFrames : [];\n        const relevantFrames = inputFrames.filter(frame => {\n            const procId = getEffectId(frame);\n            return procId === KNOWN_PROC_ID.BurstHeal || isAttackingProcId(procId);\n        });\n        const unifiedFrames = relevantFrames.reduce((acc, frameEntry, index) => {\n            const keepFirstFrame = index === 0;\n            const numFrames = frameEntry['frame times'].length;\n            const damageDistribution = frameEntry['hit dmg% distribution'];\n            const frameTimes = frameEntry['frame times'];\n            for (let frameIndex = keepFirstFrame ? 0 : 1; frameIndex < numFrames; ++frameIndex) {\n                acc.push({\n                    damage: damageDistribution[frameIndex],\n                    time: frameTimes[frameIndex],\n                });\n            }\n            return acc;\n        }, []);\n        const resultDamageFramesEntry = {\n            'effect delay time(ms)/frame': effectDelay,\n            'frame times': [],\n            'hit dmg% distribution': [],\n            'hit dmg% distribution (total)': 0,\n            hits: 0,\n        };\n        unifiedFrames.sort((a, b) => a.time - b.time)\n            .forEach(({ time, damage }) => {\n            resultDamageFramesEntry['frame times'].push(time);\n            resultDamageFramesEntry['hit dmg% distribution'].push(damage);\n            resultDamageFramesEntry['hit dmg% distribution (total)'] += damage;\n        });\n        resultDamageFramesEntry.hits = resultDamageFramesEntry['frame times'].length;\n        return resultDamageFramesEntry;\n    }\n\n    var bursts = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLevelEntryForBurst: getLevelEntryForBurst,\n        getEffectsForBurst: getEffectsForBurst,\n        getExtraAttackDamageFramesEntry: getExtraAttackDamageFramesEntry\n    });\n\n    /**\n     * @description Get the effects of a given extra skill\n     * @param skill extra skill to get the effects of\n     * @returns the effects of the given extra skill if they exist, an empty array otherwise\n     */\n    function getEffectsForExtraSkill(skill) {\n        return (skill && Array.isArray(skill.effects)) ? skill.effects : [];\n    }\n\n    var extraSkills = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getEffectsForExtraSkill: getEffectsForExtraSkill\n    });\n\n    /**\n     * @description Get the effects of a given item\n     * @param item item to get the effects of, if any are present\n     * @returns the effects of the given item if they exist, an empty array otherwise\n     */\n    function getEffectsForItem(item) {\n        let result = [];\n        if (item && item.effect) {\n            if (Array.isArray(item.effect)) {\n                result = item.effect;\n            }\n            else if (Array.isArray(item.effect.effect)) {\n                const { effect, target_area: targetArea, target_type: targetType } = item.effect;\n                result = effect.map(e => {\n                    // apply target data to each effect\n                    const fullProcEffect = Object.assign({}, e);\n                    fullProcEffect['target area'] = targetArea;\n                    fullProcEffect['target type'] = targetType;\n                    return fullProcEffect;\n                });\n            }\n        }\n        return result;\n    }\n    /**\n     * @description Generate a URL to display the image with the given item thumbnail filename\n     * @param baseContentUrl Base URL of the server\n     * @param fileName name of the file that represents the thumbnail image for a given item\n     * @returns generated URL based on the given content URL and file name\n     */\n    function getItemImageUrl(baseContentUrl, fileName) {\n        return `${baseContentUrl || ''}/item/${fileName || ''}`;\n    }\n\n    var items = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getEffectsForItem: getEffectsForItem,\n        getItemImageUrl: getItemImageUrl\n    });\n\n    /**\n     * @description Get the effects of a given leader skill\n     * @param skill leader skill to get the effects of\n     * @returns the effects of the given leader skill if they exist, an empty array otherwise\n     */\n    function getEffectsForLeaderSkill(skill) {\n        return skill && Array.isArray(skill.effects) ? skill.effects : [];\n    }\n\n    var leaderSkills = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getEffectsForLeaderSkill: getEffectsForLeaderSkill\n    });\n\n    /**\n     * @description Generate the file names for each of the image type for a given unit ID\n     * @param id the unit ID to use to generate the file names\n     * @param suffix optional parameter that's useful for things like alternate art\n     * @returns set of file names for each image type (spritesheet, battle avatar, guide avatar, full illustration)\n     */\n    function getUnitImageFileNames(id, suffix = '') {\n        const fileNameSuffix = `${id || ''}${suffix || ''}.png`;\n        return {\n            spritesheet: `unit_anime_${fileNameSuffix}`,\n            battleAvatar: `unit_ills_battle_${fileNameSuffix}`,\n            guideAvatar: `unit_ills_thum_${fileNameSuffix}`,\n            fullIllustration: `unit_ills_full_${fileNameSuffix}`,\n        };\n    }\n    /**\n     * @description Generate a URL to display the image with the given unit filename\n     * @param baseContentUrl Base URL of the server\n     * @param fileName name of the file that represents an image for a given unit\n     * @returns generated URL based on the given content URL and file name\n     */\n    function getUnitImageUrl(baseContentUrl, fileName) {\n        return `${baseContentUrl || ''}/unit/img/${fileName || ''}`;\n    }\n\n    var units = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getUnitImageFileNames: getUnitImageFileNames,\n        getUnitImageUrl: getUnitImageUrl\n    });\n\n    /**\n     * @ignore\n     */\n    const CHARACTER_CODE_FOR_UPPERCASE_A = 'A'.charCodeAt(0);\n    /**\n     * @ignore\n     */\n    const CHARACTER_CODE_FOR_LOWERCASE_A = 'a'.charCodeAt(0);\n    /**\n     * @ignore\n     */\n    const CHARACTER_CODE_FOR_NUMBER_0 = '0'.charCodeAt(0);\n    /**\n     * @description Get the effects of a given SP Enhancement Entry\n     * @param entry SP Enhancement Entry to get the effects of\n     * @returns the effects of the given SP Enhancement Entry if they exist, an empty array otherwise\n     */\n    function getEffectsForSpEnhancement(entry) {\n        const result = [];\n        if (entry && entry.skill && Array.isArray(entry.skill.effects)) {\n            const effectWrappers = entry.skill.effects;\n            effectWrappers.forEach(effectWrapper => {\n                Object.keys(effectWrapper).forEach(spType => {\n                    const originalEffect = effectWrapper[spType];\n                    const unwrappedEffect = Object.assign(Object.assign({}, originalEffect), { sp_type: spType });\n                    result.push(unwrappedEffect);\n                });\n            });\n        }\n        return result;\n    }\n    /**\n     * @description Get the associated category name with a given category ID.\n     * @param categoryId Category ID to get the name of\n     * @returns The name of the given category ID or the string 'Unknown'.\n     */\n    function getSpCategoryName(categoryId) {\n        let result;\n        const numericalCategoryId = +categoryId;\n        switch (numericalCategoryId) {\n            case 1:\n                result = SpCategoryName['Parameter Boost'];\n                break;\n            case 2:\n                result = SpCategoryName.Spark;\n                break;\n            case 3:\n                result = SpCategoryName['Critical Hits'];\n                break;\n            case 4:\n                result = SpCategoryName['Attack Boost'];\n                break;\n            case 5:\n                result = SpCategoryName['BB Gauge'];\n                break;\n            case 6:\n                result = SpCategoryName['HP Recovery'];\n                break;\n            case 7:\n                result = SpCategoryName.Drops;\n                break;\n            case 8:\n                result = SpCategoryName['Ailment Resistance'];\n                break;\n            case 9:\n                result = SpCategoryName['Ailment Infliction'];\n                break;\n            case 10:\n                result = SpCategoryName['Damage Reduction'];\n                break;\n            case 11:\n                result = SpCategoryName.Special;\n                break;\n            default:\n                result = SpCategoryName.Unknown;\n                break;\n        }\n        return result;\n    }\n    /**\n     * @description Get the corresponding character code for a given index.\n     * It expects an index between 0 and 61 inclusive; will return an empty string if\n     * the given value is outside of the range.\n     * @param index Index of an SP entry in a given skills array\n     * @returns The corresponding single alphanumeric character to the given index\n     * or an empty string if the index is invalid.\n     */\n    function spIndexToCode(index) {\n        let result = '';\n        let correspondingCharacterCode = -1;\n        if (Number.isInteger(index)) {\n            if (index >= 0 && index <= 25) { // A-Z\n                correspondingCharacterCode = index + CHARACTER_CODE_FOR_UPPERCASE_A;\n            }\n            else if (index >= 26 && index <= 51) { // a-z\n                correspondingCharacterCode = (index - 26) + CHARACTER_CODE_FOR_LOWERCASE_A;\n            }\n            else if (index >= 52 && index <= 61) { // 0-9\n                correspondingCharacterCode = (index - 52) + CHARACTER_CODE_FOR_NUMBER_0;\n            }\n        }\n        if (correspondingCharacterCode !== -1) {\n            result = String.fromCharCode(correspondingCharacterCode);\n        }\n        return result;\n    }\n    /**\n     * @description Get the corresponding index for a given character code.\n     * It expects an alphanumeric character and will return -1 otherwise.\n     * @param code Character code an SP entry in a given skills array\n     * @returns The corresponding index to the given character or -1 if the\n     * character is invalid.\n     */\n    function spCodeToIndex(code) {\n        let result = -1;\n        let characterCodeOffset = -1;\n        if (!!code && typeof code === 'string' && code.length === 1) {\n            if (code >= 'A' && code <= 'Z') {\n                characterCodeOffset = CHARACTER_CODE_FOR_UPPERCASE_A;\n            }\n            else if (code >= 'a' && code <= 'z') {\n                characterCodeOffset = CHARACTER_CODE_FOR_LOWERCASE_A - 26;\n            }\n            else if (code >= '0' && code <= '9') {\n                characterCodeOffset = CHARACTER_CODE_FOR_NUMBER_0 - 52;\n            }\n        }\n        if (characterCodeOffset !== -1) {\n            result = code.charCodeAt(0) - characterCodeOffset;\n        }\n        return result;\n    }\n    /**\n     * @description Extract the ID of a string in the format of `number@actualId`. If there\n     * is no value after the @ character or if no @ character is present, the original ID is returned.\n     * This is particularly useful for extracting the ID of [[ISpEnhancementEntry.dependency|`ISpEnhancementEntry.dependency`]]\n     * @param id Original SP Enhancement Entry ID\n     * @returns The ID of a string in the format of `number@actualId`, or the original input if\n     * there is no @ character or no value after the @ character.\n     */\n    function getSpEntryId(id) {\n        return (typeof id === 'string' && id.split('@')[1]) || id;\n    }\n    /**\n     * @description Get the first SP Enhancement Entry that matches the given SP Entry ID, if it exists.\n     * @param id SP Enhancement entry ID\n     * @param entries Collection of SP Enhancement entries to search in\n     * @returns The corresponding SP Enhancement entry with the given SP ID, undefined otherwise.\n     */\n    function getSpEntryWithId(id, entries) {\n        const spId = getSpEntryId(id);\n        return (id && Array.isArray(entries) && entries.find(e => getSpEntryId(e && e.id) === spId)) || void 0;\n    }\n    /**\n     * @description Get all SP Enhancement entries that one would need to unlock the given SP entry.\n     * @param entry SP Entry to get dependencies for.\n     * @param allEntries Collection of SP Entries to search in.\n     * @param addedEntries Entries that have already been added to the resulting collection; used to handle circular references.\n     * @returns Collection of SP Enhancement entries (if any) that are required to unlock the given SP entry.\n     */\n    function getAllDependenciesForSpEntry(entry, allEntries, addedEntries = new Set()) {\n        let dependencies = [];\n        if (entry && entry.dependency && Array.isArray(allEntries) && allEntries.length > 0) {\n            const dependencyId = getSpEntryId(entry.dependency);\n            const dependencyEntry = allEntries.find(s => getSpEntryId(s && s.id) === dependencyId);\n            if (dependencyEntry && !addedEntries.has(dependencyEntry)) {\n                addedEntries.add(dependencyEntry);\n                const subDependencies = getAllDependenciesForSpEntry(dependencyEntry, allEntries, addedEntries);\n                dependencies = [dependencyEntry].concat(subDependencies);\n            }\n        }\n        return dependencies;\n    }\n    /**\n     * @description Get all SP Enhancement entries that require the given SP entry in order to be unlockable.\n     * @param entry SP Entry to get dependents for.\n     * @param allEntries Collection of SP Entries to search in.\n     * @param addedEntries Entries that have already been added to the resulting collection; used to handle circular references.\n     * @returns Collection of SP Enhancement entries (if any) that require the given SP entry in order to be unlockable.\n     */\n    function getAllEntriesThatDependOnSpEntry(entry, allEntries, addedEntries = new Set()) {\n        let dependents = [];\n        if (entry && entry.id && Array.isArray(allEntries) && allEntries.length > 0) {\n            const entryId = entry.id;\n            dependents = allEntries\n                .filter(s => {\n                return s.dependency &&\n                    s.dependency.includes(entryId) &&\n                    !addedEntries.has(s);\n            });\n            dependents.forEach(dependent => {\n                addedEntries.add(dependent);\n                const subDependents = getAllEntriesThatDependOnSpEntry(dependent, allEntries, addedEntries);\n                dependents = dependents.concat(subDependents);\n            });\n        }\n        return dependents;\n    }\n\n    var spEnhancements = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getEffectsForSpEnhancement: getEffectsForSpEnhancement,\n        getSpCategoryName: getSpCategoryName,\n        spIndexToCode: spIndexToCode,\n        spCodeToIndex: spCodeToIndex,\n        getSpEntryId: getSpEntryId,\n        getSpEntryWithId: getSpEntryWithId,\n        getAllDependenciesForSpEntry: getAllDependenciesForSpEntry,\n        getAllEntriesThatDependOnSpEntry: getAllEntriesThatDependOnSpEntry\n    });\n\n    /* NOTE: this file is automatically generated; do not edit this file */\n    var version = '0.5.0';\n\n    var index = Object.freeze({\n        buffs,\n        bursts,\n        datamineTypes,\n        extraSkills,\n        items,\n        leaderSkills,\n        units,\n        spEnhancements,\n        version,\n    });\n\n    return index;\n\n}());\n\n","export var ProcBuffType;\n(function (ProcBuffType) {\n    ProcBuffType[\"Attack\"] = \"Attack\";\n})(ProcBuffType || (ProcBuffType = {}));\n/* eslint-disable */\nexport const PASSIVE_METADATA = Object.freeze({\n    \"1\": {\n        \"ID\": \"1\",\n        \"Name\": \"Parameter Boost\"\n    },\n    \"2\": {\n        \"ID\": \"2\",\n        \"Name\": \"Elemental Parameter Boost\"\n    },\n    \"3\": {\n        \"ID\": \"3\",\n        \"Name\": \"Type-Based Parameter Boost\"\n    },\n    \"4\": {\n        \"ID\": \"4\",\n        \"Name\": \"Status Negation\"\n    },\n    \"5\": {\n        \"ID\": \"5\",\n        \"Name\": \"Elemental Damage Reduction\"\n    },\n    \"6\": {\n        \"ID\": \"6\",\n        \"Name\": \"\"\n    },\n    \"7\": {\n        \"ID\": \"7\",\n        \"Name\": \"\"\n    },\n    \"8\": {\n        \"ID\": \"8\",\n        \"Name\": \"Damage Reduction\"\n    },\n    \"9\": {\n        \"ID\": \"9\",\n        \"Name\": \"Gradual BB Gauge Boost\"\n    },\n    \"10\": {\n        \"ID\": \"10\",\n        \"Name\": \"HC Efficacy\"\n    },\n    \"11\": {\n        \"ID\": \"11\",\n        \"Name\": \"HP-Conditional Parameter Boost\"\n    },\n    \"12\": {\n        \"ID\": \"12\",\n        \"Name\": \"HP-Conditional Drop Rate Boost\"\n    },\n    \"13\": {\n        \"ID\": \"13\",\n        \"Name\": \"BC Fill on Enemy Defeat\"\n    },\n    \"14\": {\n        \"ID\": \"14\",\n        \"Name\": \"Damage Reduction (Chance)\"\n    },\n    \"15\": {\n        \"ID\": \"15\",\n        \"Name\": \"Heal on Enemy Defeat\"\n    },\n    \"16\": {\n        \"ID\": \"16\",\n        \"Name\": \"Heal on Battle Victory\"\n    },\n    \"17\": {\n        \"ID\": \"17\",\n        \"Name\": \"HP Absorption\"\n    },\n    \"19\": {\n        \"ID\": \"19\",\n        \"Name\": \"Drop Rate Boost\"\n    },\n    \"20\": {\n        \"ID\": \"20\",\n        \"Name\": \"Status Infliction\"\n    },\n    \"21\": {\n        \"ID\": \"21\",\n        \"Name\": \"Parameter Boost for First X Turns\"\n    },\n    \"23\": {\n        \"ID\": \"23\",\n        \"Name\": \"BC Fill on Battle Victory\"\n    },\n    \"24\": {\n        \"ID\": \"24\",\n        \"Name\": \"Heal when Attacked (Chance)\"\n    },\n    \"25\": {\n        \"ID\": \"25\",\n        \"Name\": \"BC Fill when Hit (Chance)\"\n    },\n    \"26\": {\n        \"ID\": \"26\",\n        \"Name\": \"Damage Counter (Chance)\"\n    },\n    \"27\": {\n        \"ID\": \"27\",\n        \"Name\": \"Increased Target Chance\"\n    },\n    \"28\": {\n        \"ID\": \"28\",\n        \"Name\": \"Decreased Target Chance\"\n    },\n    \"29\": {\n        \"ID\": \"29\",\n        \"Name\": \"Defense Ignore (Chance)\"\n    },\n    \"30\": {\n        \"ID\": \"30\",\n        \"Name\": \"BB Conditional Parameter Boost\"\n    },\n    \"31\": {\n        \"ID\": \"31\",\n        \"Name\": \"Spark Damage Boost, Boost Drop Rate on Spark\"\n    },\n    \"32\": {\n        \"ID\": \"32\",\n        \"Name\": \"BC Efficacy\"\n    },\n    \"33\": {\n        \"ID\": \"33\",\n        \"Name\": \"Heal over Time\"\n    },\n    \"34\": {\n        \"ID\": \"34\",\n        \"Name\": \"Critical Damage Boost\"\n    },\n    \"35\": {\n        \"ID\": \"35\",\n        \"Name\": \"BC Fill when Normal Attacking\"\n    },\n    \"36\": {\n        \"ID\": \"36\",\n        \"Name\": \"Extra Action\"\n    },\n    \"37\": {\n        \"ID\": \"37\",\n        \"Name\": \"Hit Count Boost\"\n    },\n    \"38\": {\n        \"ID\": \"38\",\n        \"Name\": \"\"\n    },\n    \"39\": {\n        \"ID\": \"39\",\n        \"Name\": \"\"\n    },\n    \"40\": {\n        \"ID\": \"40\",\n        \"Name\": \"Parameter Conversion\"\n    },\n    \"41\": {\n        \"ID\": \"41\",\n        \"Name\": \"Unique Element Count Conditional Parameter Boost\"\n    },\n    \"42\": {\n        \"ID\": \"42\",\n        \"Name\": \"Gender Parameter Boost\"\n    },\n    \"43\": {\n        \"ID\": \"43\",\n        \"Name\": \"Damage Reduction to 1\"\n    },\n    \"44\": {\n        \"ID\": \"44\",\n        \"Name\": \"Flat Parameter Boost\"\n    },\n    \"45\": {\n        \"ID\": \"45\",\n        \"Name\": \"Critical Damage Negation\"\n    },\n    \"46\": {\n        \"ID\": \"46\",\n        \"Name\": \"Parameter Boost Relative to HP Remainaing\"\n    },\n    \"47\": {\n        \"ID\": \"47\",\n        \"Name\": \"BC Fill on Spark\"\n    },\n    \"48\": {\n        \"ID\": \"48\",\n        \"Name\": \"BC Cost Reduction\"\n    },\n    \"49\": {\n        \"ID\": \"49\",\n        \"Name\": \"BB Gauge Consumption Reduction\"\n    },\n    \"50\": {\n        \"ID\": \"50\",\n        \"Name\": \"Elemental Damage Boost\"\n    },\n    \"52\": {\n        \"ID\": \"52\",\n        \"Name\": \"\"\n    },\n    \"53\": {\n        \"ID\": \"53\",\n        \"Name\": \"Critical/Elemental Weakness Damage Negation\"\n    },\n    \"55\": {\n        \"ID\": \"55\",\n        \"Name\": \"Conditional Effect based on HP Threshold\"\n    },\n    \"58\": {\n        \"ID\": \"58\",\n        \"Name\": \"Damage Reduction when Guarding\"\n    },\n    \"59\": {\n        \"ID\": \"59\",\n        \"Name\": \"BC Fill when Attacked when Guarding\"\n    },\n    \"61\": {\n        \"ID\": \"61\",\n        \"Name\": \"BC Fill on Guard\"\n    },\n    \"62\": {\n        \"ID\": \"62\",\n        \"Name\": \"Elemental Damage Reduction\"\n    },\n    \"63\": {\n        \"ID\": \"63\",\n        \"Name\": \"Elemental Damage Reduction for first X Turns\"\n    },\n    \"64\": {\n        \"ID\": \"64\",\n        \"Name\": \"BB Atk Boost\"\n    },\n    \"65\": {\n        \"ID\": \"65\",\n        \"Name\": \"BC Fill on Critical\"\n    },\n    \"66\": {\n        \"ID\": \"66\",\n        \"Name\": \"Add buff to Brave Burst\"\n    },\n    \"69\": {\n        \"ID\": \"69\",\n        \"Name\": \"Chance KO Resistance (Angel Idol)\"\n    },\n    \"70\": {\n        \"ID\": \"70\",\n        \"Name\": \"OD Gauge Fill Rate Boost\"\n    },\n    \"71\": {\n        \"ID\": \"71\",\n        \"Name\": \"Status Counter\"\n    },\n    \"72\": {\n        \"ID\": \"72\",\n        \"Name\": \"Turn End Effects Activate at Turn Start\"\n    },\n    \"73\": {\n        \"ID\": \"73\",\n        \"Name\": \"Parameter Reduction Negation\"\n    },\n    \"74\": {\n        \"ID\": \"74\",\n        \"Name\": \"Attack Boost on Status Afflicted Foes\"\n    },\n    \"75\": {\n        \"ID\": \"75\",\n        \"Name\": \"Spark Vulnerability\"\n    },\n    \"77\": {\n        \"ID\": \"77\",\n        \"Name\": \"Spark Damage Reduction\"\n    },\n    \"78\": {\n        \"ID\": \"78\",\n        \"Name\": \"Conditional Effect after Damage Received Threshold\"\n    },\n    \"79\": {\n        \"ID\": \"79\",\n        \"Name\": \"BC Fill after Damage Received Threshold\"\n    },\n    \"80\": {\n        \"ID\": \"80\",\n        \"Name\": \"Conditional Effect after Damage Dealt Threshold\"\n    },\n    \"81\": {\n        \"ID\": \"81\",\n        \"Name\": \"BC Fill after Damage Dealt Threshold\"\n    },\n    \"82\": {\n        \"ID\": \"82\",\n        \"Name\": \"Conditional Effect after BC Received Threshold\"\n    },\n    \"84\": {\n        \"ID\": \"84\",\n        \"Name\": \"Conditional Effect after HC Received Threshold\"\n    },\n    \"85\": {\n        \"ID\": \"85\",\n        \"Name\": \"BC Fill after HC Received Threshold\"\n    },\n    \"86\": {\n        \"ID\": \"86\",\n        \"Name\": \"Conditional Effect after Spark Threshold\"\n    },\n    \"88\": {\n        \"ID\": \"88\",\n        \"Name\": \"Conditional Effect on Guard\"\n    },\n    \"89\": {\n        \"ID\": \"89\",\n        \"Name\": \"Conditional Effect on Critical\"\n    },\n    \"90\": {\n        \"ID\": \"90\",\n        \"Name\": \"Status Infliction on Critical\"\n    },\n    \"91\": {\n        \"ID\": \"91\",\n        \"Name\": \"\"\n    },\n    \"92\": {\n        \"ID\": \"92\",\n        \"Name\": \"Negate Defense Ignore\"\n    },\n    \"93\": {\n        \"ID\": \"93\",\n        \"Name\": \"Added Elements\"\n    },\n    \"96\": {\n        \"ID\": \"96\",\n        \"Name\": \"Normal Attacks Hit All Foes\"\n    },\n    \"97\": {\n        \"ID\": \"97\",\n        \"Name\": \"Player EXP Boost\"\n    },\n    \"99\": {\n        \"ID\": \"99\",\n        \"Name\": \"\"\n    },\n    \"100\": {\n        \"ID\": \"100\",\n        \"Name\": \"Spark Critical\"\n    },\n    \"101\": {\n        \"ID\": \"101\",\n        \"Name\": \"Heal on Spark\"\n    },\n    \"102\": {\n        \"ID\": \"102\",\n        \"Name\": \"Added Elements\"\n    },\n    \"103\": {\n        \"ID\": \"103\",\n        \"Name\": \"BB Atk Boost when HP Passes Threshold\"\n    },\n    \"104\": {\n        \"ID\": \"104\",\n        \"Name\": \"Spark Boost when HP Passes Threshold\"\n    },\n    \"105\": {\n        \"ID\": \"105\",\n        \"Name\": \"Turn-Based Parameter Boost\"\n    },\n    \"106\": {\n        \"ID\": \"106\",\n        \"Name\": \"Conditional Effect after Activating Overdrive\"\n    },\n    \"107\": {\n        \"ID\": \"107\",\n        \"Name\": \"Add Effect to Leader Skill\"\n    },\n    \"109\": {\n        \"ID\": \"109\",\n        \"Name\": \"BB Gauge Reduction (Chance)\"\n    },\n    \"110\": {\n        \"ID\": \"110\",\n        \"Name\": \"BC Efficacy Reduction (Chance)\"\n    },\n    \"111\": {\n        \"ID\": \"111\",\n        \"Name\": \"Increase Brave Burst Activation Rate\"\n    },\n    \"112\": {\n        \"ID\": \"112\",\n        \"Name\": \"ABP/CBP Boost\"\n    },\n    \"113\": {\n        \"ID\": \"113\",\n        \"Name\": \"Conditional Effect after HP Threshold\"\n    },\n    \"114\": {\n        \"ID\": \"114\",\n        \"Name\": \"Inflict Buff when Attacked\"\n    },\n    \"127\": {\n        \"ID\": \"127\",\n        \"Name\": \"Additional Damage (Damage over Time) Reduction\"\n    },\n    \"128\": {\n        \"ID\": \"128\",\n        \"Name\": \"Damage Reduction from Normal Attacks\"\n    },\n    \"143\": {\n        \"ID\": \"143\",\n        \"Name\": \"Break Atk Parameter Limit\"\n    },\n    \"10008\": {\n        \"ID\": \"10008\",\n        \"Name\": \"Damage Reduction from Specific Sources\"\n    },\n    \"11004\": {\n        \"ID\": \"11004\",\n        \"Name\": \"Elemental Spark Damage Boost\"\n    },\n    \"11005\": {\n        \"ID\": \"11005\",\n        \"Name\": \"Elemental Critical Damage Boost\"\n    },\n    \"11006\": {\n        \"ID\": \"11006\",\n        \"Name\": \"Summoner EXP Boost\"\n    },\n    \"11009\": {\n        \"ID\": \"11009\",\n        \"Name\": \"Effect Duration Boost\"\n    },\n    \"66,1\": {\n        \"ID\": \"66,1\",\n        \"Name\": \"\"\n    }\n});\nexport const PROC_METADATA = Object.freeze({\n    \"0\": {\n        \"ID\": \"0\",\n        \"Name\": \"\",\n        \"Type\": \"\"\n    },\n    \"1\": {\n        \"ID\": \"1\",\n        \"Name\": \"Regular Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"2\": {\n        \"ID\": \"2\",\n        \"Name\": \"Burst Heal\",\n        \"Type\": \"\"\n    },\n    \"3\": {\n        \"ID\": \"3\",\n        \"Name\": \"Heal over Time\",\n        \"Type\": \"\"\n    },\n    \"4\": {\n        \"ID\": \"4\",\n        \"Name\": \"BB Gauge Refill\",\n        \"Type\": \"\"\n    },\n    \"5\": {\n        \"ID\": \"5\",\n        \"Name\": \"Parameter Boost\",\n        \"Type\": \"\"\n    },\n    \"6\": {\n        \"ID\": \"6\",\n        \"Name\": \"Drop Rate\",\n        \"Type\": \"\"\n    },\n    \"7\": {\n        \"ID\": \"7\",\n        \"Name\": \"Guaranteed KO Resistance (Angel Idol)\",\n        \"Type\": \"\"\n    },\n    \"8\": {\n        \"ID\": \"8\",\n        \"Name\": \"Max HP Boost\",\n        \"Type\": \"\"\n    },\n    \"9\": {\n        \"ID\": \"9\",\n        \"Name\": \"Parameter Reduction\",\n        \"Type\": \"\"\n    },\n    \"10\": {\n        \"ID\": \"10\",\n        \"Name\": \"Status Cleanse\",\n        \"Type\": \"\"\n    },\n    \"11\": {\n        \"ID\": \"11\",\n        \"Name\": \"Status Infliction\",\n        \"Type\": \"\"\n    },\n    \"12\": {\n        \"ID\": \"12\",\n        \"Name\": \"Revive (Guaranteed)\",\n        \"Type\": \"\"\n    },\n    \"13\": {\n        \"ID\": \"13\",\n        \"Name\": \"Random Target Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"14\": {\n        \"ID\": \"14\",\n        \"Name\": \"Lifesteal Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"16\": {\n        \"ID\": \"16\",\n        \"Name\": \"Elemental Damage Reduction\",\n        \"Type\": \"\"\n    },\n    \"17\": {\n        \"ID\": \"17\",\n        \"Name\": \"Status Negation\",\n        \"Type\": \"\"\n    },\n    \"18\": {\n        \"ID\": \"18\",\n        \"Name\": \"Damage Reduction\",\n        \"Type\": \"\"\n    },\n    \"19\": {\n        \"ID\": \"19\",\n        \"Name\": \"Gradual BB Gauge Boost\",\n        \"Type\": \"\"\n    },\n    \"20\": {\n        \"ID\": \"20\",\n        \"Name\": \"BC Fill on Hit\",\n        \"Type\": \"\"\n    },\n    \"22\": {\n        \"ID\": \"22\",\n        \"Name\": \"Defense Ignore\",\n        \"Type\": \"\"\n    },\n    \"23\": {\n        \"ID\": \"23\",\n        \"Name\": \"Spark Boost\",\n        \"Type\": \"\"\n    },\n    \"24\": {\n        \"ID\": \"24\",\n        \"Name\": \"Parameter Conversion\",\n        \"Type\": \"\"\n    },\n    \"26\": {\n        \"ID\": \"26\",\n        \"Name\": \"Hit Count Boost\",\n        \"Type\": \"\"\n    },\n    \"27\": {\n        \"ID\": \"27\",\n        \"Name\": \"Proportional Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"28\": {\n        \"ID\": \"28\",\n        \"Name\": \"Fixed Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"29\": {\n        \"ID\": \"29\",\n        \"Name\": \"Multi-Element Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"30\": {\n        \"ID\": \"30\",\n        \"Name\": \"Add Elements\",\n        \"Type\": \"\"\n    },\n    \"31\": {\n        \"ID\": \"31\",\n        \"Name\": \"Instant BB Gauge Fill\",\n        \"Type\": \"\"\n    },\n    \"32\": {\n        \"ID\": \"32\",\n        \"Name\": \"Element Shift\",\n        \"Type\": \"\"\n    },\n    \"33\": {\n        \"ID\": \"33\",\n        \"Name\": \"Buff Removal (Chance)\",\n        \"Type\": \"\"\n    },\n    \"34\": {\n        \"ID\": \"34\",\n        \"Name\": \"BB Gauge Reduction (Chance)\",\n        \"Type\": \"\"\n    },\n    \"36\": {\n        \"ID\": \"36\",\n        \"Name\": \"Leader Skill Lock (Chance)\",\n        \"Type\": \"\"\n    },\n    \"37\": {\n        \"ID\": \"37\",\n        \"Name\": \"Summon Unit\",\n        \"Type\": \"\"\n    },\n    \"38\": {\n        \"ID\": \"38\",\n        \"Name\": \"Status Cure\",\n        \"Type\": \"\"\n    },\n    \"39\": {\n        \"ID\": \"39\",\n        \"Name\": \"Elemental Damage Reduction\",\n        \"Type\": \"\"\n    },\n    \"40\": {\n        \"ID\": \"40\",\n        \"Name\": \"Status Infliction Added to Attack\",\n        \"Type\": \"\"\n    },\n    \"42\": {\n        \"ID\": \"42\",\n        \"Name\": \"\",\n        \"Type\": \"\"\n    },\n    \"43\": {\n        \"ID\": \"43\",\n        \"Name\": \"Instant OD Fill\",\n        \"Type\": \"\"\n    },\n    \"44\": {\n        \"ID\": \"44\",\n        \"Name\": \"Damage over Time (Additional Damage)\",\n        \"Type\": \"\"\n    },\n    \"45\": {\n        \"ID\": \"45\",\n        \"Name\": \"BB Atk Boost\",\n        \"Type\": \"\"\n    },\n    \"46\": {\n        \"ID\": \"46\",\n        \"Name\": \"Non-Lethal Proportional Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"47\": {\n        \"ID\": \"47\",\n        \"Name\": \"HP Scaled Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"48\": {\n        \"ID\": \"48\",\n        \"Name\": \"Piercing Proportional Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"49\": {\n        \"ID\": \"49\",\n        \"Name\": \"Retire\",\n        \"Type\": \"\"\n    },\n    \"50\": {\n        \"ID\": \"50\",\n        \"Name\": \"Damage Counter\",\n        \"Type\": \"\"\n    },\n    \"51\": {\n        \"ID\": \"51\",\n        \"Name\": \"Parameter Reduction Added to Attack\",\n        \"Type\": \"\"\n    },\n    \"52\": {\n        \"ID\": \"52\",\n        \"Name\": \"BC Efficacy\",\n        \"Type\": \"\"\n    },\n    \"53\": {\n        \"ID\": \"53\",\n        \"Name\": \"Status Counter\",\n        \"Type\": \"\"\n    },\n    \"54\": {\n        \"ID\": \"54\",\n        \"Name\": \"Critical Damage Boost\",\n        \"Type\": \"\"\n    },\n    \"55\": {\n        \"ID\": \"55\",\n        \"Name\": \"Elemental Damage Boost\",\n        \"Type\": \"\"\n    },\n    \"56\": {\n        \"ID\": \"56\",\n        \"Name\": \"Chance KO Resistance (Angel Idol)\",\n        \"Type\": \"\"\n    },\n    \"57\": {\n        \"ID\": \"57\",\n        \"Name\": \"BC Efficacy Reduction\",\n        \"Type\": \"\"\n    },\n    \"58\": {\n        \"ID\": \"58\",\n        \"Name\": \"Spark Vulnerability\",\n        \"Type\": \"\"\n    },\n    \"59\": {\n        \"ID\": \"59\",\n        \"Name\": \"BB Atk Reduction\",\n        \"Type\": \"\"\n    },\n    \"60\": {\n        \"ID\": \"60\",\n        \"Name\": \"\",\n        \"Type\": \"\"\n    },\n    \"61\": {\n        \"ID\": \"61\",\n        \"Name\": \"BB-Scaled Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"62\": {\n        \"ID\": \"62\",\n        \"Name\": \"Barrier\",\n        \"Type\": \"\"\n    },\n    \"63\": {\n        \"ID\": \"63\",\n        \"Name\": \"Selective Buff Wipe\",\n        \"Type\": \"\"\n    },\n    \"64\": {\n        \"ID\": \"64\",\n        \"Name\": \"Consecutive Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"65\": {\n        \"ID\": \"65\",\n        \"Name\": \"Attack Boost on Status Afflicted Foes\",\n        \"Type\": \"\"\n    },\n    \"66\": {\n        \"ID\": \"66\",\n        \"Name\": \"Revive (Chance)\",\n        \"Type\": \"\"\n    },\n    \"67\": {\n        \"ID\": \"67\",\n        \"Name\": \"BC Fill on Spark\",\n        \"Type\": \"\"\n    },\n    \"68\": {\n        \"ID\": \"68\",\n        \"Name\": \"Damage Reduction when Guarding\",\n        \"Type\": \"\"\n    },\n    \"69\": {\n        \"ID\": \"69\",\n        \"Name\": \"BC Fill on Guard\",\n        \"Type\": \"\"\n    },\n    \"70\": {\n        \"ID\": \"70\",\n        \"Name\": \"\",\n        \"Type\": \"\"\n    },\n    \"71\": {\n        \"ID\": \"71\",\n        \"Name\": \"BB Gauge Fill Rate Debuff\",\n        \"Type\": \"\"\n    },\n    \"73\": {\n        \"ID\": \"73\",\n        \"Name\": \"Parameter Reduction Negation\",\n        \"Type\": \"\"\n    },\n    \"75\": {\n        \"ID\": \"75\",\n        \"Name\": \"Element Squad-Scaled Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"76\": {\n        \"ID\": \"76\",\n        \"Name\": \"Extra Action\",\n        \"Type\": \"\"\n    },\n    \"78\": {\n        \"ID\": \"78\",\n        \"Name\": \"Self Parameter Boost\",\n        \"Type\": \"\"\n    },\n    \"79\": {\n        \"ID\": \"79\",\n        \"Name\": \"Player EXP Boost\",\n        \"Type\": \"\"\n    },\n    \"82\": {\n        \"ID\": \"82\",\n        \"Name\": \"\",\n        \"Type\": \"\"\n    },\n    \"83\": {\n        \"ID\": \"83\",\n        \"Name\": \"Spark Critical\",\n        \"Type\": \"\"\n    },\n    \"84\": {\n        \"ID\": \"84\",\n        \"Name\": \"OD Gauge Fill Rate\",\n        \"Type\": \"\"\n    },\n    \"85\": {\n        \"ID\": \"85\",\n        \"Name\": \"Heal when Attacked\",\n        \"Type\": \"\"\n    },\n    \"86\": {\n        \"ID\": \"86\",\n        \"Name\": \"HP Absorption\",\n        \"Type\": \"\"\n    },\n    \"87\": {\n        \"ID\": \"87\",\n        \"Name\": \"Heal on Spark\",\n        \"Type\": \"\"\n    },\n    \"88\": {\n        \"ID\": \"88\",\n        \"Name\": \"Self Spark Boost\",\n        \"Type\": \"\"\n    },\n    \"89\": {\n        \"ID\": \"89\",\n        \"Name\": \"Self Parameter Conversion\",\n        \"Type\": \"\"\n    },\n    \"92\": {\n        \"ID\": \"92\",\n        \"Name\": \"Self Max HP Boost\",\n        \"Type\": \"\"\n    },\n    \"93\": {\n        \"ID\": \"93\",\n        \"Name\": \"Spark/Critical/Elemental Weakness Damage Reduction\",\n        \"Type\": \"\"\n    },\n    \"94\": {\n        \"ID\": \"94\",\n        \"Name\": \"Normal Attacks Hit All Foes\",\n        \"Type\": \"\"\n    },\n    \"95\": {\n        \"ID\": \"95\",\n        \"Name\": \"Nullify Sphere Effects (Sphere Lock)\",\n        \"Type\": \"\"\n    },\n    \"96\": {\n        \"ID\": \"96\",\n        \"Name\": \"Nullify Extra Skill Effects (ES Lock)\",\n        \"Type\": \"\"\n    },\n    \"97\": {\n        \"ID\": \"97\",\n        \"Name\": \"Element Target Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"113\": {\n        \"ID\": \"113\",\n        \"Name\": \"Gradual OD Fill\",\n        \"Type\": \"\"\n    },\n    \"119\": {\n        \"ID\": \"119\",\n        \"Name\": \"Gradual BC Drain\",\n        \"Type\": \"\"\n    },\n    \"123\": {\n        \"ID\": \"123\",\n        \"Name\": \"OD Gauge Reduction\",\n        \"Type\": \"\"\n    },\n    \"126\": {\n        \"ID\": \"126\",\n        \"Name\": \"Damage over Time (Additional Damage) Mitigation\",\n        \"Type\": \"\"\n    },\n    \"127\": {\n        \"ID\": \"127\",\n        \"Name\": \"Lock On\",\n        \"Type\": \"\"\n    },\n    \"130\": {\n        \"ID\": \"130\",\n        \"Name\": \"Parameter Reduction Counter\",\n        \"Type\": \"\"\n    },\n    \"131\": {\n        \"ID\": \"131\",\n        \"Name\": \"\",\n        \"Type\": \"\"\n    },\n    \"132\": {\n        \"ID\": \"132\",\n        \"Name\": \"Critical/Elemental Weakness Vulnerability\",\n        \"Type\": \"\"\n    },\n    \"901\": {\n        \"ID\": \"901\",\n        \"Name\": \"Raid Heal (on Map)\",\n        \"Type\": \"\"\n    },\n    \"902\": {\n        \"ID\": \"902\",\n        \"Name\": \"Raid Parameter Boost\",\n        \"Type\": \"\"\n    },\n    \"903\": {\n        \"ID\": \"903\",\n        \"Name\": \"Raid Boss Reveal\",\n        \"Type\": \"\"\n    },\n    \"905\": {\n        \"ID\": \"905\",\n        \"Name\": \"Raid Teleport\",\n        \"Type\": \"\"\n    },\n    \"906\": {\n        \"ID\": \"906\",\n        \"Name\": \"Raid Flee\",\n        \"Type\": \"\"\n    },\n    \"907\": {\n        \"ID\": \"907\",\n        \"Name\": \"Raid Damage Reduction\",\n        \"Type\": \"\"\n    },\n    \"908\": {\n        \"ID\": \"908\",\n        \"Name\": \"Raid Item Drop Rate Boost\",\n        \"Type\": \"\"\n    },\n    \"10000\": {\n        \"ID\": \"10000\",\n        \"Name\": \"Taunt\",\n        \"Type\": \"\"\n    },\n    \"10001\": {\n        \"ID\": \"10001\",\n        \"Name\": \"Stealth\",\n        \"Type\": \"\"\n    },\n    \"10002\": {\n        \"ID\": \"10002\",\n        \"Name\": \"Shield (old)\",\n        \"Type\": \"\"\n    },\n    \"10003\": {\n        \"ID\": \"10003\",\n        \"Name\": \"Nullify Sphere Effects (Sphere Lock)\",\n        \"Type\": \"\"\n    },\n    \"10004\": {\n        \"ID\": \"10004\",\n        \"Name\": \"Damage Immunity\",\n        \"Type\": \"\"\n    },\n    \"10005\": {\n        \"ID\": \"10005\",\n        \"Name\": \"Turn Skip (short duration)\",\n        \"Type\": \"\"\n    },\n    \"10006\": {\n        \"ID\": \"10006\",\n        \"Name\": \"Turn Skip (long duration)\",\n        \"Type\": \"\"\n    },\n    \"10007\": {\n        \"ID\": \"10007\",\n        \"Name\": \"Evasion\",\n        \"Type\": \"\"\n    },\n    \"10009\": {\n        \"ID\": \"10009\",\n        \"Name\": \"\",\n        \"Type\": \"\"\n    },\n    \"10012\": {\n        \"ID\": \"10012\",\n        \"Name\": \"OD Drain\",\n        \"Type\": \"\"\n    },\n    \"10015\": {\n        \"ID\": \"10015\",\n        \"Name\": \"Elemental Spark Boost\",\n        \"Type\": \"\"\n    },\n    \"10016\": {\n        \"ID\": \"10016\",\n        \"Name\": \"Element Critical Damage Boost\",\n        \"Type\": \"\"\n    },\n    \"10017\": {\n        \"ID\": \"10017\",\n        \"Name\": \"Elemental Shield\",\n        \"Type\": \"\"\n    },\n    \"10018\": {\n        \"ID\": \"10018\",\n        \"Name\": \"Max HP Reduction\",\n        \"Type\": \"\"\n    },\n    \"10019\": {\n        \"ID\": \"10019\",\n        \"Name\": \"Effect Purge\",\n        \"Type\": \"\"\n    },\n    \"10020\": {\n        \"ID\": \"10020\",\n        \"Name\": \"Piercing Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"10021\": {\n        \"ID\": \"10021\",\n        \"Name\": \"Active Healing Reduction\",\n        \"Type\": \"\"\n    },\n    \"10022\": {\n        \"ID\": \"10022\",\n        \"Name\": \"Passive Healing Reduction\",\n        \"Type\": \"\"\n    },\n    \"10023\": {\n        \"ID\": \"10023\",\n        \"Name\": \"HC Efficacy Reduction\",\n        \"Type\": \"\"\n    },\n    \"10025\": {\n        \"ID\": \"10025\",\n        \"Name\": \"KO Resistance Negation\",\n        \"Type\": \"\"\n    },\n    \"10026\": {\n        \"ID\": \"10026\",\n        \"Name\": \"Doom\",\n        \"Type\": \"\"\n    },\n    \"11000\": {\n        \"ID\": \"11000\",\n        \"Name\": \"Negative HP-Scaled Damage\",\n        \"Type\": \"Attack\"\n    },\n    \"11001\": {\n        \"ID\": \"11001\",\n        \"Name\": \"Max HP% DoT of Weaker Element Enemies\",\n        \"Type\": \"\"\n    },\n    \"11002\": {\n        \"ID\": \"11002\",\n        \"Name\": \"HP Limit Break, Convert to HP\",\n        \"Type\": \"\"\n    },\n    \"11003\": {\n        \"ID\": \"11003\",\n        \"Name\": \"Effect Negation\",\n        \"Type\": \"\"\n    },\n    \"70001\": {\n        \"ID\": \"70001\",\n        \"Name\": \"Mana Bubble Shield\",\n        \"Type\": \"\"\n    },\n    \"70002\": {\n        \"ID\": \"70002\",\n        \"Name\": \"Recast\",\n        \"Type\": \"\"\n    },\n    \"2-5\": {\n        \"ID\": \"2-5\",\n        \"Name\": \"Burst Heal and DEF/REC Boost\",\n        \"Type\": \"\"\n    }\n});\n","export var ArenaCondition;\n(function (ArenaCondition) {\n    /* eslint-disable @typescript-eslint/camelcase */\n    ArenaCondition[\"hp_50pr_under\"] = \"hp_50pr_under\";\n    ArenaCondition[\"hp_50pr_over\"] = \"hp_50pr_over\";\n    ArenaCondition[\"hp_75pr_under\"] = \"hp_75pr_under\";\n    ArenaCondition[\"hp_25pr_under\"] = \"hp_25pr_under\";\n    ArenaCondition[\"hp_min\"] = \"hp_min\";\n    ArenaCondition[\"hp_max\"] = \"hp_max\";\n    ArenaCondition[\"atk_max\"] = \"atk_max\";\n    ArenaCondition[\"random\"] = \"random\";\n    /* eslint-enable @typescript-eslint/camelcase */\n})(ArenaCondition || (ArenaCondition = {}));\nexport var MoveType;\n(function (MoveType) {\n    MoveType[MoveType[\"Moving\"] = 1] = \"Moving\";\n    MoveType[MoveType[\"Teleporting\"] = 2] = \"Teleporting\";\n    MoveType[MoveType[\"NonMoving\"] = 3] = \"NonMoving\";\n})(MoveType || (MoveType = {}));\nexport var TargetArea;\n(function (TargetArea) {\n    TargetArea[\"Aoe\"] = \"aoe\";\n    TargetArea[\"Single\"] = \"single\";\n    TargetArea[\"Random\"] = \"random\";\n})(TargetArea || (TargetArea = {}));\nexport var TargetAreaShorthand;\n(function (TargetAreaShorthand) {\n    TargetAreaShorthand[\"Aoe\"] = \"AOE\";\n    TargetAreaShorthand[\"Single\"] = \"ST\";\n    TargetAreaShorthand[\"Random\"] = \"RT\";\n})(TargetAreaShorthand || (TargetAreaShorthand = {}));\nexport var TargetType;\n(function (TargetType) {\n    TargetType[\"Self\"] = \"self\";\n    TargetType[\"Party\"] = \"party\";\n    TargetType[\"Enemy\"] = \"enemy\";\n})(TargetType || (TargetType = {}));\nexport var SpPassiveType;\n(function (SpPassiveType) {\n    SpPassiveType[\"AddPassive\"] = \"passive\";\n    SpPassiveType[\"EnhanceBb\"] = \"add to bb\";\n    SpPassiveType[\"EnhanceSbb\"] = \"add to sbb\";\n    SpPassiveType[\"EnhanceUbb\"] = \"add to ubb\";\n    SpPassiveType[\"EnhancePassive\"] = \"add to passive\";\n})(SpPassiveType || (SpPassiveType = {}));\nexport var SphereTypeName;\n(function (SphereTypeName) {\n    SphereTypeName[\"None\"] = \"None\";\n    SphereTypeName[\"Status Enhancing\"] = \"Status Enhancing\";\n    SphereTypeName[\"Critical\"] = \"Critical\";\n    SphereTypeName[\"Drop\"] = \"Drop\";\n    SphereTypeName[\"Ailment Inducing\"] = \"Ailment Inducing\";\n    SphereTypeName[\"Element Fusion\"] = \"Element Fusion\";\n    SphereTypeName[\"BB Gauge\"] = \"BB Gauge\";\n    SphereTypeName[\"HP Recovery\"] = \"HP Recovery\";\n    SphereTypeName[\"Target Setting\"] = \"Target Setting\";\n    SphereTypeName[\"Damage Deflecting\"] = \"Damage Deflecting\";\n    SphereTypeName[\"Damage Reducing\"] = \"Damage Reducing\";\n    SphereTypeName[\"Spark\"] = \"Spark\";\n    SphereTypeName[\"Defense Piercing\"] = \"Defense Piercing\";\n    SphereTypeName[\"Attack Boosting\"] = \"Attack Boosting\";\n    SphereTypeName[\"Special\"] = \"Special\";\n})(SphereTypeName || (SphereTypeName = {}));\nexport var SphereTypeId;\n(function (SphereTypeId) {\n    SphereTypeId[SphereTypeId[\"None\"] = 0] = \"None\";\n    SphereTypeId[SphereTypeId[\"Status Enhancing\"] = 1] = \"Status Enhancing\";\n    SphereTypeId[SphereTypeId[\"Critical\"] = 2] = \"Critical\";\n    SphereTypeId[SphereTypeId[\"Drop\"] = 3] = \"Drop\";\n    SphereTypeId[SphereTypeId[\"Ailment Inducing\"] = 4] = \"Ailment Inducing\";\n    SphereTypeId[SphereTypeId[\"Element Fusion\"] = 5] = \"Element Fusion\";\n    SphereTypeId[SphereTypeId[\"BB Gauge\"] = 6] = \"BB Gauge\";\n    SphereTypeId[SphereTypeId[\"HP Recovery\"] = 7] = \"HP Recovery\";\n    SphereTypeId[SphereTypeId[\"Target Setting\"] = 8] = \"Target Setting\";\n    SphereTypeId[SphereTypeId[\"Damage Deflecting\"] = 9] = \"Damage Deflecting\";\n    SphereTypeId[SphereTypeId[\"Damage Reducing\"] = 10] = \"Damage Reducing\";\n    SphereTypeId[SphereTypeId[\"Spark\"] = 11] = \"Spark\";\n    SphereTypeId[SphereTypeId[\"Defense Piercing\"] = 12] = \"Defense Piercing\";\n    SphereTypeId[SphereTypeId[\"Attack Boosting\"] = 13] = \"Attack Boosting\";\n    SphereTypeId[SphereTypeId[\"Special\"] = 14] = \"Special\";\n})(SphereTypeId || (SphereTypeId = {}));\nexport var SpCategoryName;\n(function (SpCategoryName) {\n    SpCategoryName[\"Parameter Boost\"] = \"Parameter Boost\";\n    SpCategoryName[\"Spark\"] = \"Spark\";\n    SpCategoryName[\"Critical Hits\"] = \"Critical Hits\";\n    SpCategoryName[\"Attack Boost\"] = \"Attack Boost\";\n    SpCategoryName[\"BB Gauge\"] = \"BB Gauge\";\n    SpCategoryName[\"HP Recovery\"] = \"HP Recovery\";\n    SpCategoryName[\"Drops\"] = \"Drops\";\n    SpCategoryName[\"Ailment Resistance\"] = \"Ailment Resistance\";\n    SpCategoryName[\"Ailment Infliction\"] = \"Ailment Infliction\";\n    SpCategoryName[\"Damage Reduction\"] = \"Damage Reduction\";\n    SpCategoryName[\"Special\"] = \"Special\";\n    SpCategoryName[\"Unknown\"] = \"Unknown\";\n})(SpCategoryName || (SpCategoryName = {}));\nexport var SpCategoryId;\n(function (SpCategoryId) {\n    SpCategoryId[\"Parameter Boost\"] = \"1\";\n    SpCategoryId[\"Spark\"] = \"2\";\n    SpCategoryId[\"Critical Hits\"] = \"3\";\n    SpCategoryId[\"Attack Boost\"] = \"4\";\n    SpCategoryId[\"BB Gauge\"] = \"5\";\n    SpCategoryId[\"HP Recovery\"] = \"6\";\n    SpCategoryId[\"Drops\"] = \"7\";\n    SpCategoryId[\"Ailment Resistance\"] = \"8\";\n    SpCategoryId[\"Ailment Infliction\"] = \"9\";\n    SpCategoryId[\"Damage Reduction\"] = \"10\";\n    SpCategoryId[\"Special\"] = \"11\";\n})(SpCategoryId || (SpCategoryId = {}));\nexport var UnitAnimationKey;\n(function (UnitAnimationKey) {\n    UnitAnimationKey[\"Attack\"] = \"attack\";\n    UnitAnimationKey[\"Idle\"] = \"idle\";\n    UnitAnimationKey[\"Move\"] = \"move\";\n})(UnitAnimationKey || (UnitAnimationKey = {}));\nexport var UnitElement;\n(function (UnitElement) {\n    UnitElement[\"Fire\"] = \"fire\";\n    UnitElement[\"Water\"] = \"water\";\n    UnitElement[\"Earth\"] = \"earth\";\n    UnitElement[\"Thunder\"] = \"thunder\";\n    UnitElement[\"Light\"] = \"light\";\n    UnitElement[\"Dark\"] = \"dark\";\n})(UnitElement || (UnitElement = {}));\nexport var UnitGender;\n(function (UnitGender) {\n    UnitGender[\"Male\"] = \"male\";\n    UnitGender[\"Female\"] = \"female\";\n    UnitGender[\"Other\"] = \"other\";\n})(UnitGender || (UnitGender = {}));\nexport var UnitGettingType;\n(function (UnitGettingType) {\n    UnitGettingType[\"Ineligible\"] = \"not eligible for achievement\";\n    UnitGettingType[\"Farmable\"] = \"farmable\";\n    UnitGettingType[\"RareSummon\"] = \"rare summon\";\n})(UnitGettingType || (UnitGettingType = {}));\nexport var UnitKind;\n(function (UnitKind) {\n    UnitKind[\"Normal\"] = \"normal\";\n    UnitKind[\"Evolution\"] = \"evo\";\n    UnitKind[\"Enhancing\"] = \"enhancing\";\n    UnitKind[\"Sale\"] = \"sale\";\n})(UnitKind || (UnitKind = {}));\nexport var UnitType;\n(function (UnitType) {\n    UnitType[\"Lord\"] = \"lord\";\n    UnitType[\"Anima\"] = \"anima\";\n    UnitType[\"Breaker\"] = \"breaker\";\n    UnitType[\"Guardian\"] = \"guardian\";\n    UnitType[\"Oracle\"] = \"oracle\";\n    UnitType[\"Rex\"] = \"rex\";\n})(UnitType || (UnitType = {}));\nexport var ItemType;\n(function (ItemType) {\n    ItemType[\"Consumable\"] = \"consumable\";\n    ItemType[\"Material\"] = \"material\";\n    ItemType[\"Sphere\"] = \"sphere\";\n    ItemType[\"EvolutionMaterial\"] = \"evomat\";\n    ItemType[\"SummonerConsumable\"] = \"summoner_consumable\";\n    ItemType[\"LeaderSkillSphere\"] = \"ls_sphere\";\n})(ItemType || (ItemType = {}));\nexport var MimicUnitIds;\n(function (MimicUnitIds) {\n    MimicUnitIds[\"Mimic\"] = \"60142\";\n    MimicUnitIds[\"BatMimic\"] = \"60143\";\n    MimicUnitIds[\"DragonMimic\"] = \"60144\";\n    MimicUnitIds[\"MetalMimic\"] = \"60224\";\n})(MimicUnitIds || (MimicUnitIds = {}));\n/**\n * @description Known values for the monster groups used in {@link IMimicInfo}\n */\nexport const MimicMonsterGroupMapping = {\n    '1000': MimicUnitIds.Mimic,\n    '1100': MimicUnitIds.BatMimic,\n    '1101': MimicUnitIds.BatMimic,\n    '1200': MimicUnitIds.DragonMimic,\n    '1300': MimicUnitIds.MetalMimic,\n};\n","import { PROC_METADATA, ProcBuffType, PASSIVE_METADATA, } from './buff-metadata';\nimport { TargetArea, } from './datamine-types';\n/**\n * @description Get the associated metadata entry for a given proc ID\n * @param id proc ID to get metadata for\n * @returns corresponding proc metadata entry if it exists, undefined otherwise\n */\nexport function getMetadataForProc(id) {\n    return Object.hasOwnProperty.call(PROC_METADATA, id)\n        ? PROC_METADATA[id]\n        : (void 0);\n}\n/**\n * @description Get the associated metadata entry for a given passive ID\n * @param id passive ID to get metadata for\n * @returns corresponding passive metadata entry if it exists, undefined otherwise\n */\nexport function getMetadataForPassive(id) {\n    return Object.hasOwnProperty.call(PASSIVE_METADATA, id)\n        ? PASSIVE_METADATA[id]\n        : (void 0);\n}\n/**\n * @description Determine if a given proc ID's type is an attack\n * @param id proc ID to check\n * @returns whether the given ID corresponds to a proc ID whose type is attack\n */\nexport function isAttackingProcId(id) {\n    const metadataEntry = getMetadataForProc(id);\n    return !!metadataEntry && metadataEntry.Type === ProcBuffType.Attack;\n}\n/**\n * @description Get the associated name for a given proc ID\n * @param id proc ID to get the name of\n * @returns the name of the proc ID if it exists, empty string otherwise\n */\nexport function getNameForProc(id) {\n    const metadataEntry = getMetadataForProc(id);\n    return (!!metadataEntry && metadataEntry.Name) || '';\n}\n/**\n * @description Get the associated name for a given passive ID\n * @param id passive ID to get the name of\n * @returns the name of the passive ID if it exists, empty string otherwise\n */\nexport function getNameForPassive(id) {\n    const metadataEntry = getMetadataForPassive(id);\n    return (!!metadataEntry && metadataEntry.Name) || '';\n}\n/**\n * @description Determine if a given effect object is a proc effect based on existing properties.\n * Do note that it does not check the validity of each property, only the existence.\n * @param effect object to check\n * @returns whether the given effect object is considered a proc effect based on its properties\n */\nexport function isProcEffect(effect) {\n    return !!effect &&\n        typeof effect === 'object' &&\n        (Object.hasOwnProperty.call(effect, 'proc id') || Object.hasOwnProperty.call(effect, 'unknown proc id'));\n}\n/**\n * @description Determine if a given effect object is a passive effect based on existing properties.\n * Do note that it does not check the validity of each property, only the existence.\n * @param effect object to check\n * @returns whether the given effect object is considered a passive effect based on its properties\n */\nexport function isPassiveEffect(effect) {\n    return !!effect &&\n        typeof effect === 'object' &&\n        (Object.hasOwnProperty.call(effect, 'passive id') || Object.hasOwnProperty.call(effect, 'unknown passive id'));\n}\n/**\n * @description Create a list of objects that contain both the effect data and its corresponding damage frame\n * @param effects List of proc effects to combine; must be the same length as the `damageFrames`\n * @param damageFrames List of damage frames whose index corresponds with the effect in the `effects` list\n * @returns collection of composite objects that contain the proc effect and the corresponding frames entry\n */\nexport function combineEffectsAndDamageFrames(effects, damageFrames) {\n    let combinedEntries = [];\n    if (Array.isArray(effects) && effects.length > 0 && Array.isArray(damageFrames) && effects.length === damageFrames.length) {\n        combinedEntries = effects.map((effect, i) => {\n            const correspondingFrameEntry = damageFrames[i];\n            return {\n                delay: effect['effect delay time(ms)/frame'],\n                effect,\n                frames: correspondingFrameEntry,\n                id: `${effect['proc id'] || effect['unknown proc id']}`,\n                targetArea: effect['random attack'] ? TargetArea.Random : effect['target area'],\n                targetType: effect['target type'],\n            };\n        });\n    }\n    return combinedEntries;\n}\n/**\n * @description Get the proc/passive ID of a given object\n * @param effect Object to get the effect ID from\n * @returns The proc/passive ID of the input effect if it exists; empty string otherwise\n */\nexport function getEffectId(effect) {\n    let resultId = '';\n    if (effect) {\n        resultId = effect['proc id'] || effect['unknown proc id'] ||\n            effect['passive id'] || effect['unknown passive id'] || '';\n    }\n    return resultId;\n}\n/**\n * @description Get the name of a given object\n * @param effect Object to get the name from\n * @returns The name of the input effect if it exists; empty string otherwise\n */\nexport function getEffectName(effect) {\n    let resultName = '';\n    const effectId = getEffectId(effect);\n    if (isPassiveEffect(effect)) {\n        resultName = getNameForPassive(effectId);\n    }\n    else if (isProcEffect(effect)) {\n        resultName = getNameForProc(effectId);\n    }\n    return resultName;\n}\n","export var KNOWN_PROC_ID;\n(function (KNOWN_PROC_ID) {\n    KNOWN_PROC_ID[\"BurstHeal\"] = \"2\";\n})(KNOWN_PROC_ID || (KNOWN_PROC_ID = {}));\nexport var KNOWN_PASSIVE_ID;\n(function (KNOWN_PASSIVE_ID) {\n    KNOWN_PASSIVE_ID[\"TriggeredEffect\"] = \"66\";\n})(KNOWN_PASSIVE_ID || (KNOWN_PASSIVE_ID = {}));\n","import { getEffectId, isAttackingProcId } from './buffs';\nimport { KNOWN_PROC_ID } from './constants';\n/**\n * @description Grab the level entry of a burst at a given level (or the last level if no level is given)\n * @param burst Burst to get level entry from\n * @param level Optional 1-indexed level to get; if not specified, the last level of the burst is used.\n * @returns the level entry of a burst at a given level (or last level if no level is given) if it exists, undefined otherwise\n */\nexport function getLevelEntryForBurst(burst, level) {\n    const burstEffectsByLevel = (burst && Array.isArray(burst.levels)) ? burst.levels : [];\n    let levelIndex;\n    if (level !== null && !isNaN(level)) {\n        // 1-indexed\n        levelIndex = (+level - 1);\n    }\n    else {\n        // default to last entry in burst\n        levelIndex = burstEffectsByLevel.length - 1;\n    }\n    return burstEffectsByLevel[levelIndex];\n}\n/**\n * @description Grab the effects at the level entry of a burst at a given level (or the last level if no level is given)\n * @param burst Burst to get effects from\n * @param level Optional 1-indexed level to get entries from; if not specified, the last level of the burst is used.\n * @returns the effects at the level entry of a burst at a given level (or last level if no level is given) if it exists, an empty array otherwise\n */\nexport function getEffectsForBurst(burst, level) {\n    const levelEntry = getLevelEntryForBurst(burst, level);\n    return (levelEntry && Array.isArray(levelEntry.effects)) ? levelEntry.effects : [];\n}\n/**\n * @description Get the extra attack damage frames entry based on the damage frames of a burst. Also apply the given effect delay to the resulting damage frames entry.\n * @param damageFrames damage frames that each have their own proc ID\n * @param effectDelay optional effect delay to apply to the resulting damage frames entry\n * @returns damage frames entry whose frames are based on the input damage frames\n */\nexport function getExtraAttackDamageFramesEntry(damageFrames, effectDelay = '0.0/0') {\n    // relevant frames are all effects for healing or attacking\n    const inputFrames = Array.isArray(damageFrames) ? damageFrames : [];\n    const relevantFrames = inputFrames.filter(frame => {\n        const procId = getEffectId(frame);\n        return procId === KNOWN_PROC_ID.BurstHeal || isAttackingProcId(procId);\n    });\n    const unifiedFrames = relevantFrames.reduce((acc, frameEntry, index) => {\n        const keepFirstFrame = index === 0;\n        const numFrames = frameEntry['frame times'].length;\n        const damageDistribution = frameEntry['hit dmg% distribution'];\n        const frameTimes = frameEntry['frame times'];\n        for (let frameIndex = keepFirstFrame ? 0 : 1; frameIndex < numFrames; ++frameIndex) {\n            acc.push({\n                damage: damageDistribution[frameIndex],\n                time: frameTimes[frameIndex],\n            });\n        }\n        return acc;\n    }, []);\n    const resultDamageFramesEntry = {\n        'effect delay time(ms)/frame': effectDelay,\n        'frame times': [],\n        'hit dmg% distribution': [],\n        'hit dmg% distribution (total)': 0,\n        hits: 0,\n    };\n    unifiedFrames.sort((a, b) => a.time - b.time)\n        .forEach(({ time, damage }) => {\n        resultDamageFramesEntry['frame times'].push(time);\n        resultDamageFramesEntry['hit dmg% distribution'].push(damage);\n        resultDamageFramesEntry['hit dmg% distribution (total)'] += damage;\n    });\n    resultDamageFramesEntry.hits = resultDamageFramesEntry['frame times'].length;\n    return resultDamageFramesEntry;\n}\n","/**\n * @description Get the effects of a given extra skill\n * @param skill extra skill to get the effects of\n * @returns the effects of the given extra skill if they exist, an empty array otherwise\n */\nexport function getEffectsForExtraSkill(skill) {\n    return (skill && Array.isArray(skill.effects)) ? skill.effects : [];\n}\n","/**\n * @description Get the effects of a given item\n * @param item item to get the effects of, if any are present\n * @returns the effects of the given item if they exist, an empty array otherwise\n */\nexport function getEffectsForItem(item) {\n    let result = [];\n    if (item && item.effect) {\n        if (Array.isArray(item.effect)) {\n            result = item.effect;\n        }\n        else if (Array.isArray(item.effect.effect)) {\n            const { effect, target_area: targetArea, target_type: targetType } = item.effect;\n            result = effect.map(e => {\n                // apply target data to each effect\n                const fullProcEffect = Object.assign({}, e);\n                fullProcEffect['target area'] = targetArea;\n                fullProcEffect['target type'] = targetType;\n                return fullProcEffect;\n            });\n        }\n    }\n    return result;\n}\n/**\n * @description Generate a URL to display the image with the given item thumbnail filename\n * @param baseContentUrl Base URL of the server\n * @param fileName name of the file that represents the thumbnail image for a given item\n * @returns generated URL based on the given content URL and file name\n */\nexport function getItemImageUrl(baseContentUrl, fileName) {\n    return `${baseContentUrl || ''}/item/${fileName || ''}`;\n}\n","/**\n * @description Get the effects of a given leader skill\n * @param skill leader skill to get the effects of\n * @returns the effects of the given leader skill if they exist, an empty array otherwise\n */\nexport function getEffectsForLeaderSkill(skill) {\n    return skill && Array.isArray(skill.effects) ? skill.effects : [];\n}\n","/**\n * @description Generate the file names for each of the image type for a given unit ID\n * @param id the unit ID to use to generate the file names\n * @param suffix optional parameter that's useful for things like alternate art\n * @returns set of file names for each image type (spritesheet, battle avatar, guide avatar, full illustration)\n */\nexport function getUnitImageFileNames(id, suffix = '') {\n    const fileNameSuffix = `${id || ''}${suffix || ''}.png`;\n    return {\n        spritesheet: `unit_anime_${fileNameSuffix}`,\n        battleAvatar: `unit_ills_battle_${fileNameSuffix}`,\n        guideAvatar: `unit_ills_thum_${fileNameSuffix}`,\n        fullIllustration: `unit_ills_full_${fileNameSuffix}`,\n    };\n}\n/**\n * @description Generate a URL to display the image with the given unit filename\n * @param baseContentUrl Base URL of the server\n * @param fileName name of the file that represents an image for a given unit\n * @returns generated URL based on the given content URL and file name\n */\nexport function getUnitImageUrl(baseContentUrl, fileName) {\n    return `${baseContentUrl || ''}/unit/img/${fileName || ''}`;\n}\n","import { SpCategoryName, } from './datamine-types';\n/**\n * @ignore\n */\nconst CHARACTER_CODE_FOR_UPPERCASE_A = 'A'.charCodeAt(0);\n/**\n * @ignore\n */\nconst CHARACTER_CODE_FOR_LOWERCASE_A = 'a'.charCodeAt(0);\n/**\n * @ignore\n */\nconst CHARACTER_CODE_FOR_NUMBER_0 = '0'.charCodeAt(0);\n/**\n * @description Get the effects of a given SP Enhancement Entry\n * @param entry SP Enhancement Entry to get the effects of\n * @returns the effects of the given SP Enhancement Entry if they exist, an empty array otherwise\n */\nexport function getEffectsForSpEnhancement(entry) {\n    const result = [];\n    if (entry && entry.skill && Array.isArray(entry.skill.effects)) {\n        const effectWrappers = entry.skill.effects;\n        effectWrappers.forEach(effectWrapper => {\n            Object.keys(effectWrapper).forEach(spType => {\n                const originalEffect = effectWrapper[spType];\n                const unwrappedEffect = Object.assign(Object.assign({}, originalEffect), { sp_type: spType });\n                result.push(unwrappedEffect);\n            });\n        });\n    }\n    return result;\n}\n/**\n * @description Get the associated category name with a given category ID.\n * @param categoryId Category ID to get the name of\n * @returns The name of the given category ID or the string 'Unknown'.\n */\nexport function getSpCategoryName(categoryId) {\n    let result;\n    const numericalCategoryId = +categoryId;\n    switch (numericalCategoryId) {\n        case 1:\n            result = SpCategoryName['Parameter Boost'];\n            break;\n        case 2:\n            result = SpCategoryName.Spark;\n            break;\n        case 3:\n            result = SpCategoryName['Critical Hits'];\n            break;\n        case 4:\n            result = SpCategoryName['Attack Boost'];\n            break;\n        case 5:\n            result = SpCategoryName['BB Gauge'];\n            break;\n        case 6:\n            result = SpCategoryName['HP Recovery'];\n            break;\n        case 7:\n            result = SpCategoryName.Drops;\n            break;\n        case 8:\n            result = SpCategoryName['Ailment Resistance'];\n            break;\n        case 9:\n            result = SpCategoryName['Ailment Infliction'];\n            break;\n        case 10:\n            result = SpCategoryName['Damage Reduction'];\n            break;\n        case 11:\n            result = SpCategoryName.Special;\n            break;\n        default:\n            result = SpCategoryName.Unknown;\n            break;\n    }\n    return result;\n}\n/**\n * @description Get the corresponding character code for a given index.\n * It expects an index between 0 and 61 inclusive; will return an empty string if\n * the given value is outside of the range.\n * @param index Index of an SP entry in a given skills array\n * @returns The corresponding single alphanumeric character to the given index\n * or an empty string if the index is invalid.\n */\nexport function spIndexToCode(index) {\n    let result = '';\n    let correspondingCharacterCode = -1;\n    if (Number.isInteger(index)) {\n        if (index >= 0 && index <= 25) { // A-Z\n            correspondingCharacterCode = index + CHARACTER_CODE_FOR_UPPERCASE_A;\n        }\n        else if (index >= 26 && index <= 51) { // a-z\n            correspondingCharacterCode = (index - 26) + CHARACTER_CODE_FOR_LOWERCASE_A;\n        }\n        else if (index >= 52 && index <= 61) { // 0-9\n            correspondingCharacterCode = (index - 52) + CHARACTER_CODE_FOR_NUMBER_0;\n        }\n    }\n    if (correspondingCharacterCode !== -1) {\n        result = String.fromCharCode(correspondingCharacterCode);\n    }\n    return result;\n}\n/**\n * @description Get the corresponding index for a given character code.\n * It expects an alphanumeric character and will return -1 otherwise.\n * @param code Character code an SP entry in a given skills array\n * @returns The corresponding index to the given character or -1 if the\n * character is invalid.\n */\nexport function spCodeToIndex(code) {\n    let result = -1;\n    let characterCodeOffset = -1;\n    if (!!code && typeof code === 'string' && code.length === 1) {\n        if (code >= 'A' && code <= 'Z') {\n            characterCodeOffset = CHARACTER_CODE_FOR_UPPERCASE_A;\n        }\n        else if (code >= 'a' && code <= 'z') {\n            characterCodeOffset = CHARACTER_CODE_FOR_LOWERCASE_A - 26;\n        }\n        else if (code >= '0' && code <= '9') {\n            characterCodeOffset = CHARACTER_CODE_FOR_NUMBER_0 - 52;\n        }\n    }\n    if (characterCodeOffset !== -1) {\n        result = code.charCodeAt(0) - characterCodeOffset;\n    }\n    return result;\n}\n/**\n * @description Extract the ID of a string in the format of `number@actualId`. If there\n * is no value after the @ character or if no @ character is present, the original ID is returned.\n * This is particularly useful for extracting the ID of [[ISpEnhancementEntry.dependency|`ISpEnhancementEntry.dependency`]]\n * @param id Original SP Enhancement Entry ID\n * @returns The ID of a string in the format of `number@actualId`, or the original input if\n * there is no @ character or no value after the @ character.\n */\nexport function getSpEntryId(id) {\n    return (typeof id === 'string' && id.split('@')[1]) || id;\n}\n/**\n * @description Get the first SP Enhancement Entry that matches the given SP Entry ID, if it exists.\n * @param id SP Enhancement entry ID\n * @param entries Collection of SP Enhancement entries to search in\n * @returns The corresponding SP Enhancement entry with the given SP ID, undefined otherwise.\n */\nexport function getSpEntryWithId(id, entries) {\n    const spId = getSpEntryId(id);\n    return (id && Array.isArray(entries) && entries.find(e => getSpEntryId(e && e.id) === spId)) || void 0;\n}\n/**\n * @description Get all SP Enhancement entries that one would need to unlock the given SP entry.\n * @param entry SP Entry to get dependencies for.\n * @param allEntries Collection of SP Entries to search in.\n * @param addedEntries Entries that have already been added to the resulting collection; used to handle circular references.\n * @returns Collection of SP Enhancement entries (if any) that are required to unlock the given SP entry.\n */\nexport function getAllDependenciesForSpEntry(entry, allEntries, addedEntries = new Set()) {\n    let dependencies = [];\n    if (entry && entry.dependency && Array.isArray(allEntries) && allEntries.length > 0) {\n        const dependencyId = getSpEntryId(entry.dependency);\n        const dependencyEntry = allEntries.find(s => getSpEntryId(s && s.id) === dependencyId);\n        if (dependencyEntry && !addedEntries.has(dependencyEntry)) {\n            addedEntries.add(dependencyEntry);\n            const subDependencies = getAllDependenciesForSpEntry(dependencyEntry, allEntries, addedEntries);\n            dependencies = [dependencyEntry].concat(subDependencies);\n        }\n    }\n    return dependencies;\n}\n/**\n * @description Get all SP Enhancement entries that require the given SP entry in order to be unlockable.\n * @param entry SP Entry to get dependents for.\n * @param allEntries Collection of SP Entries to search in.\n * @param addedEntries Entries that have already been added to the resulting collection; used to handle circular references.\n * @returns Collection of SP Enhancement entries (if any) that require the given SP entry in order to be unlockable.\n */\nexport function getAllEntriesThatDependOnSpEntry(entry, allEntries, addedEntries = new Set()) {\n    let dependents = [];\n    if (entry && entry.id && Array.isArray(allEntries) && allEntries.length > 0) {\n        const entryId = entry.id;\n        dependents = allEntries\n            .filter(s => {\n            return s.dependency &&\n                s.dependency.includes(entryId) &&\n                !addedEntries.has(s);\n        });\n        dependents.forEach(dependent => {\n            addedEntries.add(dependent);\n            const subDependents = getAllEntriesThatDependOnSpEntry(dependent, allEntries, addedEntries);\n            dependents = dependents.concat(subDependents);\n        });\n    }\n    return dependents;\n}\n","import * as bursts from './bursts';\nimport * as buffs from './buffs';\nimport * as datamineTypes from './datamine-types';\nimport * as extraSkills from './extra-skills';\nimport * as items from './items';\nimport * as leaderSkills from './leader-skills';\nimport * as units from './units';\nimport * as spEnhancements from './sp-enhancements';\nimport version from './version';\nexport default Object.freeze({\n    buffs,\n    bursts,\n    datamineTypes,\n    extraSkills,\n    items,\n    leaderSkills,\n    units,\n    spEnhancements,\n    version,\n});\n","/* NOTE: this file is automatically generated; do not edit this file */\nexport default '0.5.0';\n"]}